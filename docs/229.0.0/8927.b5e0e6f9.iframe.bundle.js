(self.webpackChunk_blueprint_dx_micro_interaction_components=self.webpackChunk_blueprint_dx_micro_interaction_components||[]).push([[8927],{"./node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{BN:()=>MDXContext,RP:()=>useMDXComponents,gz:()=>withMDXComponents,xA:()=>MDXProvider});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./node_modules/@storybook/addon-docs/dist/blocks.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Jl:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.Jl,W8:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.W8,rE:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.rE,xz:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.xz,yt:()=>_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__.yt});var _storybook_client_logger__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("@storybook/client-logger"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/addon-docs/node_modules/@storybook/blocks/dist/index.mjs");(0,_storybook_client_logger__WEBPACK_IMPORTED_MODULE_0__.deprecate)("Import from '@storybook/addon-docs/blocks' is deprecated. Please import from '@storybook/blocks' instead.")},"./node_modules/css-tree/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{I6:()=>find,JW:()=>findAll,qg:()=>lib_parse});var token_before_namespaceObject={};__webpack_require__.r(token_before_namespaceObject),__webpack_require__.d(token_before_namespaceObject,{safe:()=>safe,spec:()=>spec});var units_namespaceObject={};__webpack_require__.r(units_namespaceObject),__webpack_require__.d(units_namespaceObject,{angle:()=>angle,decibel:()=>decibel,flex:()=>flex,frequency:()=>frequency,length:()=>units_length,resolution:()=>resolution,semitones:()=>semitones,time:()=>time});var trace_namespaceObject={};__webpack_require__.r(trace_namespaceObject),__webpack_require__.d(trace_namespaceObject,{getTrace:()=>getTrace,isKeyword:()=>isKeyword,isProperty:()=>isProperty,isType:()=>isType});var AnPlusB_namespaceObject={};__webpack_require__.r(AnPlusB_namespaceObject),__webpack_require__.d(AnPlusB_namespaceObject,{generate:()=>AnPlusB_generate,name:()=>AnPlusB_name,parse:()=>AnPlusB_parse,structure:()=>structure});var Atrule_namespaceObject={};__webpack_require__.r(Atrule_namespaceObject),__webpack_require__.d(Atrule_namespaceObject,{generate:()=>Atrule_generate,name:()=>Atrule_name,parse:()=>Atrule_parse,structure:()=>Atrule_structure,walkContext:()=>walkContext});var AtrulePrelude_namespaceObject={};__webpack_require__.r(AtrulePrelude_namespaceObject),__webpack_require__.d(AtrulePrelude_namespaceObject,{generate:()=>AtrulePrelude_generate,name:()=>AtrulePrelude_name,parse:()=>AtrulePrelude_parse,structure:()=>AtrulePrelude_structure,walkContext:()=>AtrulePrelude_walkContext});var AttributeSelector_namespaceObject={};__webpack_require__.r(AttributeSelector_namespaceObject),__webpack_require__.d(AttributeSelector_namespaceObject,{generate:()=>AttributeSelector_generate,name:()=>AttributeSelector_name,parse:()=>AttributeSelector_parse,structure:()=>AttributeSelector_structure});var Block_namespaceObject={};__webpack_require__.r(Block_namespaceObject),__webpack_require__.d(Block_namespaceObject,{generate:()=>Block_generate,name:()=>Block_name,parse:()=>Block_parse,structure:()=>Block_structure,walkContext:()=>Block_walkContext});var Brackets_namespaceObject={};__webpack_require__.r(Brackets_namespaceObject),__webpack_require__.d(Brackets_namespaceObject,{generate:()=>Brackets_generate,name:()=>Brackets_name,parse:()=>Brackets_parse,structure:()=>Brackets_structure});var CDC_namespaceObject={};__webpack_require__.r(CDC_namespaceObject),__webpack_require__.d(CDC_namespaceObject,{generate:()=>CDC_generate,name:()=>CDC_name,parse:()=>CDC_parse,structure:()=>CDC_structure});var CDO_namespaceObject={};__webpack_require__.r(CDO_namespaceObject),__webpack_require__.d(CDO_namespaceObject,{generate:()=>CDO_generate,name:()=>CDO_name,parse:()=>CDO_parse,structure:()=>CDO_structure});var ClassSelector_namespaceObject={};__webpack_require__.r(ClassSelector_namespaceObject),__webpack_require__.d(ClassSelector_namespaceObject,{generate:()=>ClassSelector_generate,name:()=>ClassSelector_name,parse:()=>ClassSelector_parse,structure:()=>ClassSelector_structure});var Combinator_namespaceObject={};__webpack_require__.r(Combinator_namespaceObject),__webpack_require__.d(Combinator_namespaceObject,{generate:()=>Combinator_generate,name:()=>Combinator_name,parse:()=>Combinator_parse,structure:()=>Combinator_structure});var Comment_namespaceObject={};__webpack_require__.r(Comment_namespaceObject),__webpack_require__.d(Comment_namespaceObject,{generate:()=>Comment_generate,name:()=>Comment_name,parse:()=>Comment_parse,structure:()=>Comment_structure});var Condition_namespaceObject={};__webpack_require__.r(Condition_namespaceObject),__webpack_require__.d(Condition_namespaceObject,{generate:()=>Condition_generate,name:()=>Condition_name,parse:()=>Condition_parse,structure:()=>Condition_structure});var Declaration_namespaceObject={};__webpack_require__.r(Declaration_namespaceObject),__webpack_require__.d(Declaration_namespaceObject,{generate:()=>Declaration_generate,name:()=>Declaration_name,parse:()=>Declaration_parse,structure:()=>Declaration_structure,walkContext:()=>Declaration_walkContext});var DeclarationList_namespaceObject={};__webpack_require__.r(DeclarationList_namespaceObject),__webpack_require__.d(DeclarationList_namespaceObject,{generate:()=>DeclarationList_generate,name:()=>DeclarationList_name,parse:()=>DeclarationList_parse,structure:()=>DeclarationList_structure});var Dimension_namespaceObject={};__webpack_require__.r(Dimension_namespaceObject),__webpack_require__.d(Dimension_namespaceObject,{generate:()=>Dimension_generate,name:()=>Dimension_name,parse:()=>Dimension_parse,structure:()=>Dimension_structure});var Feature_namespaceObject={};__webpack_require__.r(Feature_namespaceObject),__webpack_require__.d(Feature_namespaceObject,{generate:()=>Feature_generate,name:()=>Feature_name,parse:()=>Feature_parse,structure:()=>Feature_structure});var FeatureFunction_namespaceObject={};__webpack_require__.r(FeatureFunction_namespaceObject),__webpack_require__.d(FeatureFunction_namespaceObject,{generate:()=>FeatureFunction_generate,name:()=>FeatureFunction_name,parse:()=>FeatureFunction_parse,structure:()=>FeatureFunction_structure});var FeatureRange_namespaceObject={};__webpack_require__.r(FeatureRange_namespaceObject),__webpack_require__.d(FeatureRange_namespaceObject,{generate:()=>FeatureRange_generate,name:()=>FeatureRange_name,parse:()=>FeatureRange_parse,structure:()=>FeatureRange_structure});var Function_namespaceObject={};__webpack_require__.r(Function_namespaceObject),__webpack_require__.d(Function_namespaceObject,{generate:()=>Function_generate,name:()=>Function_name,parse:()=>Function_parse,structure:()=>Function_structure,walkContext:()=>Function_walkContext});var GeneralEnclosed_namespaceObject={};__webpack_require__.r(GeneralEnclosed_namespaceObject),__webpack_require__.d(GeneralEnclosed_namespaceObject,{generate:()=>GeneralEnclosed_generate,name:()=>GeneralEnclosed_name,parse:()=>GeneralEnclosed_parse,structure:()=>GeneralEnclosed_structure});var Hash_namespaceObject={};__webpack_require__.r(Hash_namespaceObject),__webpack_require__.d(Hash_namespaceObject,{generate:()=>Hash_generate,name:()=>Hash_name,parse:()=>Hash_parse,structure:()=>Hash_structure,xxx:()=>xxx});var Identifier_namespaceObject={};__webpack_require__.r(Identifier_namespaceObject),__webpack_require__.d(Identifier_namespaceObject,{generate:()=>Identifier_generate,name:()=>Identifier_name,parse:()=>Identifier_parse,structure:()=>Identifier_structure});var IdSelector_namespaceObject={};__webpack_require__.r(IdSelector_namespaceObject),__webpack_require__.d(IdSelector_namespaceObject,{generate:()=>IdSelector_generate,name:()=>IdSelector_name,parse:()=>IdSelector_parse,structure:()=>IdSelector_structure});var Layer_namespaceObject={};__webpack_require__.r(Layer_namespaceObject),__webpack_require__.d(Layer_namespaceObject,{generate:()=>Layer_generate,name:()=>Layer_name,parse:()=>Layer_parse,structure:()=>Layer_structure});var LayerList_namespaceObject={};__webpack_require__.r(LayerList_namespaceObject),__webpack_require__.d(LayerList_namespaceObject,{generate:()=>LayerList_generate,name:()=>LayerList_name,parse:()=>LayerList_parse,structure:()=>LayerList_structure});var MediaQuery_namespaceObject={};__webpack_require__.r(MediaQuery_namespaceObject),__webpack_require__.d(MediaQuery_namespaceObject,{generate:()=>MediaQuery_generate,name:()=>MediaQuery_name,parse:()=>MediaQuery_parse,structure:()=>MediaQuery_structure});var MediaQueryList_namespaceObject={};__webpack_require__.r(MediaQueryList_namespaceObject),__webpack_require__.d(MediaQueryList_namespaceObject,{generate:()=>MediaQueryList_generate,name:()=>MediaQueryList_name,parse:()=>MediaQueryList_parse,structure:()=>MediaQueryList_structure});var NestingSelector_namespaceObject={};__webpack_require__.r(NestingSelector_namespaceObject),__webpack_require__.d(NestingSelector_namespaceObject,{generate:()=>NestingSelector_generate,name:()=>NestingSelector_name,parse:()=>NestingSelector_parse,structure:()=>NestingSelector_structure});var Nth_namespaceObject={};__webpack_require__.r(Nth_namespaceObject),__webpack_require__.d(Nth_namespaceObject,{generate:()=>Nth_generate,name:()=>Nth_name,parse:()=>Nth_parse,structure:()=>Nth_structure});var Number_namespaceObject={};__webpack_require__.r(Number_namespaceObject),__webpack_require__.d(Number_namespaceObject,{generate:()=>Number_generate,name:()=>Number_name,parse:()=>Number_parse,structure:()=>Number_structure});var Operator_namespaceObject={};__webpack_require__.r(Operator_namespaceObject),__webpack_require__.d(Operator_namespaceObject,{generate:()=>Operator_generate,name:()=>Operator_name,parse:()=>Operator_parse,structure:()=>Operator_structure});var Parentheses_namespaceObject={};__webpack_require__.r(Parentheses_namespaceObject),__webpack_require__.d(Parentheses_namespaceObject,{generate:()=>Parentheses_generate,name:()=>Parentheses_name,parse:()=>Parentheses_parse,structure:()=>Parentheses_structure});var Percentage_namespaceObject={};__webpack_require__.r(Percentage_namespaceObject),__webpack_require__.d(Percentage_namespaceObject,{generate:()=>Percentage_generate,name:()=>Percentage_name,parse:()=>Percentage_parse,structure:()=>Percentage_structure});var PseudoClassSelector_namespaceObject={};__webpack_require__.r(PseudoClassSelector_namespaceObject),__webpack_require__.d(PseudoClassSelector_namespaceObject,{generate:()=>PseudoClassSelector_generate,name:()=>PseudoClassSelector_name,parse:()=>PseudoClassSelector_parse,structure:()=>PseudoClassSelector_structure,walkContext:()=>PseudoClassSelector_walkContext});var PseudoElementSelector_namespaceObject={};__webpack_require__.r(PseudoElementSelector_namespaceObject),__webpack_require__.d(PseudoElementSelector_namespaceObject,{generate:()=>PseudoElementSelector_generate,name:()=>PseudoElementSelector_name,parse:()=>PseudoElementSelector_parse,structure:()=>PseudoElementSelector_structure,walkContext:()=>PseudoElementSelector_walkContext});var Ratio_namespaceObject={};__webpack_require__.r(Ratio_namespaceObject),__webpack_require__.d(Ratio_namespaceObject,{generate:()=>Ratio_generate,name:()=>Ratio_name,parse:()=>Ratio_parse,structure:()=>Ratio_structure});var Raw_namespaceObject={};__webpack_require__.r(Raw_namespaceObject),__webpack_require__.d(Raw_namespaceObject,{generate:()=>Raw_generate,name:()=>Raw_name,parse:()=>Raw_parse,structure:()=>Raw_structure});var Rule_namespaceObject={};__webpack_require__.r(Rule_namespaceObject),__webpack_require__.d(Rule_namespaceObject,{generate:()=>Rule_generate,name:()=>Rule_name,parse:()=>Rule_parse,structure:()=>Rule_structure,walkContext:()=>Rule_walkContext});var Scope_namespaceObject={};__webpack_require__.r(Scope_namespaceObject),__webpack_require__.d(Scope_namespaceObject,{generate:()=>Scope_generate,name:()=>Scope_name,parse:()=>Scope_parse,structure:()=>Scope_structure});var Selector_namespaceObject={};__webpack_require__.r(Selector_namespaceObject),__webpack_require__.d(Selector_namespaceObject,{generate:()=>Selector_generate,name:()=>Selector_name,parse:()=>Selector_parse,structure:()=>Selector_structure});var SelectorList_namespaceObject={};__webpack_require__.r(SelectorList_namespaceObject),__webpack_require__.d(SelectorList_namespaceObject,{generate:()=>SelectorList_generate,name:()=>SelectorList_name,parse:()=>SelectorList_parse,structure:()=>SelectorList_structure,walkContext:()=>SelectorList_walkContext});var String_namespaceObject={};__webpack_require__.r(String_namespaceObject),__webpack_require__.d(String_namespaceObject,{generate:()=>String_generate,name:()=>String_name,parse:()=>String_parse,structure:()=>String_structure});var StyleSheet_namespaceObject={};__webpack_require__.r(StyleSheet_namespaceObject),__webpack_require__.d(StyleSheet_namespaceObject,{generate:()=>StyleSheet_generate,name:()=>StyleSheet_name,parse:()=>StyleSheet_parse,structure:()=>StyleSheet_structure,walkContext:()=>StyleSheet_walkContext});var SupportsDeclaration_namespaceObject={};__webpack_require__.r(SupportsDeclaration_namespaceObject),__webpack_require__.d(SupportsDeclaration_namespaceObject,{generate:()=>SupportsDeclaration_generate,name:()=>SupportsDeclaration_name,parse:()=>SupportsDeclaration_parse,structure:()=>SupportsDeclaration_structure});var TypeSelector_namespaceObject={};__webpack_require__.r(TypeSelector_namespaceObject),__webpack_require__.d(TypeSelector_namespaceObject,{generate:()=>TypeSelector_generate,name:()=>TypeSelector_name,parse:()=>TypeSelector_parse,structure:()=>TypeSelector_structure});var UnicodeRange_namespaceObject={};__webpack_require__.r(UnicodeRange_namespaceObject),__webpack_require__.d(UnicodeRange_namespaceObject,{generate:()=>UnicodeRange_generate,name:()=>UnicodeRange_name,parse:()=>UnicodeRange_parse,structure:()=>UnicodeRange_structure});var Url_namespaceObject={};__webpack_require__.r(Url_namespaceObject),__webpack_require__.d(Url_namespaceObject,{generate:()=>Url_generate,name:()=>Url_name,parse:()=>Url_parse,structure:()=>Url_structure});var Value_namespaceObject={};__webpack_require__.r(Value_namespaceObject),__webpack_require__.d(Value_namespaceObject,{generate:()=>Value_generate,name:()=>Value_name,parse:()=>Value_parse,structure:()=>Value_structure});var WhiteSpace_namespaceObject={};__webpack_require__.r(WhiteSpace_namespaceObject),__webpack_require__.d(WhiteSpace_namespaceObject,{generate:()=>WhiteSpace_generate,name:()=>WhiteSpace_name,parse:()=>WhiteSpace_parse,structure:()=>WhiteSpace_structure});var node_namespaceObject={};__webpack_require__.r(node_namespaceObject),__webpack_require__.d(node_namespaceObject,{AnPlusB:()=>AnPlusB_namespaceObject,Atrule:()=>Atrule_namespaceObject,AtrulePrelude:()=>AtrulePrelude_namespaceObject,AttributeSelector:()=>AttributeSelector_namespaceObject,Block:()=>Block_namespaceObject,Brackets:()=>Brackets_namespaceObject,CDC:()=>CDC_namespaceObject,CDO:()=>CDO_namespaceObject,ClassSelector:()=>ClassSelector_namespaceObject,Combinator:()=>Combinator_namespaceObject,Comment:()=>Comment_namespaceObject,Condition:()=>Condition_namespaceObject,Declaration:()=>Declaration_namespaceObject,DeclarationList:()=>DeclarationList_namespaceObject,Dimension:()=>Dimension_namespaceObject,Feature:()=>Feature_namespaceObject,FeatureFunction:()=>FeatureFunction_namespaceObject,FeatureRange:()=>FeatureRange_namespaceObject,Function:()=>Function_namespaceObject,GeneralEnclosed:()=>GeneralEnclosed_namespaceObject,Hash:()=>Hash_namespaceObject,IdSelector:()=>IdSelector_namespaceObject,Identifier:()=>Identifier_namespaceObject,Layer:()=>Layer_namespaceObject,LayerList:()=>LayerList_namespaceObject,MediaQuery:()=>MediaQuery_namespaceObject,MediaQueryList:()=>MediaQueryList_namespaceObject,NestingSelector:()=>NestingSelector_namespaceObject,Nth:()=>Nth_namespaceObject,Number:()=>Number_namespaceObject,Operator:()=>Operator_namespaceObject,Parentheses:()=>Parentheses_namespaceObject,Percentage:()=>Percentage_namespaceObject,PseudoClassSelector:()=>PseudoClassSelector_namespaceObject,PseudoElementSelector:()=>PseudoElementSelector_namespaceObject,Ratio:()=>Ratio_namespaceObject,Raw:()=>Raw_namespaceObject,Rule:()=>Rule_namespaceObject,Scope:()=>Scope_namespaceObject,Selector:()=>Selector_namespaceObject,SelectorList:()=>SelectorList_namespaceObject,String:()=>String_namespaceObject,StyleSheet:()=>StyleSheet_namespaceObject,SupportsDeclaration:()=>SupportsDeclaration_namespaceObject,TypeSelector:()=>TypeSelector_namespaceObject,UnicodeRange:()=>UnicodeRange_namespaceObject,Url:()=>Url_namespaceObject,Value:()=>Value_namespaceObject,WhiteSpace:()=>WhiteSpace_namespaceObject});var scope_namespaceObject={};__webpack_require__.r(scope_namespaceObject),__webpack_require__.d(scope_namespaceObject,{AtrulePrelude:()=>atrulePrelude,Selector:()=>selector,Value:()=>value});var index_parse_namespaceObject={};__webpack_require__.r(index_parse_namespaceObject),__webpack_require__.d(index_parse_namespaceObject,{AnPlusB:()=>AnPlusB_parse,Atrule:()=>Atrule_parse,AtrulePrelude:()=>AtrulePrelude_parse,AttributeSelector:()=>AttributeSelector_parse,Block:()=>Block_parse,Brackets:()=>Brackets_parse,CDC:()=>CDC_parse,CDO:()=>CDO_parse,ClassSelector:()=>ClassSelector_parse,Combinator:()=>Combinator_parse,Comment:()=>Comment_parse,Condition:()=>Condition_parse,Declaration:()=>Declaration_parse,DeclarationList:()=>DeclarationList_parse,Dimension:()=>Dimension_parse,Feature:()=>Feature_parse,FeatureFunction:()=>FeatureFunction_parse,FeatureRange:()=>FeatureRange_parse,Function:()=>Function_parse,GeneralEnclosed:()=>GeneralEnclosed_parse,Hash:()=>Hash_parse,IdSelector:()=>IdSelector_parse,Identifier:()=>Identifier_parse,Layer:()=>Layer_parse,LayerList:()=>LayerList_parse,MediaQuery:()=>MediaQuery_parse,MediaQueryList:()=>MediaQueryList_parse,NestingSelector:()=>NestingSelector_parse,Nth:()=>Nth_parse,Number:()=>Number_parse,Operator:()=>Operator_parse,Parentheses:()=>Parentheses_parse,Percentage:()=>Percentage_parse,PseudoClassSelector:()=>PseudoClassSelector_parse,PseudoElementSelector:()=>PseudoElementSelector_parse,Ratio:()=>Ratio_parse,Raw:()=>Raw_parse,Rule:()=>Rule_parse,Scope:()=>Scope_parse,Selector:()=>Selector_parse,SelectorList:()=>SelectorList_parse,String:()=>String_parse,StyleSheet:()=>StyleSheet_parse,SupportsDeclaration:()=>SupportsDeclaration_parse,TypeSelector:()=>TypeSelector_parse,UnicodeRange:()=>UnicodeRange_parse,Url:()=>Url_parse,Value:()=>Value_parse,WhiteSpace:()=>WhiteSpace_parse});const EOF=0,Ident=1,Function=2,AtKeyword=3,Hash=4,types_String=5,Url=7,Delim=9,types_Number=10,Percentage=11,Dimension=12,WhiteSpace=13,CDO=14,CDC=15,Colon=16,Semicolon=17,Comma=18,LeftSquareBracket=19,RightSquareBracket=20,LeftParenthesis=21,RightParenthesis=22,LeftCurlyBracket=23,RightCurlyBracket=24,Comment=25,char_code_definitions_EOF=0;function isDigit(code){return code>=48&&code<=57}function isHexDigit(code){return isDigit(code)||code>=65&&code<=70||code>=97&&code<=102}function isUppercaseLetter(code){return code>=65&&code<=90}function isNameStart(code){return function isLetter(code){return isUppercaseLetter(code)||function isLowercaseLetter(code){return code>=97&&code<=122}(code)}(code)||function isNonAscii(code){return code>=128}(code)||95===code}function char_code_definitions_isName(code){return isNameStart(code)||isDigit(code)||45===code}function isNonPrintable(code){return code>=0&&code<=8||11===code||code>=14&&code<=31||127===code}function isNewline(code){return 10===code||13===code||12===code}function isWhiteSpace(code){return isNewline(code)||32===code||9===code}function char_code_definitions_isValidEscape(first,second){return 92===first&&(!isNewline(second)&&second!==char_code_definitions_EOF)}function isIdentifierStart(first,second,third){return 45===first?isNameStart(second)||45===second||char_code_definitions_isValidEscape(second,third):!!isNameStart(first)||92===first&&char_code_definitions_isValidEscape(first,second)}function isNumberStart(first,second,third){return 43===first||45===first?isDigit(second)?2:46===second&&isDigit(third)?3:0:46===first?isDigit(second)?2:0:isDigit(first)?1:0}function isBOM(code){return 65279===code||65534===code?1:0}const CATEGORY=new Array(128);for(let i=0;i<CATEGORY.length;i++)CATEGORY[i]=(isWhiteSpace(i)?130:isDigit(i)&&131)||isNameStart(i)&&132||isNonPrintable(i)&&133||i||128;function charCodeCategory(code){return code<128?CATEGORY[code]:132}function getCharCode(source,offset){return offset<source.length?source.charCodeAt(offset):0}function getNewlineLength(source,offset,code){return 13===code&&10===getCharCode(source,offset+1)?2:1}function cmpChar(testStr,offset,referenceCode){let code=testStr.charCodeAt(offset);return isUppercaseLetter(code)&&(code|=32),code===referenceCode}function cmpStr(testStr,start,end,referenceStr){if(end-start!==referenceStr.length)return!1;if(start<0||end>testStr.length)return!1;for(let i=start;i<end;i++){const referenceCode=referenceStr.charCodeAt(i-start);let testCode=testStr.charCodeAt(i);if(isUppercaseLetter(testCode)&&(testCode|=32),testCode!==referenceCode)return!1}return!0}function findWhiteSpaceEnd(source,offset){for(;offset<source.length&&isWhiteSpace(source.charCodeAt(offset));offset++);return offset}function findDecimalNumberEnd(source,offset){for(;offset<source.length&&isDigit(source.charCodeAt(offset));offset++);return offset}function utils_consumeEscaped(source,offset){if(isHexDigit(getCharCode(source,(offset+=2)-1))){for(const maxOffset=Math.min(source.length,offset+5);offset<maxOffset&&isHexDigit(getCharCode(source,offset));offset++);const code=getCharCode(source,offset);isWhiteSpace(code)&&(offset+=getNewlineLength(source,offset,code))}return offset}function consumeName(source,offset){for(;offset<source.length;offset++){const code=source.charCodeAt(offset);if(!char_code_definitions_isName(code)){if(!char_code_definitions_isValidEscape(code,getCharCode(source,offset+1)))break;offset=utils_consumeEscaped(source,offset)-1}}return offset}function consumeNumber(source,offset){let code=source.charCodeAt(offset);if(43!==code&&45!==code||(code=source.charCodeAt(offset+=1)),isDigit(code)&&(offset=findDecimalNumberEnd(source,offset+1),code=source.charCodeAt(offset)),46===code&&isDigit(source.charCodeAt(offset+1))&&(offset=findDecimalNumberEnd(source,offset+=2)),cmpChar(source,offset,101)){let sign=0;code=source.charCodeAt(offset+1),45!==code&&43!==code||(sign=1,code=source.charCodeAt(offset+2)),isDigit(code)&&(offset=findDecimalNumberEnd(source,offset+1+sign+1))}return offset}function consumeBadUrlRemnants(source,offset){for(;offset<source.length;offset++){const code=source.charCodeAt(offset);if(41===code){offset++;break}char_code_definitions_isValidEscape(code,getCharCode(source,offset+1))&&(offset=utils_consumeEscaped(source,offset))}return offset}function utils_decodeEscaped(escaped){if(1===escaped.length&&!isHexDigit(escaped.charCodeAt(0)))return escaped[0];let code=parseInt(escaped,16);return(0===code||code>=55296&&code<=57343||code>1114111)&&(code=65533),String.fromCodePoint(code)}const names=["EOF-token","ident-token","function-token","at-keyword-token","hash-token","string-token","bad-string-token","url-token","bad-url-token","delim-token","number-token","percentage-token","dimension-token","whitespace-token","CDO-token","CDC-token","colon-token","semicolon-token","comma-token","[-token","]-token","(-token",")-token","{-token","}-token","comment-token"];function adoptBuffer(buffer=null,size){return null===buffer||buffer.length<size?new Uint32Array(Math.max(size+1024,16384)):buffer}function computeLinesAndColumns(host){const source=host.source,sourceLength=source.length,startOffset=source.length>0?isBOM(source.charCodeAt(0)):0,lines=adoptBuffer(host.lines,sourceLength),columns=adoptBuffer(host.columns,sourceLength);let line=host.startLine,column=host.startColumn;for(let i=startOffset;i<sourceLength;i++){const code=source.charCodeAt(i);lines[i]=line,columns[i]=column++,10!==code&&13!==code&&12!==code||(13===code&&i+1<sourceLength&&10===source.charCodeAt(i+1)&&(i++,lines[i]=line,columns[i]=column),line++,column=1)}lines[sourceLength]=line,columns[sourceLength]=column,host.lines=lines,host.columns=columns,host.computed=!0}class OffsetToLocation{constructor(source,startOffset,startLine,startColumn){this.setSource(source,startOffset,startLine,startColumn),this.lines=null,this.columns=null}setSource(source="",startOffset=0,startLine=1,startColumn=1){this.source=source,this.startOffset=startOffset,this.startLine=startLine,this.startColumn=startColumn,this.computed=!1}getLocation(offset,filename){return this.computed||computeLinesAndColumns(this),{source:filename,offset:this.startOffset+offset,line:this.lines[offset],column:this.columns[offset]}}getLocationRange(start,end,filename){return this.computed||computeLinesAndColumns(this),{source:filename,start:{offset:this.startOffset+start,line:this.lines[start],column:this.columns[start]},end:{offset:this.startOffset+end,line:this.lines[end],column:this.columns[end]}}}}const balancePair=new Uint8Array(32);function isBlockOpenerToken(tokenType){return 0!==balancePair[tokenType]}balancePair[Function]=RightParenthesis,balancePair[LeftParenthesis]=RightParenthesis,balancePair[LeftSquareBracket]=RightSquareBracket,balancePair[LeftCurlyBracket]=RightCurlyBracket;class TokenStream{constructor(source,tokenize){this.setSource(source,tokenize)}reset(){this.eof=!1,this.tokenIndex=-1,this.tokenType=0,this.tokenStart=this.firstCharOffset,this.tokenEnd=this.firstCharOffset}setSource(source="",tokenize=()=>{}){const sourceLength=(source=String(source||"")).length,offsetAndType=adoptBuffer(this.offsetAndType,source.length+1),balance=adoptBuffer(this.balance,source.length+1);let tokenCount=0,firstCharOffset=-1,balanceCloseType=0,balanceStart=source.length;this.offsetAndType=null,this.balance=null,balance.fill(0),tokenize(source,((type,start,end)=>{const index=tokenCount++;if(offsetAndType[index]=type<<24|end,-1===firstCharOffset&&(firstCharOffset=start),balance[index]=balanceStart,type===balanceCloseType){const prevBalanceStart=balance[balanceStart];balance[balanceStart]=index,balanceStart=prevBalanceStart,balanceCloseType=balancePair[offsetAndType[prevBalanceStart]>>24]}else isBlockOpenerToken(type)&&(balanceStart=index,balanceCloseType=balancePair[type])})),offsetAndType[tokenCount]=EOF<<24|sourceLength,balance[tokenCount]=tokenCount;for(let i=0;i<tokenCount;i++){const balanceStart=balance[i];if(balanceStart<=i){const balanceEnd=balance[balanceStart];balanceEnd!==i&&(balance[i]=balanceEnd)}else balanceStart>tokenCount&&(balance[i]=tokenCount)}this.source=source,this.firstCharOffset=-1===firstCharOffset?0:firstCharOffset,this.tokenCount=tokenCount,this.offsetAndType=offsetAndType,this.balance=balance,this.reset(),this.next()}lookupType(offset){return(offset+=this.tokenIndex)<this.tokenCount?this.offsetAndType[offset]>>24:EOF}lookupTypeNonSC(idx){for(let offset=this.tokenIndex;offset<this.tokenCount;offset++){const tokenType=this.offsetAndType[offset]>>24;if(tokenType!==WhiteSpace&&tokenType!==Comment&&0==idx--)return tokenType}return EOF}lookupOffset(offset){return(offset+=this.tokenIndex)<this.tokenCount?16777215&this.offsetAndType[offset-1]:this.source.length}lookupOffsetNonSC(idx){for(let offset=this.tokenIndex;offset<this.tokenCount;offset++){const tokenType=this.offsetAndType[offset]>>24;if(tokenType!==WhiteSpace&&tokenType!==Comment&&0==idx--)return offset-this.tokenIndex}return EOF}lookupValue(offset,referenceStr){return(offset+=this.tokenIndex)<this.tokenCount&&cmpStr(this.source,16777215&this.offsetAndType[offset-1],16777215&this.offsetAndType[offset],referenceStr)}getTokenStart(tokenIndex){return tokenIndex===this.tokenIndex?this.tokenStart:tokenIndex>0?tokenIndex<this.tokenCount?16777215&this.offsetAndType[tokenIndex-1]:16777215&this.offsetAndType[this.tokenCount]:this.firstCharOffset}substrToCursor(start){return this.source.substring(start,this.tokenStart)}isBalanceEdge(pos){return this.balance[this.tokenIndex]<pos}isDelim(code,offset){return offset?this.lookupType(offset)===Delim&&this.source.charCodeAt(this.lookupOffset(offset))===code:this.tokenType===Delim&&this.source.charCodeAt(this.tokenStart)===code}skip(tokenCount){let next=this.tokenIndex+tokenCount;next<this.tokenCount?(this.tokenIndex=next,this.tokenStart=16777215&this.offsetAndType[next-1],next=this.offsetAndType[next],this.tokenType=next>>24,this.tokenEnd=16777215&next):(this.tokenIndex=this.tokenCount,this.next())}next(){let next=this.tokenIndex+1;next<this.tokenCount?(this.tokenIndex=next,this.tokenStart=this.tokenEnd,next=this.offsetAndType[next],this.tokenType=next>>24,this.tokenEnd=16777215&next):(this.eof=!0,this.tokenIndex=this.tokenCount,this.tokenType=EOF,this.tokenStart=this.tokenEnd=this.source.length)}skipSC(){for(;this.tokenType===WhiteSpace||this.tokenType===Comment;)this.next()}skipUntilBalanced(startToken,stopConsume){let cursor=startToken,balanceEnd=0,offset=0;loop:for(;cursor<this.tokenCount&&(balanceEnd=this.balance[cursor],!(balanceEnd<startToken));cursor++)switch(offset=cursor>0?16777215&this.offsetAndType[cursor-1]:this.firstCharOffset,stopConsume(this.source.charCodeAt(offset))){case 1:break loop;case 2:cursor++;break loop;default:isBlockOpenerToken(this.offsetAndType[cursor]>>24)&&(cursor=balanceEnd)}this.skip(cursor-this.tokenIndex)}forEachToken(fn){for(let i=0,offset=this.firstCharOffset;i<this.tokenCount;i++){const start=offset,item=this.offsetAndType[i],end=16777215&item;offset=end,fn(item>>24,start,end,i)}}dump(){const tokens=new Array(this.tokenCount);return this.forEachToken(((type,start,end,index)=>{tokens[index]={idx:index,type:names[type],chunk:this.source.substring(start,end),balance:this.balance[index]}})),tokens}}function tokenize(source,onToken){function getCharCode(offset){return offset<sourceLength?source.charCodeAt(offset):0}function consumeNumericToken(){return offset=consumeNumber(source,offset),isIdentifierStart(getCharCode(offset),getCharCode(offset+1),getCharCode(offset+2))?(type=Dimension,void(offset=consumeName(source,offset))):37===getCharCode(offset)?(type=Percentage,void offset++):void(type=types_Number)}function consumeIdentLikeToken(){const nameStartOffset=offset;return offset=consumeName(source,offset),cmpStr(source,nameStartOffset,offset,"url")&&40===getCharCode(offset)?(offset=findWhiteSpaceEnd(source,offset+1),34===getCharCode(offset)||39===getCharCode(offset)?(type=Function,void(offset=nameStartOffset+4)):void function consumeUrlToken(){for(type=Url,offset=findWhiteSpaceEnd(source,offset);offset<source.length;offset++){const code=source.charCodeAt(offset);switch(charCodeCategory(code)){case 41:return void offset++;case 130:return offset=findWhiteSpaceEnd(source,offset),41===getCharCode(offset)||offset>=source.length?void(offset<source.length&&offset++):(offset=consumeBadUrlRemnants(source,offset),void(type=8));case 34:case 39:case 40:case 133:return offset=consumeBadUrlRemnants(source,offset),void(type=8);case 92:if(char_code_definitions_isValidEscape(code,getCharCode(offset+1))){offset=utils_consumeEscaped(source,offset)-1;break}return offset=consumeBadUrlRemnants(source,offset),void(type=8)}}}()):40===getCharCode(offset)?(type=Function,void offset++):void(type=Ident)}function consumeStringToken(endingCodePoint){for(endingCodePoint||(endingCodePoint=getCharCode(offset++)),type=types_String;offset<source.length;offset++){const code=source.charCodeAt(offset);switch(charCodeCategory(code)){case endingCodePoint:return void offset++;case 130:if(isNewline(code))return offset+=getNewlineLength(source,offset,code),void(type=6);break;case 92:if(offset===source.length-1)break;const nextCode=getCharCode(offset+1);isNewline(nextCode)?offset+=getNewlineLength(source,offset+1,nextCode):char_code_definitions_isValidEscape(code,nextCode)&&(offset=utils_consumeEscaped(source,offset)-1)}}}const sourceLength=(source=String(source||"")).length;let type,start=isBOM(getCharCode(0)),offset=start;for(;offset<sourceLength;){const code=source.charCodeAt(offset);switch(charCodeCategory(code)){case 130:type=WhiteSpace,offset=findWhiteSpaceEnd(source,offset+1);break;case 34:case 39:consumeStringToken();break;case 35:char_code_definitions_isName(getCharCode(offset+1))||char_code_definitions_isValidEscape(getCharCode(offset+1),getCharCode(offset+2))?(type=Hash,offset=consumeName(source,offset+1)):(type=Delim,offset++);break;case 40:type=LeftParenthesis,offset++;break;case 41:type=RightParenthesis,offset++;break;case 43:case 46:isNumberStart(code,getCharCode(offset+1),getCharCode(offset+2))?consumeNumericToken():(type=Delim,offset++);break;case 44:type=Comma,offset++;break;case 45:isNumberStart(code,getCharCode(offset+1),getCharCode(offset+2))?consumeNumericToken():45===getCharCode(offset+1)&&62===getCharCode(offset+2)?(type=CDC,offset+=3):isIdentifierStart(code,getCharCode(offset+1),getCharCode(offset+2))?consumeIdentLikeToken():(type=Delim,offset++);break;case 47:42===getCharCode(offset+1)?(type=Comment,offset=source.indexOf("*/",offset+2),offset=-1===offset?source.length:offset+2):(type=Delim,offset++);break;case 58:type=Colon,offset++;break;case 59:type=Semicolon,offset++;break;case 60:33===getCharCode(offset+1)&&45===getCharCode(offset+2)&&45===getCharCode(offset+3)?(type=CDO,offset+=4):(type=Delim,offset++);break;case 64:isIdentifierStart(getCharCode(offset+1),getCharCode(offset+2),getCharCode(offset+3))?(type=AtKeyword,offset=consumeName(source,offset+1)):(type=Delim,offset++);break;case 91:type=LeftSquareBracket,offset++;break;case 92:char_code_definitions_isValidEscape(code,getCharCode(offset+1))?consumeIdentLikeToken():(type=Delim,offset++);break;case 93:type=RightSquareBracket,offset++;break;case 123:type=LeftCurlyBracket,offset++;break;case 125:type=RightCurlyBracket,offset++;break;case 131:consumeNumericToken();break;case 132:consumeIdentLikeToken();break;default:type=Delim,offset++}onToken(type,start,start=offset)}}let releasedCursors=null;class List_List{static createItem(data){return{prev:null,next:null,data}}constructor(){this.head=null,this.tail=null,this.cursor=null}createItem(data){return List_List.createItem(data)}allocateCursor(prev,next){let cursor;return null!==releasedCursors?(cursor=releasedCursors,releasedCursors=releasedCursors.cursor,cursor.prev=prev,cursor.next=next,cursor.cursor=this.cursor):cursor={prev,next,cursor:this.cursor},this.cursor=cursor,cursor}releaseCursor(){const{cursor}=this;this.cursor=cursor.cursor,cursor.prev=null,cursor.next=null,cursor.cursor=releasedCursors,releasedCursors=cursor}updateCursors(prevOld,prevNew,nextOld,nextNew){let{cursor}=this;for(;null!==cursor;)cursor.prev===prevOld&&(cursor.prev=prevNew),cursor.next===nextOld&&(cursor.next=nextNew),cursor=cursor.cursor}*[Symbol.iterator](){for(let cursor=this.head;null!==cursor;cursor=cursor.next)yield cursor.data}get size(){let size=0;for(let cursor=this.head;null!==cursor;cursor=cursor.next)size++;return size}get isEmpty(){return null===this.head}get first(){return this.head&&this.head.data}get last(){return this.tail&&this.tail.data}fromArray(array){let cursor=null;this.head=null;for(let data of array){const item=List_List.createItem(data);null!==cursor?cursor.next=item:this.head=item,item.prev=cursor,cursor=item}return this.tail=cursor,this}toArray(){return[...this]}toJSON(){return[...this]}forEach(fn,thisArg=this){const cursor=this.allocateCursor(null,this.head);for(;null!==cursor.next;){const item=cursor.next;cursor.next=item.next,fn.call(thisArg,item.data,item,this)}this.releaseCursor()}forEachRight(fn,thisArg=this){const cursor=this.allocateCursor(this.tail,null);for(;null!==cursor.prev;){const item=cursor.prev;cursor.prev=item.prev,fn.call(thisArg,item.data,item,this)}this.releaseCursor()}reduce(fn,initialValue,thisArg=this){let item,cursor=this.allocateCursor(null,this.head),acc=initialValue;for(;null!==cursor.next;)item=cursor.next,cursor.next=item.next,acc=fn.call(thisArg,acc,item.data,item,this);return this.releaseCursor(),acc}reduceRight(fn,initialValue,thisArg=this){let item,cursor=this.allocateCursor(this.tail,null),acc=initialValue;for(;null!==cursor.prev;)item=cursor.prev,cursor.prev=item.prev,acc=fn.call(thisArg,acc,item.data,item,this);return this.releaseCursor(),acc}some(fn,thisArg=this){for(let cursor=this.head;null!==cursor;cursor=cursor.next)if(fn.call(thisArg,cursor.data,cursor,this))return!0;return!1}map(fn,thisArg=this){const result=new List_List;for(let cursor=this.head;null!==cursor;cursor=cursor.next)result.appendData(fn.call(thisArg,cursor.data,cursor,this));return result}filter(fn,thisArg=this){const result=new List_List;for(let cursor=this.head;null!==cursor;cursor=cursor.next)fn.call(thisArg,cursor.data,cursor,this)&&result.appendData(cursor.data);return result}nextUntil(start,fn,thisArg=this){if(null===start)return;const cursor=this.allocateCursor(null,start);for(;null!==cursor.next;){const item=cursor.next;if(cursor.next=item.next,fn.call(thisArg,item.data,item,this))break}this.releaseCursor()}prevUntil(start,fn,thisArg=this){if(null===start)return;const cursor=this.allocateCursor(start,null);for(;null!==cursor.prev;){const item=cursor.prev;if(cursor.prev=item.prev,fn.call(thisArg,item.data,item,this))break}this.releaseCursor()}clear(){this.head=null,this.tail=null}copy(){const result=new List_List;for(let data of this)result.appendData(data);return result}prepend(item){return this.updateCursors(null,item,this.head,item),null!==this.head?(this.head.prev=item,item.next=this.head):this.tail=item,this.head=item,this}prependData(data){return this.prepend(List_List.createItem(data))}append(item){return this.insert(item)}appendData(data){return this.insert(List_List.createItem(data))}insert(item,before=null){if(null!==before)if(this.updateCursors(before.prev,item,before,item),null===before.prev){if(this.head!==before)throw new Error("before doesn't belong to list");this.head=item,before.prev=item,item.next=before,this.updateCursors(null,item)}else before.prev.next=item,item.prev=before.prev,before.prev=item,item.next=before;else this.updateCursors(this.tail,item,null,item),null!==this.tail?(this.tail.next=item,item.prev=this.tail):this.head=item,this.tail=item;return this}insertData(data,before){return this.insert(List_List.createItem(data),before)}remove(item){if(this.updateCursors(item,item.prev,item,item.next),null!==item.prev)item.prev.next=item.next;else{if(this.head!==item)throw new Error("item doesn't belong to list");this.head=item.next}if(null!==item.next)item.next.prev=item.prev;else{if(this.tail!==item)throw new Error("item doesn't belong to list");this.tail=item.prev}return item.prev=null,item.next=null,item}push(data){this.insert(List_List.createItem(data))}pop(){return null!==this.tail?this.remove(this.tail):null}unshift(data){this.prepend(List_List.createItem(data))}shift(){return null!==this.head?this.remove(this.head):null}prependList(list){return this.insertList(list,this.head)}appendList(list){return this.insertList(list)}insertList(list,before){return null===list.head||(null!=before?(this.updateCursors(before.prev,list.tail,before,list.head),null!==before.prev?(before.prev.next=list.head,list.head.prev=before.prev):this.head=list.head,before.prev=list.tail,list.tail.next=before):(this.updateCursors(this.tail,list.tail,null,list.head),null!==this.tail?(this.tail.next=list.head,list.head.prev=this.tail):this.head=list.head,this.tail=list.tail),list.head=null,list.tail=null),this}replace(oldItem,newItemOrList){"head"in newItemOrList?this.insertList(newItemOrList,oldItem):this.insert(newItemOrList,oldItem),this.remove(oldItem)}}function createCustomError(name,message){const error=Object.create(SyntaxError.prototype),errorStack=new Error;return Object.assign(error,{name,message,get stack(){return(errorStack.stack||"").replace(/^(.+\n){1,3}/,`${name}: ${message}\n`)}})}function sourceFragment({source,line,column,baseLine,baseColumn},extraLines){function processLines(start,end){return lines.slice(start,end).map(((line,idx)=>String(start+idx+1).padStart(maxNumLength)+" |"+line)).join("\n")}const lines=("\n".repeat(Math.max(baseLine-1,0))+" ".repeat(Math.max(baseColumn-1,0))+source).split(/\r\n?|\n|\f/),startLine=Math.max(1,line-extraLines)-1,endLine=Math.min(line+extraLines,lines.length+1),maxNumLength=Math.max(4,String(endLine).length)+1;let cutLeft=0;(column+=3*(lines[line-1].substr(0,column-1).match(/\t/g)||[]).length)>100&&(cutLeft=column-60+3,column=58);for(let i=startLine;i<=endLine;i++)i>=0&&i<lines.length&&(lines[i]=lines[i].replace(/\t/g,"    "),lines[i]=(cutLeft>0&&lines[i].length>cutLeft?"…":"")+lines[i].substr(cutLeft,98)+(lines[i].length>cutLeft+100-1?"…":""));return[processLines(startLine,line),new Array(column+maxNumLength+2).join("-")+"^",processLines(line,endLine)].filter(Boolean).join("\n").replace(/^(\s+\d+\s+\|\n)+/,"").replace(/\n(\s+\d+\s+\|)+$/,"")}function SyntaxError_SyntaxError(message,source,offset,line,column,baseLine=1,baseColumn=1){return Object.assign(createCustomError("SyntaxError",message),{source,offset,line,column,sourceFragment:extraLines=>sourceFragment({source,line,column,baseLine,baseColumn},isNaN(extraLines)?0:extraLines),get formattedMessage(){return`Parse error: ${message}\n`+sourceFragment({source,line,column,baseLine,baseColumn},2)}})}function readSequence(recognizer){const children=this.createList();let space=!1;const context={recognizer};for(;!this.eof;){switch(this.tokenType){case Comment:this.next();continue;case WhiteSpace:space=!0,this.next();continue}let child=recognizer.getNode.call(this,context);if(void 0===child)break;space&&(recognizer.onWhiteSpace&&recognizer.onWhiteSpace.call(this,child,children,context),space=!1),children.push(child)}return space&&recognizer.onWhiteSpace&&recognizer.onWhiteSpace.call(this,null,children,context),children}const NOOP=()=>{};function createParseContext(name){return function(){return this[name]()}}function fetchParseValues(dict){const result=Object.create(null);for(const name of Object.keys(dict)){const item=dict[name],fn=item.parse||item;fn&&(result[name]=fn)}return result}function createParser(config){let source="",filename="<unknown>",needPositions=!1,onParseError=NOOP,onParseErrorThrow=!1;const locationMap=new OffsetToLocation,parser=Object.assign(new TokenStream,function processConfig(config){const parseConfig={context:Object.create(null),features:Object.assign(Object.create(null),config.features),scope:Object.assign(Object.create(null),config.scope),atrule:fetchParseValues(config.atrule),pseudo:fetchParseValues(config.pseudo),node:fetchParseValues(config.node)};for(const[name,context]of Object.entries(config.parseContext))switch(typeof context){case"function":parseConfig.context[name]=context;break;case"string":parseConfig.context[name]=createParseContext(context)}return{config:parseConfig,...parseConfig,...parseConfig.node}}(config||{}),{parseAtrulePrelude:!0,parseRulePrelude:!0,parseValue:!0,parseCustomProperty:!1,readSequence,consumeUntilBalanceEnd:()=>0,consumeUntilLeftCurlyBracket:code=>123===code?1:0,consumeUntilLeftCurlyBracketOrSemicolon:code=>123===code||59===code?1:0,consumeUntilExclamationMarkOrSemicolon:code=>33===code||59===code?1:0,consumeUntilSemicolonIncluded:code=>59===code?2:0,createList:()=>new List_List,createSingleNodeList:node=>(new List_List).appendData(node),getFirstListNode:list=>list&&list.first,getLastListNode:list=>list&&list.last,parseWithFallback(consumer,fallback){const startIndex=this.tokenIndex;try{return consumer.call(this)}catch(e){if(onParseErrorThrow)throw e;this.skip(startIndex-this.tokenIndex);const fallbackNode=fallback.call(this);return onParseErrorThrow=!0,onParseError(e,fallbackNode),onParseErrorThrow=!1,fallbackNode}},lookupNonWSType(offset){let type;do{if(type=this.lookupType(offset++),type!==WhiteSpace&&type!==Comment)return type}while(0!==type);return 0},charCodeAt:offset=>offset>=0&&offset<source.length?source.charCodeAt(offset):0,substring:(offsetStart,offsetEnd)=>source.substring(offsetStart,offsetEnd),substrToCursor(start){return this.source.substring(start,this.tokenStart)},cmpChar:(offset,charCode)=>cmpChar(source,offset,charCode),cmpStr:(offsetStart,offsetEnd,str)=>cmpStr(source,offsetStart,offsetEnd,str),consume(tokenType){const start=this.tokenStart;return this.eat(tokenType),this.substrToCursor(start)},consumeFunctionName(){const name=source.substring(this.tokenStart,this.tokenEnd-1);return this.eat(Function),name},consumeNumber(type){const number=source.substring(this.tokenStart,consumeNumber(source,this.tokenStart));return this.eat(type),number},eat(tokenType){if(this.tokenType!==tokenType){const tokenName=names[tokenType].slice(0,-6).replace(/-/g," ").replace(/^./,(m=>m.toUpperCase()));let message=`${/[[\](){}]/.test(tokenName)?`"${tokenName}"`:tokenName} is expected`,offset=this.tokenStart;switch(tokenType){case Ident:this.tokenType===Function||this.tokenType===Url?(offset=this.tokenEnd-1,message="Identifier is expected but function found"):message="Identifier is expected";break;case Hash:this.isDelim(35)&&(this.next(),offset++,message="Name is expected");break;case Percentage:this.tokenType===types_Number&&(offset=this.tokenEnd,message="Percent sign is expected")}this.error(message,offset)}this.next()},eatIdent(name){this.tokenType===Ident&&!1!==this.lookupValue(0,name)||this.error(`Identifier "${name}" is expected`),this.next()},eatDelim(code){this.isDelim(code)||this.error(`Delim "${String.fromCharCode(code)}" is expected`),this.next()},getLocation:(start,end)=>needPositions?locationMap.getLocationRange(start,end,filename):null,getLocationFromList(list){if(needPositions){const head=this.getFirstListNode(list),tail=this.getLastListNode(list);return locationMap.getLocationRange(null!==head?head.loc.start.offset-locationMap.startOffset:this.tokenStart,null!==tail?tail.loc.end.offset-locationMap.startOffset:this.tokenStart,filename)}return null},error(message,offset){const location=void 0!==offset&&offset<source.length?locationMap.getLocation(offset):this.eof?locationMap.getLocation(function findWhiteSpaceStart(source,offset){for(;offset>=0&&isWhiteSpace(source.charCodeAt(offset));offset--);return offset+1}(source,source.length-1)):locationMap.getLocation(this.tokenStart);throw new SyntaxError_SyntaxError(message||"Unexpected input",source,location.offset,location.line,location.column,locationMap.startLine,locationMap.startColumn)}});return Object.assign((function(source_,options){source=source_,options=options||{},parser.setSource(source,tokenize),locationMap.setSource(source,options.offset,options.line,options.column),filename=options.filename||"<unknown>",needPositions=Boolean(options.positions),onParseError="function"==typeof options.onParseError?options.onParseError:NOOP,onParseErrorThrow=!1,parser.parseAtrulePrelude=!("parseAtrulePrelude"in options)||Boolean(options.parseAtrulePrelude),parser.parseRulePrelude=!("parseRulePrelude"in options)||Boolean(options.parseRulePrelude),parser.parseValue=!("parseValue"in options)||Boolean(options.parseValue),parser.parseCustomProperty="parseCustomProperty"in options&&Boolean(options.parseCustomProperty);const{context="default",onComment}=options;if(context in parser.context==!1)throw new Error("Unknown context `"+context+"`");"function"==typeof onComment&&parser.forEachToken(((type,start,end)=>{if(type===Comment){const loc=parser.getLocation(start,end),value=cmpStr(source,end-2,end,"*/")?source.slice(start+2,end-2):source.slice(start+2,end);onComment(value,loc)}}));const ast=parser.context[context].call(parser,options);return parser.eof||parser.error(),ast}),{SyntaxError:SyntaxError_SyntaxError,config:parser.config})}var source_map_generator=__webpack_require__("./node_modules/source-map-js/lib/source-map-generator.js");const trackNodes=new Set(["Atrule","Selector","Declaration"]);const code=(type,value)=>{if(type===Delim&&(type=value),"string"==typeof type){const charCode=type.charCodeAt(0);return charCode>127?32768:charCode<<8}return type},specPairs=[[Ident,Ident],[Ident,Function],[Ident,Url],[Ident,8],[Ident,"-"],[Ident,types_Number],[Ident,Percentage],[Ident,Dimension],[Ident,CDC],[Ident,LeftParenthesis],[AtKeyword,Ident],[AtKeyword,Function],[AtKeyword,Url],[AtKeyword,8],[AtKeyword,"-"],[AtKeyword,types_Number],[AtKeyword,Percentage],[AtKeyword,Dimension],[AtKeyword,CDC],[Hash,Ident],[Hash,Function],[Hash,Url],[Hash,8],[Hash,"-"],[Hash,types_Number],[Hash,Percentage],[Hash,Dimension],[Hash,CDC],[Dimension,Ident],[Dimension,Function],[Dimension,Url],[Dimension,8],[Dimension,"-"],[Dimension,types_Number],[Dimension,Percentage],[Dimension,Dimension],[Dimension,CDC],["#",Ident],["#",Function],["#",Url],["#",8],["#","-"],["#",types_Number],["#",Percentage],["#",Dimension],["#",CDC],["-",Ident],["-",Function],["-",Url],["-",8],["-","-"],["-",types_Number],["-",Percentage],["-",Dimension],["-",CDC],[types_Number,Ident],[types_Number,Function],[types_Number,Url],[types_Number,8],[types_Number,types_Number],[types_Number,Percentage],[types_Number,Dimension],[types_Number,"%"],[types_Number,CDC],["@",Ident],["@",Function],["@",Url],["@",8],["@","-"],["@",CDC],[".",types_Number],[".",Percentage],[".",Dimension],["+",types_Number],["+",Percentage],["+",Dimension],["/","*"]],safePairs=specPairs.concat([[Ident,Hash],[Dimension,Hash],[Hash,Hash],[AtKeyword,LeftParenthesis],[AtKeyword,types_String],[AtKeyword,Colon],[Percentage,Percentage],[Percentage,Dimension],[Percentage,Function],[Percentage,"-"],[RightParenthesis,Ident],[RightParenthesis,Function],[RightParenthesis,Percentage],[RightParenthesis,Dimension],[RightParenthesis,Hash],[RightParenthesis,"-"]]);function createMap(pairs){const isWhiteSpaceRequired=new Set(pairs.map((([prev,next])=>code(prev)<<16|code(next))));return function(prevCode,type,value){const nextCode=code(type,value),nextCharCode=value.charCodeAt(0);return(45===nextCharCode&&type!==Ident&&type!==Function&&type!==CDC||43===nextCharCode?isWhiteSpaceRequired.has(prevCode<<16|nextCharCode<<8):isWhiteSpaceRequired.has(prevCode<<16|nextCode))&&this.emit(" ",WhiteSpace,!0),nextCode}}const spec=createMap(specPairs),safe=createMap(safePairs);function processChildren(node,delimeter){if("function"!=typeof delimeter)node.children.forEach(this.node,this);else{let prev=null;node.children.forEach((node=>{null!==prev&&delimeter.call(this,prev),this.node(node),prev=node}))}}function processChunk(chunk){tokenize(chunk,((type,start,end)=>{this.token(type,chunk.slice(start,end))}))}function createGenerator(config){const types=new Map;for(let[name,item]of Object.entries(config.node)){"function"==typeof(item.generate||item)&&types.set(name,item.generate||item)}return function(node,options){let buffer="",prevCode=0,handlers={node(node){if(!types.has(node.type))throw new Error("Unknown node type: "+node.type);types.get(node.type).call(publicApi,node)},tokenBefore:safe,token(type,value){prevCode=this.tokenBefore(prevCode,type,value),this.emit(value,type,!1),type===Delim&&92===value.charCodeAt(0)&&this.emit("\n",WhiteSpace,!0)},emit(value){buffer+=value},result:()=>buffer};options&&("function"==typeof options.decorator&&(handlers=options.decorator(handlers)),options.sourceMap&&(handlers=function generateSourceMap(handlers){const map=new source_map_generator.x,generated={line:1,column:0},original={line:0,column:0},activatedGenerated={line:1,column:0},activatedMapping={generated:activatedGenerated};let line=1,column=0,sourceMappingActive=!1;const origHandlersNode=handlers.node;handlers.node=function(node){if(node.loc&&node.loc.start&&trackNodes.has(node.type)){const nodeLine=node.loc.start.line,nodeColumn=node.loc.start.column-1;original.line===nodeLine&&original.column===nodeColumn||(original.line=nodeLine,original.column=nodeColumn,generated.line=line,generated.column=column,sourceMappingActive&&(sourceMappingActive=!1,generated.line===activatedGenerated.line&&generated.column===activatedGenerated.column||map.addMapping(activatedMapping)),sourceMappingActive=!0,map.addMapping({source:node.loc.source,original,generated}))}origHandlersNode.call(this,node),sourceMappingActive&&trackNodes.has(node.type)&&(activatedGenerated.line=line,activatedGenerated.column=column)};const origHandlersEmit=handlers.emit;handlers.emit=function(value,type,auto){for(let i=0;i<value.length;i++)10===value.charCodeAt(i)?(line++,column=0):column++;origHandlersEmit(value,type,auto)};const origHandlersResult=handlers.result;return handlers.result=function(){return sourceMappingActive&&map.addMapping(activatedMapping),{css:origHandlersResult(),map}},handlers}(handlers)),options.mode in token_before_namespaceObject&&(handlers.tokenBefore=token_before_namespaceObject[options.mode]));const publicApi={node:node=>handlers.node(node),children:processChildren,token:(type,value)=>handlers.token(type,value),tokenize:processChunk};return handlers.node(node),handlers.result()}}const{hasOwnProperty:create_hasOwnProperty}=Object.prototype,noop=function(){};function ensureFunction(value){return"function"==typeof value?value:noop}function invokeForType(fn,type){return function(node,item,list){node.type===type&&fn.call(this,node,item,list)}}function getWalkersFromStructure(name,nodeType){const structure=nodeType.structure,walkers=[];for(const key in structure){if(!1===create_hasOwnProperty.call(structure,key))continue;let fieldTypes=structure[key];const walker={name:key,type:!1,nullable:!1};Array.isArray(fieldTypes)||(fieldTypes=[fieldTypes]);for(const fieldType of fieldTypes)null===fieldType?walker.nullable=!0:"string"==typeof fieldType?walker.type="node":Array.isArray(fieldType)&&(walker.type="list");walker.type&&walkers.push(walker)}return walkers.length?{context:nodeType.walkContext,fields:walkers}:null}function createTypeIterator(config,reverse){const fields=config.fields.slice(),contextName=config.context,useContext="string"==typeof contextName;return reverse&&fields.reverse(),function(node,context,walk,walkReducer){let prevContextValue;useContext&&(prevContextValue=context[contextName],context[contextName]=node);for(const field of fields){const ref=node[field.name];if(!field.nullable||ref)if("list"===field.type){if(reverse?ref.reduceRight(walkReducer,!1):ref.reduce(walkReducer,!1))return!0}else if(walk(ref))return!0}useContext&&(context[contextName]=prevContextValue)}}function createFastTraveralMap({StyleSheet,Atrule,Rule,Block,DeclarationList}){return{Atrule:{StyleSheet,Atrule,Rule,Block},Rule:{StyleSheet,Atrule,Rule,Block},Declaration:{StyleSheet,Atrule,Rule,Block,DeclarationList}}}function createWalker(config){const types=function getTypesFromConfig(config){const types={};for(const name in config.node)if(create_hasOwnProperty.call(config.node,name)){const nodeType=config.node[name];if(!nodeType.structure)throw new Error("Missed `structure` field in `"+name+"` node type definition");types[name]=getWalkersFromStructure(0,nodeType)}return types}(config),iteratorsNatural={},iteratorsReverse={},breakWalk=Symbol("break-walk"),skipNode=Symbol("skip-node");for(const name in types)create_hasOwnProperty.call(types,name)&&null!==types[name]&&(iteratorsNatural[name]=createTypeIterator(types[name],!1),iteratorsReverse[name]=createTypeIterator(types[name],!0));const fastTraversalIteratorsNatural=createFastTraveralMap(iteratorsNatural),fastTraversalIteratorsReverse=createFastTraveralMap(iteratorsReverse),walk=function(root,options){function walkNode(node,item,list){const enterRet=enter.call(context,node,item,list);return enterRet===breakWalk||enterRet!==skipNode&&(!(!iterators.hasOwnProperty(node.type)||!iterators[node.type](node,context,walkNode,walkReducer))||leave.call(context,node,item,list)===breakWalk)}let enter=noop,leave=noop,iterators=iteratorsNatural,walkReducer=(ret,data,item,list)=>ret||walkNode(data,item,list);const context={break:breakWalk,skip:skipNode,root,stylesheet:null,atrule:null,atrulePrelude:null,rule:null,selector:null,block:null,declaration:null,function:null};if("function"==typeof options)enter=options;else if(options&&(enter=ensureFunction(options.enter),leave=ensureFunction(options.leave),options.reverse&&(iterators=iteratorsReverse),options.visit)){if(fastTraversalIteratorsNatural.hasOwnProperty(options.visit))iterators=options.reverse?fastTraversalIteratorsReverse[options.visit]:fastTraversalIteratorsNatural[options.visit];else if(!types.hasOwnProperty(options.visit))throw new Error("Bad value `"+options.visit+"` for `visit` option (should be: "+Object.keys(types).sort().join(", ")+")");enter=invokeForType(enter,options.visit),leave=invokeForType(leave,options.visit)}if(enter===noop&&leave===noop)throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");walkNode(root)};return walk.break=breakWalk,walk.skip=skipNode,walk.find=function(ast,fn){let found=null;return walk(ast,(function(node,item,list){if(fn.call(this,node,item,list))return found=node,breakWalk})),found},walk.findLast=function(ast,fn){let found=null;return walk(ast,{reverse:!0,enter(node,item,list){if(fn.call(this,node,item,list))return found=node,breakWalk}}),found},walk.findAll=function(ast,fn){const found=[];return walk(ast,(function(node,item,list){fn.call(this,node,item,list)&&found.push(node)})),found},walk}function generate_noop(value){return value}function internalGenerate(node,decorate,forceBraces,compact){let result;switch(node.type){case"Group":result=function generateSequence(node,decorate,forceBraces,compact){const combinator=" "===node.combinator||compact?node.combinator:" "+node.combinator+" ",result=node.terms.map((term=>internalGenerate(term,decorate,forceBraces,compact))).join(combinator);return node.explicit||forceBraces?(compact||","===result[0]?"[":"[ ")+result+(compact?"]":" ]"):result}(node,decorate,forceBraces,compact)+(node.disallowEmpty?"!":"");break;case"Multiplier":return internalGenerate(node.term,decorate,forceBraces,compact)+decorate(function generateMultiplier(multiplier){const{min,max,comma}=multiplier;return 0===min&&0===max?comma?"#?":"*":0===min&&1===max?"?":1===min&&0===max?comma?"#":"+":1===min&&1===max?"":(comma?"#":"")+(min===max?"{"+min+"}":"{"+min+","+(0!==max?max:"")+"}")}(node),node);case"Boolean":result="<boolean-expr["+internalGenerate(node.term,decorate,forceBraces,compact)+"]>";break;case"Type":result="<"+node.name+(node.opts?decorate(function generateTypeOpts(node){if("Range"===node.type)return" ["+(null===node.min?"-∞":node.min)+","+(null===node.max?"∞":node.max)+"]";throw new Error("Unknown node type `"+node.type+"`")}(node.opts),node.opts):"")+">";break;case"Property":result="<'"+node.name+"'>";break;case"Keyword":result=node.name;break;case"AtKeyword":result="@"+node.name;break;case"Function":result=node.name+"(";break;case"String":case"Token":result=node.value;break;case"Comma":result=",";break;default:throw new Error("Unknown node type `"+node.type+"`")}return decorate(result,node)}function generate(node,options){let decorate=generate_noop,forceBraces=!1,compact=!1;return"function"==typeof options?decorate=options:options&&(forceBraces=Boolean(options.forceBraces),compact=Boolean(options.compact),"function"==typeof options.decorate&&(decorate=options.decorate)),internalGenerate(node,decorate,forceBraces,compact)}const defaultLoc={offset:0,line:1,column:1};function fromLoc(node,point){const value=node&&node.loc&&node.loc[point];return value?"line"in value?buildLoc(value):value:null}function buildLoc({offset,line,column},extra){const loc={offset,line,column};if(extra){const lines=extra.split(/\n|\r\n?|\f/);loc.offset+=extra.length,loc.line+=lines.length-1,loc.column=1===lines.length?loc.column+extra.length:lines.pop().length+1}return loc}const SyntaxReferenceError=function(type,referenceName){const error=createCustomError("SyntaxReferenceError",type+(referenceName?" `"+referenceName+"`":""));return error.reference=referenceName,error},SyntaxMatchError=function(message,syntax,node,matchResult){const error=createCustomError("SyntaxMatchError",message),{css,mismatchOffset,mismatchLength,start,end}=function locateMismatch(matchResult,node){const tokens=matchResult.tokens,longestMatch=matchResult.longestMatch,mismatchNode=longestMatch<tokens.length&&tokens[longestMatch].node||null,badNode=mismatchNode!==node?mismatchNode:null;let start,end,mismatchOffset=0,mismatchLength=0,entries=0,css="";for(let i=0;i<tokens.length;i++){const token=tokens[i].value;i===longestMatch&&(mismatchLength=token.length,mismatchOffset=css.length),null!==badNode&&tokens[i].node===badNode&&(i<=longestMatch?entries++:entries=0),css+=token}return longestMatch===tokens.length||entries>1?(start=fromLoc(badNode||node,"end")||buildLoc(defaultLoc,css),end=buildLoc(start)):(start=fromLoc(badNode,"start")||buildLoc(fromLoc(node,"start")||defaultLoc,css.slice(0,mismatchOffset)),end=fromLoc(badNode,"end")||buildLoc(start,css.substr(mismatchOffset,mismatchLength))),{css,mismatchOffset,mismatchLength,start,end}}(matchResult,node);return error.rawMessage=message,error.syntax=syntax?generate(syntax):"<generic>",error.css=css,error.mismatchOffset=mismatchOffset,error.mismatchLength=mismatchLength,error.message=message+"\n  syntax: "+error.syntax+"\n   value: "+(css||"<empty string>")+"\n  --------"+new Array(error.mismatchOffset+1).join("-")+"^",Object.assign(error,start),error.loc={source:node&&node.loc&&node.loc.source||"<unknown>",start,end},error},keywords=new Map,properties=new Map,names_HYPHENMINUS=45,keyword=function getKeywordDescriptor(keyword){if(keywords.has(keyword))return keywords.get(keyword);const name=keyword.toLowerCase();let descriptor=keywords.get(name);if(void 0===descriptor){const custom=isCustomProperty(name,0),vendor=custom?"":getVendorPrefix(name,0);descriptor=Object.freeze({basename:name.substr(vendor.length),name,prefix:vendor,vendor,custom})}return keywords.set(keyword,descriptor),descriptor},names_property=function getPropertyDescriptor(property){if(properties.has(property))return properties.get(property);let name=property,hack=property[0];"/"===hack?hack="/"===property[1]?"//":"/":"_"!==hack&&"*"!==hack&&"$"!==hack&&"#"!==hack&&"+"!==hack&&"&"!==hack&&(hack="");const custom=isCustomProperty(name,hack.length);if(!custom&&(name=name.toLowerCase(),properties.has(name))){const descriptor=properties.get(name);return properties.set(property,descriptor),descriptor}const vendor=custom?"":getVendorPrefix(name,hack.length),prefix=name.substr(0,hack.length+vendor.length),descriptor=Object.freeze({basename:name.substr(prefix.length),name:name.substr(hack.length),hack,vendor,prefix,custom});return properties.set(property,descriptor),descriptor};function isCustomProperty(str,offset){return offset=offset||0,str.length-offset>=2&&str.charCodeAt(offset)===names_HYPHENMINUS&&str.charCodeAt(offset+1)===names_HYPHENMINUS}function getVendorPrefix(str,offset){if(offset=offset||0,str.length-offset>=3&&str.charCodeAt(offset)===names_HYPHENMINUS&&str.charCodeAt(offset+1)!==names_HYPHENMINUS){const secondDashIndex=str.indexOf("-",offset+2);if(-1!==secondDashIndex)return str.substring(offset,secondDashIndex+1)}return""}const cssWideKeywords=["initial","inherit","unset","revert","revert-layer"];function isDelim(token,code){return null!==token&&token.type===Delim&&token.value.charCodeAt(0)===code}function skipSC(token,offset,getNextToken){for(;null!==token&&(token.type===WhiteSpace||token.type===Comment);)token=getNextToken(++offset);return offset}function checkInteger(token,valueOffset,disallowSign,offset){if(!token)return 0;const code=token.value.charCodeAt(valueOffset);if(43===code||45===code){if(disallowSign)return 0;valueOffset++}for(;valueOffset<token.value.length;valueOffset++)if(!isDigit(token.value.charCodeAt(valueOffset)))return 0;return offset+1}function consumeB(token,offset_,getNextToken){let sign=!1,offset=skipSC(token,offset_,getNextToken);if(null===(token=getNextToken(offset)))return offset_;if(token.type!==types_Number){if(!isDelim(token,43)&&!isDelim(token,45))return offset_;if(sign=!0,offset=skipSC(getNextToken(++offset),offset,getNextToken),null===(token=getNextToken(offset))||token.type!==types_Number)return 0}if(!sign){const code=token.value.charCodeAt(0);if(43!==code&&45!==code)return 0}return checkInteger(token,sign?0:1,sign,offset)}function generic_urange_isDelim(token,code){return null!==token&&token.type===Delim&&token.value.charCodeAt(0)===code}function hexSequence(token,offset,allowDash){let hexlen=0;for(let pos=offset;pos<token.value.length;pos++){const code=token.value.charCodeAt(pos);if(45===code&&allowDash&&0!==hexlen)return hexSequence(token,offset+hexlen+1,!1),6;if(!isHexDigit(code))return 0;if(++hexlen>6)return 0}return hexlen}function withQuestionMarkSequence(consumed,length,getNextToken){if(!consumed)return 0;for(;generic_urange_isDelim(getNextToken(length),63);){if(++consumed>6)return 0;length++}return length}const calcFunctionNames=["calc(","-moz-calc(","-webkit-calc("],generic_balancePair=new Map([[Function,RightParenthesis],[LeftParenthesis,RightParenthesis],[LeftSquareBracket,RightSquareBracket],[LeftCurlyBracket,RightCurlyBracket]]);function charCodeAt(str,index){return index<str.length?str.charCodeAt(index):0}function eqStr(actual,expected){return cmpStr(actual,0,actual.length,expected)}function eqStrAny(actual,expected){for(let i=0;i<expected.length;i++)if(eqStr(actual,expected[i]))return!0;return!1}function isPostfixIeHack(str,offset){return offset===str.length-2&&(92===charCodeAt(str,offset)&&isDigit(charCodeAt(str,offset+1)))}function outOfRange(opts,value,numEnd){if(opts&&"Range"===opts.type){const num=Number(void 0!==numEnd&&numEnd!==value.length?value.substr(0,numEnd):value);if(isNaN(num))return!0;if(null!==opts.min&&num<opts.min&&"string"!=typeof opts.min)return!0;if(null!==opts.max&&num>opts.max&&"string"!=typeof opts.max)return!0}return!1}function calc(next){return function(token,getNextToken,opts){return null===token?0:token.type===Function&&eqStrAny(token.value,calcFunctionNames)?function consumeFunction(token,getNextToken){let balanceCloseType=0,balanceStash=[],length=0;scan:do{switch(token.type){case RightCurlyBracket:case RightParenthesis:case RightSquareBracket:if(token.type!==balanceCloseType)break scan;if(balanceCloseType=balanceStash.pop(),0===balanceStash.length){length++;break scan}break;case Function:case LeftParenthesis:case LeftSquareBracket:case LeftCurlyBracket:balanceStash.push(balanceCloseType),balanceCloseType=generic_balancePair.get(token.type)}length++}while(token=getNextToken(length));return length}(token,getNextToken):next(token,getNextToken,opts)}}function tokenType(expectedTokenType){return function(token){return null===token||token.type!==expectedTokenType?0:1}}function dashedIdent(token){return null===token||token.type!==Ident||45!==charCodeAt(token.value,0)||45!==charCodeAt(token.value,1)?0:1}function dimension(type){return type&&(type=new Set(type)),function(token,getNextToken,opts){if(null===token||token.type!==Dimension)return 0;const numberEnd=consumeNumber(token.value,0);if(null!==type){const reverseSolidusOffset=token.value.indexOf("\\",numberEnd),unit=-1!==reverseSolidusOffset&&isPostfixIeHack(token.value,reverseSolidusOffset)?token.value.substring(numberEnd,reverseSolidusOffset):token.value.substr(numberEnd);if(!1===type.has(unit.toLowerCase()))return 0}return outOfRange(opts,token.value,numberEnd)?0:1}}function zero(next){return"function"!=typeof next&&(next=function(){return 0}),function(token,getNextToken,opts){return null!==token&&token.type===types_Number&&0===Number(token.value)?1:next(token,getNextToken,opts)}}const tokenTypes={"ident-token":tokenType(Ident),"function-token":tokenType(Function),"at-keyword-token":tokenType(AtKeyword),"hash-token":tokenType(Hash),"string-token":tokenType(types_String),"bad-string-token":tokenType(6),"url-token":tokenType(Url),"bad-url-token":tokenType(8),"delim-token":tokenType(Delim),"number-token":tokenType(types_Number),"percentage-token":tokenType(Percentage),"dimension-token":tokenType(Dimension),"whitespace-token":tokenType(WhiteSpace),"CDO-token":tokenType(CDO),"CDC-token":tokenType(CDC),"colon-token":tokenType(Colon),"semicolon-token":tokenType(Semicolon),"comma-token":tokenType(Comma),"[-token":tokenType(LeftSquareBracket),"]-token":tokenType(RightSquareBracket),"(-token":tokenType(LeftParenthesis),")-token":tokenType(RightParenthesis),"{-token":tokenType(LeftCurlyBracket),"}-token":tokenType(RightCurlyBracket)},productionTypes={string:tokenType(types_String),ident:tokenType(Ident),percentage:calc((function percentage(token,getNextToken,opts){return null===token||token.type!==Percentage||outOfRange(opts,token.value,token.value.length-1)?0:1})),zero:zero(),number:calc((function number(token,getNextToken,opts){if(null===token)return 0;const numberEnd=consumeNumber(token.value,0);return numberEnd===token.value.length||isPostfixIeHack(token.value,numberEnd)?outOfRange(opts,token.value,numberEnd)?0:1:0})),integer:calc((function integer(token,getNextToken,opts){if(null===token||token.type!==types_Number)return 0;let i=43===charCodeAt(token.value,0)||45===charCodeAt(token.value,0)?1:0;for(;i<token.value.length;i++)if(!isDigit(charCodeAt(token.value,i)))return 0;return outOfRange(opts,token.value,i)?0:1})),"custom-ident":function customIdent(token){if(null===token||token.type!==Ident)return 0;const name=token.value.toLowerCase();return eqStrAny(name,cssWideKeywords)||eqStr(name,"default")?0:1},"dashed-ident":dashedIdent,"custom-property-name":function customPropertyName(token){return dashedIdent(token)?"--"===token.value?0:1:0},"hex-color":function hexColor(token){if(null===token||token.type!==Hash)return 0;const length=token.value.length;if(4!==length&&5!==length&&7!==length&&9!==length)return 0;for(let i=1;i<length;i++)if(!isHexDigit(charCodeAt(token.value,i)))return 0;return 1},"id-selector":function idSelector(token){return null===token||token.type!==Hash?0:isIdentifierStart(charCodeAt(token.value,1),charCodeAt(token.value,2),charCodeAt(token.value,3))?1:0},"an-plus-b":function anPlusB(token,getNextToken){let offset=0;if(!token)return 0;if(token.type===types_Number)return checkInteger(token,0,false,offset);if(token.type===Ident&&45===token.value.charCodeAt(0)){if(!cmpChar(token.value,1,110))return 0;switch(token.value.length){case 2:return consumeB(getNextToken(++offset),offset,getNextToken);case 3:return 45!==token.value.charCodeAt(2)?0:(offset=skipSC(getNextToken(++offset),offset,getNextToken),checkInteger(token=getNextToken(offset),0,true,offset));default:return 45!==token.value.charCodeAt(2)?0:checkInteger(token,3,true,offset)}}else if(token.type===Ident||isDelim(token,43)&&getNextToken(offset+1).type===Ident){if(token.type!==Ident&&(token=getNextToken(++offset)),null===token||!cmpChar(token.value,0,110))return 0;switch(token.value.length){case 1:return consumeB(getNextToken(++offset),offset,getNextToken);case 2:return 45!==token.value.charCodeAt(1)?0:(offset=skipSC(getNextToken(++offset),offset,getNextToken),checkInteger(token=getNextToken(offset),0,true,offset));default:return 45!==token.value.charCodeAt(1)?0:checkInteger(token,2,true,offset)}}else if(token.type===Dimension){let code=token.value.charCodeAt(0),sign=43===code||45===code?1:0,i=sign;for(;i<token.value.length&&isDigit(token.value.charCodeAt(i));i++);return i===sign?0:cmpChar(token.value,i,110)?i+1===token.value.length?consumeB(getNextToken(++offset),offset,getNextToken):45!==token.value.charCodeAt(i+1)?0:i+2===token.value.length?(offset=skipSC(getNextToken(++offset),offset,getNextToken),checkInteger(token=getNextToken(offset),0,true,offset)):checkInteger(token,i+2,true,offset):0}return 0},urange:function urange(token,getNextToken){let length=0;if(null===token||token.type!==Ident||!cmpChar(token.value,0,117))return 0;if(null===(token=getNextToken(++length)))return 0;if(generic_urange_isDelim(token,43))return null===(token=getNextToken(++length))?0:token.type===Ident?withQuestionMarkSequence(hexSequence(token,0,!0),++length,getNextToken):generic_urange_isDelim(token,63)?withQuestionMarkSequence(1,++length,getNextToken):0;if(token.type===types_Number){const consumedHexLength=hexSequence(token,1,!0);return 0===consumedHexLength?0:null===(token=getNextToken(++length))?length:token.type===Dimension||token.type===types_Number?function startsWith(token,code){return token.value.charCodeAt(0)===code}(token,45)&&hexSequence(token,1,!1)?length+1:0:withQuestionMarkSequence(consumedHexLength,length,getNextToken)}return token.type===Dimension?withQuestionMarkSequence(hexSequence(token,1,!0),++length,getNextToken):0},"declaration-value":function declarationValue(token,getNextToken){if(!token)return 0;let balanceCloseType=0,balanceStash=[],length=0;scan:do{switch(token.type){case 6:case 8:break scan;case RightCurlyBracket:case RightParenthesis:case RightSquareBracket:if(token.type!==balanceCloseType)break scan;balanceCloseType=balanceStash.pop();break;case Semicolon:if(0===balanceCloseType)break scan;break;case Delim:if(0===balanceCloseType&&"!"===token.value)break scan;break;case Function:case LeftParenthesis:case LeftSquareBracket:case LeftCurlyBracket:balanceStash.push(balanceCloseType),balanceCloseType=generic_balancePair.get(token.type)}length++}while(token=getNextToken(length));return length},"any-value":function anyValue(token,getNextToken){if(!token)return 0;let balanceCloseType=0,balanceStash=[],length=0;scan:do{switch(token.type){case 6:case 8:break scan;case RightCurlyBracket:case RightParenthesis:case RightSquareBracket:if(token.type!==balanceCloseType)break scan;balanceCloseType=balanceStash.pop();break;case Function:case LeftParenthesis:case LeftSquareBracket:case LeftCurlyBracket:balanceStash.push(balanceCloseType),balanceCloseType=generic_balancePair.get(token.type)}length++}while(token=getNextToken(length));return length}};function createDemensionTypes(units){const{angle,decibel,frequency,flex,length,resolution,semitones,time}=units||{};return{dimension:calc(dimension(null)),angle:calc(dimension(angle)),decibel:calc(dimension(decibel)),frequency:calc(dimension(frequency)),flex:calc(dimension(flex)),length:calc(zero(dimension(length))),resolution:calc(dimension(resolution)),semitones:calc(dimension(semitones)),time:calc(dimension(time))}}const units_length=["cm","mm","q","in","pt","pc","px","em","rem","ex","rex","cap","rcap","ch","rch","ic","ric","lh","rlh","vw","svw","lvw","dvw","vh","svh","lvh","dvh","vi","svi","lvi","dvi","vb","svb","lvb","dvb","vmin","svmin","lvmin","dvmin","vmax","svmax","lvmax","dvmax","cqw","cqh","cqi","cqb","cqmin","cqmax"],angle=["deg","grad","rad","turn"],time=["s","ms"],frequency=["hz","khz"],resolution=["dpi","dpcm","dppx","x"],flex=["fr"],decibel=["db"],semitones=["st"];function definition_syntax_SyntaxError_SyntaxError(message,input,offset){return Object.assign(createCustomError("SyntaxError",message),{input,offset,rawMessage:message,message:message+"\n  "+input+"\n--"+new Array((offset||input.length)+1).join("-")+"^"})}const NAME_CHAR=new Uint8Array(128).map(((_,idx)=>/[a-zA-Z0-9\-]/.test(String.fromCharCode(idx))?1:0));class Scanner{constructor(str){this.str=str,this.pos=0}charCodeAt(pos){return pos<this.str.length?this.str.charCodeAt(pos):0}charCode(){return this.charCodeAt(this.pos)}isNameCharCode(code=this.charCode()){return code<128&&1===NAME_CHAR[code]}nextCharCode(){return this.charCodeAt(this.pos+1)}nextNonWsCode(pos){return this.charCodeAt(this.findWsEnd(pos))}skipWs(){this.pos=this.findWsEnd(this.pos)}findWsEnd(pos){for(;pos<this.str.length;pos++){const code=this.str.charCodeAt(pos);if(13!==code&&10!==code&&12!==code&&32!==code&&9!==code)break}return pos}substringToPos(end){return this.str.substring(this.pos,this.pos=end)}eat(code){this.charCode()!==code&&this.error("Expect `"+String.fromCharCode(code)+"`"),this.pos++}peek(){return this.pos<this.str.length?this.str.charAt(this.pos++):""}error(message){throw new definition_syntax_SyntaxError_SyntaxError(message,this.str,this.pos)}scanSpaces(){return this.substringToPos(this.findWsEnd(this.pos))}scanWord(){let end=this.pos;for(;end<this.str.length;end++){const code=this.str.charCodeAt(end);if(code>=128||0===NAME_CHAR[code])break}return this.pos===end&&this.error("Expect a keyword"),this.substringToPos(end)}scanNumber(){let end=this.pos;for(;end<this.str.length;end++){const code=this.str.charCodeAt(end);if(code<48||code>57)break}return this.pos===end&&this.error("Expect a number"),this.substringToPos(end)}scanString(){const end=this.str.indexOf("'",this.pos+1);return-1===end&&(this.pos=this.str.length,this.error("Expect an apostrophe")),this.substringToPos(end+1)}}const COMBINATOR_PRECEDENCE={" ":1,"&&":2,"||":3,"|":4};function readMultiplierRange(scanner){let min=null,max=null;return scanner.eat(123),scanner.skipWs(),min=scanner.scanNumber(scanner),scanner.skipWs(),44===scanner.charCode()?(scanner.pos++,scanner.skipWs(),125!==scanner.charCode()&&(max=scanner.scanNumber(scanner),scanner.skipWs())):max=min,scanner.eat(125),{min:Number(min),max:max?Number(max):0}}function maybeMultiplied(scanner,node){const multiplier=function readMultiplier(scanner){let range=null,comma=!1;switch(scanner.charCode()){case 42:scanner.pos++,range={min:0,max:0};break;case 43:scanner.pos++,range={min:1,max:0};break;case 63:scanner.pos++,range={min:0,max:1};break;case 35:scanner.pos++,comma=!0,123===scanner.charCode()?range=readMultiplierRange(scanner):63===scanner.charCode()?(scanner.pos++,range={min:0,max:0}):range={min:1,max:0};break;case 123:range=readMultiplierRange(scanner);break;default:return null}return{type:"Multiplier",comma,min:range.min,max:range.max,term:null}}(scanner);return null!==multiplier?(multiplier.term=node,35===scanner.charCode()&&43===scanner.charCodeAt(scanner.pos-1)?maybeMultiplied(scanner,multiplier):multiplier):node}function maybeToken(scanner){const ch=scanner.peek();return""===ch?null:maybeMultiplied(scanner,{type:"Token",value:ch})}function readType(scanner){let name,opts=null;if(scanner.eat(60),name=scanner.scanWord(),"boolean-expr"===name){scanner.eat(91);const implicitGroup=readImplicitGroup(scanner,93);return scanner.eat(93),scanner.eat(62),maybeMultiplied(scanner,{type:"Boolean",term:1===implicitGroup.terms.length?implicitGroup.terms[0]:implicitGroup})}return 40===scanner.charCode()&&41===scanner.nextCharCode()&&(scanner.pos+=2,name+="()"),91===scanner.charCodeAt(scanner.findWsEnd(scanner.pos))&&(scanner.skipWs(),opts=function readTypeRange(scanner){let min=null,max=null,sign=1;return scanner.eat(91),45===scanner.charCode()&&(scanner.peek(),sign=-1),-1==sign&&8734===scanner.charCode()?scanner.peek():(min=sign*Number(scanner.scanNumber(scanner)),scanner.isNameCharCode()&&(min+=scanner.scanWord())),scanner.skipWs(),scanner.eat(44),scanner.skipWs(),8734===scanner.charCode()?scanner.peek():(sign=1,45===scanner.charCode()&&(scanner.peek(),sign=-1),max=sign*Number(scanner.scanNumber(scanner)),scanner.isNameCharCode()&&(max+=scanner.scanWord())),scanner.eat(93),{type:"Range",min,max}}(scanner)),scanner.eat(62),maybeMultiplied(scanner,{type:"Type",name,opts})}function regroupTerms(terms,combinators){function createGroup(terms,combinator){return{type:"Group",terms,combinator,disallowEmpty:!1,explicit:!1}}let combinator;for(combinators=Object.keys(combinators).sort(((a,b)=>COMBINATOR_PRECEDENCE[a]-COMBINATOR_PRECEDENCE[b]));combinators.length>0;){combinator=combinators.shift();let i=0,subgroupStart=0;for(;i<terms.length;i++){const term=terms[i];"Combinator"===term.type&&(term.value===combinator?(-1===subgroupStart&&(subgroupStart=i-1),terms.splice(i,1),i--):(-1!==subgroupStart&&i-subgroupStart>1&&(terms.splice(subgroupStart,i-subgroupStart,createGroup(terms.slice(subgroupStart,i),combinator)),i=subgroupStart+1),subgroupStart=-1))}-1!==subgroupStart&&combinators.length&&terms.splice(subgroupStart,i-subgroupStart,createGroup(terms.slice(subgroupStart,i),combinator))}return combinator}function readImplicitGroup(scanner,stopCharCode){const combinators=Object.create(null),terms=[];let token,prevToken=null,prevTokenPos=scanner.pos;for(;scanner.charCode()!==stopCharCode&&(token=peek(scanner,stopCharCode));)"Spaces"!==token.type&&("Combinator"===token.type?(null!==prevToken&&"Combinator"!==prevToken.type||(scanner.pos=prevTokenPos,scanner.error("Unexpected combinator")),combinators[token.value]=!0):null!==prevToken&&"Combinator"!==prevToken.type&&(combinators[" "]=!0,terms.push({type:"Combinator",value:" "})),terms.push(token),prevToken=token,prevTokenPos=scanner.pos);return null!==prevToken&&"Combinator"===prevToken.type&&(scanner.pos-=prevTokenPos,scanner.error("Unexpected combinator")),{type:"Group",terms,combinator:regroupTerms(terms,combinators)||" ",disallowEmpty:!1,explicit:!1}}function peek(scanner,stopCharCode){let code=scanner.charCode();switch(code){case 93:case 42:case 43:case 63:case 35:case 33:break;case 91:return maybeMultiplied(scanner,function readGroup(scanner,stopCharCode){let result;return scanner.eat(91),result=readImplicitGroup(scanner,stopCharCode),scanner.eat(93),result.explicit=!0,33===scanner.charCode()&&(scanner.pos++,result.disallowEmpty=!0),result}(scanner,stopCharCode));case 60:return 39===scanner.nextCharCode()?function readProperty(scanner){let name;return scanner.eat(60),scanner.eat(39),name=scanner.scanWord(),scanner.eat(39),scanner.eat(62),maybeMultiplied(scanner,{type:"Property",name})}(scanner):readType(scanner);case 124:return{type:"Combinator",value:scanner.substringToPos(scanner.pos+(124===scanner.nextCharCode()?2:1))};case 38:return scanner.pos++,scanner.eat(38),{type:"Combinator",value:"&&"};case 44:return scanner.pos++,{type:"Comma"};case 39:return maybeMultiplied(scanner,{type:"String",value:scanner.scanString()});case 32:case 9:case 10:case 13:case 12:return{type:"Spaces",value:scanner.scanSpaces()};case 64:return code=scanner.nextCharCode(),scanner.isNameCharCode(code)?(scanner.pos++,{type:"AtKeyword",name:scanner.scanWord()}):maybeToken(scanner);case 123:if(code=scanner.nextCharCode(),code<48||code>57)return maybeToken(scanner);break;default:return scanner.isNameCharCode(code)?function readKeywordOrFunction(scanner){const name=scanner.scanWord();return 40===scanner.charCode()?(scanner.pos++,{type:"Function",name}):maybeMultiplied(scanner,{type:"Keyword",name})}(scanner):maybeToken(scanner)}}function parse(source){const scanner=new Scanner(source),result=readImplicitGroup(scanner);return scanner.pos!==source.length&&scanner.error("Unexpected input"),1===result.terms.length&&"Group"===result.terms[0].type?result.terms[0]:result}const walk_noop=function(){};function walk_ensureFunction(value){return"function"==typeof value?value:walk_noop}const astToTokens={decorator(handlers){const tokens=[];let curNode=null;return{...handlers,node(node){const tmp=curNode;curNode=node,handlers.node.call(this,node),curNode=tmp},emit(value,type,auto){tokens.push({type,value,node:auto?null:curNode})},result:()=>tokens}}};function prepare_tokens(value,syntax){return"string"==typeof value?function stringToTokens(str){const tokens=[];return tokenize(str,((type,start,end)=>tokens.push({type,value:str.slice(start,end),node:null}))),tokens}(value):syntax.generate(value,astToTokens)}const MATCH={type:"Match"},MISMATCH={type:"Mismatch"},DISALLOW_EMPTY={type:"DisallowEmpty"};function createCondition(match,thenBranch,elseBranch){return thenBranch===MATCH&&elseBranch===MISMATCH||match===MATCH&&thenBranch===MATCH&&elseBranch===MATCH?match:("If"===match.type&&match.else===MISMATCH&&thenBranch===MATCH&&(thenBranch=match.then,match=match.match),{type:"If",match,then:thenBranch,else:elseBranch})}function isFunctionType(name){return name.length>2&&40===name.charCodeAt(name.length-2)&&41===name.charCodeAt(name.length-1)}function isEnumCapatible(term){return"Keyword"===term.type||"AtKeyword"===term.type||"Function"===term.type||"Type"===term.type&&isFunctionType(term.name)}function groupNode(terms,combinator=" ",explicit=!1){return{type:"Group",terms,combinator,disallowEmpty:!1,explicit}}function replaceTypeInGraph(node,replacements,visited=new Set){if(!visited.has(node))switch(visited.add(node),node.type){case"If":node.match=replaceTypeInGraph(node.match,replacements,visited),node.then=replaceTypeInGraph(node.then,replacements,visited),node.else=replaceTypeInGraph(node.else,replacements,visited);break;case"Type":return replacements[node.name]||node}return node}function buildGroupMatchGraph(combinator,terms,atLeastOneTermMatched){switch(combinator){case" ":{let result=MATCH;for(let i=terms.length-1;i>=0;i--){result=createCondition(terms[i],result,MISMATCH)}return result}case"|":{let result=MISMATCH,map=null;for(let i=terms.length-1;i>=0;i--){let term=terms[i];if(isEnumCapatible(term)&&(null===map&&i>0&&isEnumCapatible(terms[i-1])&&(map=Object.create(null),result=createCondition({type:"Enum",map},MATCH,result)),null!==map)){const key=(isFunctionType(term.name)?term.name.slice(0,-1):term.name).toLowerCase();if(key in map==!1){map[key]=term;continue}}map=null,result=createCondition(term,MATCH,result)}return result}case"&&":{if(terms.length>5)return{type:"MatchOnce",terms,all:!0};let result=MISMATCH;for(let i=terms.length-1;i>=0;i--){const term=terms[i];let thenClause;thenClause=terms.length>1?buildGroupMatchGraph(combinator,terms.filter((function(newGroupTerm){return newGroupTerm!==term})),!1):MATCH,result=createCondition(term,thenClause,result)}return result}case"||":{if(terms.length>5)return{type:"MatchOnce",terms,all:!1};let result=atLeastOneTermMatched?MATCH:MISMATCH;for(let i=terms.length-1;i>=0;i--){const term=terms[i];let thenClause;thenClause=terms.length>1?buildGroupMatchGraph(combinator,terms.filter((function(newGroupTerm){return newGroupTerm!==term})),!0):MATCH,result=createCondition(term,thenClause,result)}return result}}}function buildMatchGraphInternal(node){if("function"==typeof node)return{type:"Generic",fn:node};switch(node.type){case"Group":{let result=buildGroupMatchGraph(node.combinator,node.terms.map(buildMatchGraphInternal),!1);return node.disallowEmpty&&(result=createCondition(result,DISALLOW_EMPTY,MISMATCH)),result}case"Multiplier":return function buildMultiplierMatchGraph(node){let result=MATCH,matchTerm=buildMatchGraphInternal(node.term);if(0===node.max)matchTerm=createCondition(matchTerm,DISALLOW_EMPTY,MISMATCH),result=createCondition(matchTerm,null,MISMATCH),result.then=createCondition(MATCH,MATCH,result),node.comma&&(result.then.else=createCondition({type:"Comma",syntax:node},result,MISMATCH));else for(let i=node.min||1;i<=node.max;i++)node.comma&&result!==MATCH&&(result=createCondition({type:"Comma",syntax:node},result,MISMATCH)),result=createCondition(matchTerm,createCondition(MATCH,MATCH,result),MISMATCH);if(0===node.min)result=createCondition(MATCH,MATCH,result);else for(let i=0;i<node.min-1;i++)node.comma&&result!==MATCH&&(result=createCondition({type:"Comma",syntax:node},result,MISMATCH)),result=createCondition(matchTerm,result,MISMATCH);return result}(node);case"Boolean":{const term=buildMatchGraphInternal(node.term),matchNode=buildMatchGraphInternal(groupNode([groupNode([{type:"Keyword",name:"not"},{type:"Type",name:"!boolean-group"}]),groupNode([{type:"Type",name:"!boolean-group"},groupNode([{type:"Multiplier",comma:!1,min:0,max:0,term:groupNode([{type:"Keyword",name:"and"},{type:"Type",name:"!boolean-group"}])},{type:"Multiplier",comma:!1,min:0,max:0,term:groupNode([{type:"Keyword",name:"or"},{type:"Type",name:"!boolean-group"}])}],"|")])],"|")),booleanGroup=buildMatchGraphInternal(groupNode([{type:"Type",name:"!term"},groupNode([{type:"Token",value:"("},{type:"Type",name:"!self"},{type:"Token",value:")"}]),{type:"Type",name:"general-enclosed"}],"|"));return replaceTypeInGraph(booleanGroup,{"!term":term,"!self":matchNode}),replaceTypeInGraph(matchNode,{"!boolean-group":booleanGroup}),matchNode}case"Type":case"Property":return{type:node.type,name:node.name,syntax:node};case"Keyword":return{type:node.type,name:node.name.toLowerCase(),syntax:node};case"AtKeyword":return{type:node.type,name:"@"+node.name.toLowerCase(),syntax:node};case"Function":return{type:node.type,name:node.name.toLowerCase()+"(",syntax:node};case"String":return 3===node.value.length?{type:"Token",value:node.value.charAt(1),syntax:node}:{type:node.type,value:node.value.substr(1,node.value.length-2).replace(/\\'/g,"'"),syntax:node};case"Token":return{type:node.type,value:node.value,syntax:node};case"Comma":return{type:node.type,syntax:node};default:throw new Error("Unknown node type:",node.type)}}function buildMatchGraph(syntaxTree,ref){return"string"==typeof syntaxTree&&(syntaxTree=parse(syntaxTree)),{type:"MatchGraph",match:buildMatchGraphInternal(syntaxTree),syntax:ref||null,source:syntaxTree}}const{hasOwnProperty:match_hasOwnProperty}=Object.prototype;let totalIterationCount=0;function reverseList(list){let prev=null,next=null,item=list;for(;null!==item;)next=item.prev,item.prev=prev,prev=item,item=next;return prev}function areStringsEqualCaseInsensitive(testStr,referenceStr){if(testStr.length!==referenceStr.length)return!1;for(let i=0;i<testStr.length;i++){const referenceCode=referenceStr.charCodeAt(i);let testCode=testStr.charCodeAt(i);if(testCode>=65&&testCode<=90&&(testCode|=32),testCode!==referenceCode)return!1}return!0}function isCommaContextStart(token){return null===token||(token.type===Comma||token.type===Function||token.type===LeftParenthesis||token.type===LeftSquareBracket||token.type===LeftCurlyBracket||function isContextEdgeDelim(token){return token.type===Delim&&"?"!==token.value}(token))}function isCommaContextEnd(token){return null===token||(token.type===RightParenthesis||token.type===RightSquareBracket||token.type===RightCurlyBracket||token.type===Delim&&"/"===token.value)}function internalMatch(tokens,state,syntaxes){function moveToNextToken(){do{tokenIndex++,token=tokenIndex<tokens.length?tokens[tokenIndex]:null}while(null!==token&&(token.type===WhiteSpace||token.type===Comment))}function getNextToken(offset){const nextIndex=tokenIndex+offset;return nextIndex<tokens.length?tokens[nextIndex]:null}function stateSnapshotFromSyntax(nextState,prev){return{nextState,matchStack,syntaxStack,thenStack,tokenIndex,prev}}function pushThenStack(nextState){thenStack={nextState,matchStack,syntaxStack,prev:thenStack}}function pushElseStack(nextState){elseStack=stateSnapshotFromSyntax(nextState,elseStack)}function addTokenToMatch(){matchStack={type:1,syntax:state.syntax,token,prev:matchStack},moveToNextToken(),syntaxStash=null,tokenIndex>longestMatch&&(longestMatch=tokenIndex)}function closeSyntax(){matchStack=2===matchStack.type?matchStack.prev:{type:3,syntax:syntaxStack.syntax,token:matchStack.token,prev:matchStack},syntaxStack=syntaxStack.prev}let syntaxStack=null,thenStack=null,elseStack=null,syntaxStash=null,iterationCount=0,exitReason=null,token=null,tokenIndex=-1,longestMatch=0,matchStack={type:0,syntax:null,token:null,prev:null};for(moveToNextToken();null===exitReason&&++iterationCount<15e3;)switch(state.type){case"Match":if(null===thenStack){if(null!==token&&(tokenIndex!==tokens.length-1||"\\0"!==token.value&&"\\9"!==token.value)){state=MISMATCH;break}exitReason="Match";break}if((state=thenStack.nextState)===DISALLOW_EMPTY){if(thenStack.matchStack===matchStack){state=MISMATCH;break}state=MATCH}for(;thenStack.syntaxStack!==syntaxStack;)closeSyntax();thenStack=thenStack.prev;break;case"Mismatch":if(null!==syntaxStash&&!1!==syntaxStash)(null===elseStack||tokenIndex>elseStack.tokenIndex)&&(elseStack=syntaxStash,syntaxStash=!1);else if(null===elseStack){exitReason="Mismatch";break}state=elseStack.nextState,thenStack=elseStack.thenStack,syntaxStack=elseStack.syntaxStack,matchStack=elseStack.matchStack,tokenIndex=elseStack.tokenIndex,token=tokenIndex<tokens.length?tokens[tokenIndex]:null,elseStack=elseStack.prev;break;case"MatchGraph":state=state.match;break;case"If":state.else!==MISMATCH&&pushElseStack(state.else),state.then!==MATCH&&pushThenStack(state.then),state=state.match;break;case"MatchOnce":state={type:"MatchOnceBuffer",syntax:state,index:0,mask:0};break;case"MatchOnceBuffer":{const terms=state.syntax.terms;if(state.index===terms.length){if(0===state.mask||state.syntax.all){state=MISMATCH;break}state=MATCH;break}if(state.mask===(1<<terms.length)-1){state=MATCH;break}for(;state.index<terms.length;state.index++){const matchFlag=1<<state.index;if(!(state.mask&matchFlag)){pushElseStack(state),pushThenStack({type:"AddMatchOnce",syntax:state.syntax,mask:state.mask|matchFlag}),state=terms[state.index++];break}}break}case"AddMatchOnce":state={type:"MatchOnceBuffer",syntax:state.syntax,index:0,mask:state.mask};break;case"Enum":if(null!==token){let name=token.value.toLowerCase();if(-1!==name.indexOf("\\")&&(name=name.replace(/\\[09].*$/,"")),match_hasOwnProperty.call(state.map,name)){state=state.map[name];break}}state=MISMATCH;break;case"Generic":{const opts=null!==syntaxStack?syntaxStack.opts:null,lastTokenIndex=tokenIndex+Math.floor(state.fn(token,getNextToken,opts));if(!isNaN(lastTokenIndex)&&lastTokenIndex>tokenIndex){for(;tokenIndex<lastTokenIndex;)addTokenToMatch();state=MATCH}else state=MISMATCH;break}case"Type":case"Property":{const syntaxDict="Type"===state.type?"types":"properties",dictSyntax=match_hasOwnProperty.call(syntaxes,syntaxDict)?syntaxes[syntaxDict][state.name]:null;if(!dictSyntax||!dictSyntax.match)throw new Error("Bad syntax reference: "+("Type"===state.type?"<"+state.name+">":"<'"+state.name+"'>"));if(!1!==syntaxStash&&null!==token&&"Type"===state.type){if("custom-ident"===state.name&&token.type===Ident||"length"===state.name&&"0"===token.value){null===syntaxStash&&(syntaxStash=stateSnapshotFromSyntax(state,elseStack)),state=MISMATCH;break}}syntaxStack={syntax:state.syntax,opts:state.syntax.opts||null!==syntaxStack&&syntaxStack.opts||null,prev:syntaxStack},matchStack={type:2,syntax:state.syntax,token:matchStack.token,prev:matchStack},state=dictSyntax.matchRef||dictSyntax.match;break}case"Keyword":{const name=state.name;if(null!==token){let keywordName=token.value;if(-1!==keywordName.indexOf("\\")&&(keywordName=keywordName.replace(/\\[09].*$/,"")),areStringsEqualCaseInsensitive(keywordName,name)){addTokenToMatch(),state=MATCH;break}}state=MISMATCH;break}case"AtKeyword":case"Function":if(null!==token&&areStringsEqualCaseInsensitive(token.value,state.name)){addTokenToMatch(),state=MATCH;break}state=MISMATCH;break;case"Token":if(null!==token&&token.value===state.value){addTokenToMatch(),state=MATCH;break}state=MISMATCH;break;case"Comma":null!==token&&token.type===Comma?isCommaContextStart(matchStack.token)?state=MISMATCH:(addTokenToMatch(),state=isCommaContextEnd(token)?MISMATCH:MATCH):state=isCommaContextStart(matchStack.token)||isCommaContextEnd(token)?MATCH:MISMATCH;break;case"String":let string="",lastTokenIndex=tokenIndex;for(;lastTokenIndex<tokens.length&&string.length<state.value.length;lastTokenIndex++)string+=tokens[lastTokenIndex].value;if(areStringsEqualCaseInsensitive(string,state.value)){for(;tokenIndex<lastTokenIndex;)addTokenToMatch();state=MATCH}else state=MISMATCH;break;default:throw new Error("Unknown node type: "+state.type)}switch(totalIterationCount+=iterationCount,exitReason){case null:console.warn("[csstree-match] BREAK after 15000 iterations"),exitReason="Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)",matchStack=null;break;case"Match":for(;null!==syntaxStack;)closeSyntax();break;default:matchStack=null}return{tokens,reason:exitReason,iterations:iterationCount,match:matchStack,longestMatch}}function matchAsTree(tokens,matchGraph,syntaxes){const matchResult=internalMatch(tokens,matchGraph,syntaxes||{});if(null===matchResult.match)return matchResult;let item=matchResult.match,host=matchResult.match={syntax:matchGraph.syntax||null,match:[]};const hostStack=[host];for(item=reverseList(item).prev;null!==item;){switch(item.type){case 2:host.match.push(host={syntax:item.syntax,match:[]}),hostStack.push(host);break;case 3:hostStack.pop(),host=hostStack[hostStack.length-1];break;default:host.match.push({syntax:item.syntax||null,token:item.token.value,node:item.token.node})}item=item.prev}return matchResult}function getTrace(node){function shouldPutToTrace(syntax){return null!==syntax&&("Type"===syntax.type||"Property"===syntax.type||"Keyword"===syntax.type)}let result=null;return null!==this.matched&&function hasMatch(matchNode){if(Array.isArray(matchNode.match)){for(let i=0;i<matchNode.match.length;i++)if(hasMatch(matchNode.match[i]))return shouldPutToTrace(matchNode.syntax)&&result.unshift(matchNode.syntax),!0}else if(matchNode.node===node)return result=shouldPutToTrace(matchNode.syntax)?[matchNode.syntax]:[],!0;return!1}(this.matched),result}function isType(node,type){return testNode(this,node,(match=>"Type"===match.type&&match.name===type))}function isProperty(node,property){return testNode(this,node,(match=>"Property"===match.type&&match.name===property))}function isKeyword(node){return testNode(this,node,(match=>"Keyword"===match.type))}function testNode(match,node,fn){const trace=getTrace.call(match,node);return null!==trace&&trace.some(fn)}function getFirstMatchNode(matchNode){return"node"in matchNode?matchNode.node:getFirstMatchNode(matchNode.match[0])}function getLastMatchNode(matchNode){return"node"in matchNode?matchNode.node:getLastMatchNode(matchNode.match[matchNode.match.length-1])}function matchFragments(lexer,ast,match,type,name){const fragments=[];return null!==match.matched&&function findFragments(matchNode){if(null!==matchNode.syntax&&matchNode.syntax.type===type&&matchNode.syntax.name===name){const start=getFirstMatchNode(matchNode),end=getLastMatchNode(matchNode);lexer.syntax.walk(ast,(function(node,item,list){if(node===start){const nodes=new List_List;do{if(nodes.appendData(item.data),item.data===end)break;item=item.next}while(null!==item);fragments.push({parent:list,nodes})}}))}Array.isArray(matchNode.match)&&matchNode.match.forEach(findFragments)}(match.matched),fragments}const{hasOwnProperty:structure_hasOwnProperty}=Object.prototype;function isValidNumber(value){return"number"==typeof value&&isFinite(value)&&Math.floor(value)===value&&value>=0}function isValidLocation(loc){return Boolean(loc)&&isValidNumber(loc.offset)&&isValidNumber(loc.line)&&isValidNumber(loc.column)}function createNodeStructureChecker(type,fields){return function checkNode(node,warn){if(!node||node.constructor!==Object)return warn(node,"Type of node should be an Object");for(let key in node){let valid=!0;if(!1!==structure_hasOwnProperty.call(node,key)){if("type"===key)node.type!==type&&warn(node,"Wrong node type `"+node.type+"`, expected `"+type+"`");else if("loc"===key){if(null===node.loc)continue;if(node.loc&&node.loc.constructor===Object)if("string"!=typeof node.loc.source)key+=".source";else if(isValidLocation(node.loc.start)){if(isValidLocation(node.loc.end))continue;key+=".end"}else key+=".start";valid=!1}else if(fields.hasOwnProperty(key)){valid=!1;for(let i=0;!valid&&i<fields[key].length;i++){const fieldType=fields[key][i];switch(fieldType){case String:valid="string"==typeof node[key];break;case Boolean:valid="boolean"==typeof node[key];break;case null:valid=null===node[key];break;default:"string"==typeof fieldType?valid=node[key]&&node[key].type===fieldType:Array.isArray(fieldType)&&(valid=node[key]instanceof List_List)}}}else warn(node,"Unknown field `"+key+"` for "+type+" node type");valid||warn(node,"Bad value for `"+type+"."+key+"`")}}for(const key in fields)structure_hasOwnProperty.call(fields,key)&&!1===structure_hasOwnProperty.call(node,key)&&warn(node,"Field `"+type+"."+key+"` is missed")}}function genTypesList(fieldTypes,path){const docsTypes=[];for(let i=0;i<fieldTypes.length;i++){const fieldType=fieldTypes[i];if(fieldType===String||fieldType===Boolean)docsTypes.push(fieldType.name.toLowerCase());else if(null===fieldType)docsTypes.push("null");else if("string"==typeof fieldType)docsTypes.push(fieldType);else{if(!Array.isArray(fieldType))throw new Error("Wrong value `"+fieldType+"` in `"+path+"` structure definition");docsTypes.push("List<"+(genTypesList(fieldType,path)||"any")+">")}}return docsTypes.join(" | ")}function processStructure(name,nodeType){const structure=nodeType.structure,fields={type:String,loc:!0},docs={type:'"'+name+'"'};for(const key in structure){if(!1===structure_hasOwnProperty.call(structure,key))continue;const fieldTypes=fields[key]=Array.isArray(structure[key])?structure[key].slice():[structure[key]];docs[key]=genTypesList(fieldTypes,name+"."+key)}return{docs,check:createNodeStructureChecker(name,fields)}}function dumpMapSyntax(map,compact,syntaxAsAst){const result={};for(const name in map)map[name].syntax&&(result[name]=syntaxAsAst?map[name].syntax:generate(map[name].syntax,{compact}));return result}function dumpAtruleMapSyntax(map,compact,syntaxAsAst){const result={};for(const[name,atrule]of Object.entries(map))result[name]={prelude:atrule.prelude&&(syntaxAsAst?atrule.prelude.syntax:generate(atrule.prelude.syntax,{compact})),descriptors:atrule.descriptors&&dumpMapSyntax(atrule.descriptors,compact,syntaxAsAst)};return result}function buildMatchResult(matched,error,iterations){return{matched,iterations,error,...trace_namespaceObject}}function matchSyntax(lexer,syntax,value,useCssWideKeywords){const tokens=prepare_tokens(value,lexer.syntax);let result;return function valueHasVar(tokens){for(let i=0;i<tokens.length;i++)if("var("===tokens[i].value.toLowerCase())return!0;return!1}(tokens)?buildMatchResult(null,new Error("Matching for a tree with var() is not supported")):(useCssWideKeywords&&(result=matchAsTree(tokens,lexer.cssWideKeywordsSyntax,lexer)),useCssWideKeywords&&result.match||(result=matchAsTree(tokens,syntax.match,lexer),result.match)?buildMatchResult(result.match,null,result.iterations):buildMatchResult(null,new SyntaxMatchError(result.reason,syntax.syntax,value,result),result.iterations))}class Lexer{constructor(config,syntax,structure){if(this.cssWideKeywords=cssWideKeywords,this.syntax=syntax,this.generic=!1,this.units={...units_namespaceObject},this.atrules=Object.create(null),this.properties=Object.create(null),this.types=Object.create(null),this.structure=structure||function getStructureFromConfig(config){const structure={};if(config.node)for(const name in config.node)if(structure_hasOwnProperty.call(config.node,name)){const nodeType=config.node[name];if(!nodeType.structure)throw new Error("Missed `structure` field in `"+name+"` node type definition");structure[name]=processStructure(name,nodeType)}return structure}(config),config){if(config.cssWideKeywords&&(this.cssWideKeywords=config.cssWideKeywords),config.units)for(const group of Object.keys(units_namespaceObject))Array.isArray(config.units[group])&&(this.units[group]=config.units[group]);if(config.types)for(const[name,type]of Object.entries(config.types))this.addType_(name,type);if(config.generic){this.generic=!0;for(const[name,value]of Object.entries(function createGenericTypes(units){return{...tokenTypes,...productionTypes,...createDemensionTypes(units)}}(this.units)))this.addType_(name,value)}if(config.atrules)for(const[name,atrule]of Object.entries(config.atrules))this.addAtrule_(name,atrule);if(config.properties)for(const[name,property]of Object.entries(config.properties))this.addProperty_(name,property)}this.cssWideKeywordsSyntax=buildMatchGraph(this.cssWideKeywords.join(" |  "))}checkStructure(ast){function collectWarning(node,message){warns.push({node,message})}const structure=this.structure,warns=[];return this.syntax.walk(ast,(function(node){structure.hasOwnProperty(node.type)?structure[node.type].check(node,collectWarning):collectWarning(node,"Unknown node type `"+node.type+"`")})),!!warns.length&&warns}createDescriptor(syntax,type,name,parent=null){const ref={type,name},descriptor={type,name,parent,serializable:"string"==typeof syntax||syntax&&"string"==typeof syntax.type,syntax:null,match:null,matchRef:null};return"function"==typeof syntax?descriptor.match=buildMatchGraph(syntax,ref):("string"==typeof syntax?Object.defineProperty(descriptor,"syntax",{get:()=>(Object.defineProperty(descriptor,"syntax",{value:parse(syntax)}),descriptor.syntax)}):descriptor.syntax=syntax,Object.defineProperty(descriptor,"match",{get:()=>(Object.defineProperty(descriptor,"match",{value:buildMatchGraph(descriptor.syntax,ref)}),descriptor.match)}),"Property"===type&&Object.defineProperty(descriptor,"matchRef",{get(){const syntax=descriptor.syntax,value=function syntaxHasTopLevelCommaMultiplier(syntax){const singleTerm=syntax.terms[0];return!1===syntax.explicit&&1===syntax.terms.length&&"Multiplier"===singleTerm.type&&!0===singleTerm.comma}(syntax)?buildMatchGraph({...syntax,terms:[syntax.terms[0].term]},ref):null;return Object.defineProperty(descriptor,"matchRef",{value}),value}})),descriptor}addAtrule_(name,syntax){syntax&&(this.atrules[name]={type:"Atrule",name,prelude:syntax.prelude?this.createDescriptor(syntax.prelude,"AtrulePrelude",name):null,descriptors:syntax.descriptors?Object.keys(syntax.descriptors).reduce(((map,descName)=>(map[descName]=this.createDescriptor(syntax.descriptors[descName],"AtruleDescriptor",descName,name),map)),Object.create(null)):null})}addProperty_(name,syntax){syntax&&(this.properties[name]=this.createDescriptor(syntax,"Property",name))}addType_(name,syntax){syntax&&(this.types[name]=this.createDescriptor(syntax,"Type",name))}checkAtruleName(atruleName){if(!this.getAtrule(atruleName))return new SyntaxReferenceError("Unknown at-rule","@"+atruleName)}checkAtrulePrelude(atruleName,prelude){const error=this.checkAtruleName(atruleName);if(error)return error;const atrule=this.getAtrule(atruleName);return!atrule.prelude&&prelude?new SyntaxError("At-rule `@"+atruleName+"` should not contain a prelude"):!atrule.prelude||prelude||matchSyntax(this,atrule.prelude,"",!1).matched?void 0:new SyntaxError("At-rule `@"+atruleName+"` should contain a prelude")}checkAtruleDescriptorName(atruleName,descriptorName){const error=this.checkAtruleName(atruleName);if(error)return error;const atrule=this.getAtrule(atruleName),descriptor=keyword(descriptorName);return atrule.descriptors?atrule.descriptors[descriptor.name]||atrule.descriptors[descriptor.basename]?void 0:new SyntaxReferenceError("Unknown at-rule descriptor",descriptorName):new SyntaxError("At-rule `@"+atruleName+"` has no known descriptors")}checkPropertyName(propertyName){if(!this.getProperty(propertyName))return new SyntaxReferenceError("Unknown property",propertyName)}matchAtrulePrelude(atruleName,prelude){const error=this.checkAtrulePrelude(atruleName,prelude);if(error)return buildMatchResult(null,error);const atrule=this.getAtrule(atruleName);return atrule.prelude?matchSyntax(this,atrule.prelude,prelude||"",!1):buildMatchResult(null,null)}matchAtruleDescriptor(atruleName,descriptorName,value){const error=this.checkAtruleDescriptorName(atruleName,descriptorName);if(error)return buildMatchResult(null,error);const atrule=this.getAtrule(atruleName),descriptor=keyword(descriptorName);return matchSyntax(this,atrule.descriptors[descriptor.name]||atrule.descriptors[descriptor.basename],value,!1)}matchDeclaration(node){return"Declaration"!==node.type?buildMatchResult(null,new Error("Not a Declaration node")):this.matchProperty(node.property,node.value)}matchProperty(propertyName,value){if(names_property(propertyName).custom)return buildMatchResult(null,new Error("Lexer matching doesn't applicable for custom properties"));const error=this.checkPropertyName(propertyName);return error?buildMatchResult(null,error):matchSyntax(this,this.getProperty(propertyName),value,!0)}matchType(typeName,value){const typeSyntax=this.getType(typeName);return typeSyntax?matchSyntax(this,typeSyntax,value,!1):buildMatchResult(null,new SyntaxReferenceError("Unknown type",typeName))}match(syntax,value){return"string"==typeof syntax||syntax&&syntax.type?("string"!=typeof syntax&&syntax.match||(syntax=this.createDescriptor(syntax,"Type","anonymous")),matchSyntax(this,syntax,value,!1)):buildMatchResult(null,new SyntaxReferenceError("Bad syntax"))}findValueFragments(propertyName,value,type,name){return matchFragments(this,value,this.matchProperty(propertyName,value),type,name)}findDeclarationValueFragments(declaration,type,name){return matchFragments(this,declaration.value,this.matchDeclaration(declaration),type,name)}findAllFragments(ast,type,name){const result=[];return this.syntax.walk(ast,{visit:"Declaration",enter:declaration=>{result.push.apply(result,this.findDeclarationValueFragments(declaration,type,name))}}),result}getAtrule(atruleName,fallbackBasename=!0){const atrule=keyword(atruleName);return(atrule.vendor&&fallbackBasename?this.atrules[atrule.name]||this.atrules[atrule.basename]:this.atrules[atrule.name])||null}getAtrulePrelude(atruleName,fallbackBasename=!0){const atrule=this.getAtrule(atruleName,fallbackBasename);return atrule&&atrule.prelude||null}getAtruleDescriptor(atruleName,name){return this.atrules.hasOwnProperty(atruleName)&&this.atrules.declarators&&this.atrules[atruleName].declarators[name]||null}getProperty(propertyName,fallbackBasename=!0){const property=names_property(propertyName);return(property.vendor&&fallbackBasename?this.properties[property.name]||this.properties[property.basename]:this.properties[property.name])||null}getType(name){return hasOwnProperty.call(this.types,name)?this.types[name]:null}validate(){function syntaxRef(name,isType){return isType?`<${name}>`:`<'${name}'>`}function validate(syntax,name,broken,descriptor){if(broken.has(name))return broken.get(name);broken.set(name,!1),null!==descriptor.syntax&&function walk(node,options,context){let enter=walk_noop,leave=walk_noop;if("function"==typeof options?enter=options:options&&(enter=walk_ensureFunction(options.enter),leave=walk_ensureFunction(options.leave)),enter===walk_noop&&leave===walk_noop)throw new Error("Neither `enter` nor `leave` walker handler is set or both aren't a function");!function walk(node){switch(enter.call(context,node),node.type){case"Group":node.terms.forEach(walk);break;case"Multiplier":case"Boolean":walk(node.term);break;case"Type":case"Property":case"Keyword":case"AtKeyword":case"Function":case"String":case"Token":case"Comma":break;default:throw new Error("Unknown type: "+node.type)}leave.call(context,node)}(node)}(descriptor.syntax,(function(node){if("Type"!==node.type&&"Property"!==node.type)return;const map="Type"===node.type?syntax.types:syntax.properties,brokenMap="Type"===node.type?brokenTypes:brokenProperties;hasOwnProperty.call(map,node.name)?validate(syntax,node.name,brokenMap,map[node.name])&&(errors.push(`${syntaxRef(name,broken===brokenTypes)} used broken syntax definition ${syntaxRef(node.name,"Type"===node.type)}`),broken.set(name,!0)):(errors.push(`${syntaxRef(name,broken===brokenTypes)} used missed syntax definition ${syntaxRef(node.name,"Type"===node.type)}`),broken.set(name,!0))}),this)}const errors=[];let brokenTypes=new Map,brokenProperties=new Map;for(const key in this.types)validate(this,key,brokenTypes,this.types[key]);for(const key in this.properties)validate(this,key,brokenProperties,this.properties[key]);const brokenTypesArray=[...brokenTypes.keys()].filter((name=>brokenTypes.get(name))),brokenPropertiesArray=[...brokenProperties.keys()].filter((name=>brokenProperties.get(name)));return brokenTypesArray.length||brokenPropertiesArray.length?{errors,types:brokenTypesArray,properties:brokenPropertiesArray}:null}dump(syntaxAsAst,pretty){return{generic:this.generic,cssWideKeywords:this.cssWideKeywords,units:this.units,types:dumpMapSyntax(this.types,!pretty,syntaxAsAst),properties:dumpMapSyntax(this.properties,!pretty,syntaxAsAst),atrules:dumpAtruleMapSyntax(this.atrules,!pretty,syntaxAsAst)}}toString(){return JSON.stringify(this.dump())}}function appendOrSet(a,b){return"string"==typeof b&&/^\s*\|/.test(b)?"string"==typeof a?a+b:b.replace(/^\s*\|\s*/,""):b||null}function sliceProps(obj,props){const result=Object.create(null);for(const[key,value]of Object.entries(obj))if(value){result[key]={};for(const prop of Object.keys(value))props.includes(prop)&&(result[key][prop]=value[prop])}return result}function mix(dest,src){const result={...dest};for(const[prop,value]of Object.entries(src))switch(prop){case"generic":result[prop]=Boolean(value);break;case"cssWideKeywords":result[prop]=dest[prop]?[...dest[prop],...value]:value||[];break;case"units":result[prop]={...dest[prop]};for(const[name,patch]of Object.entries(value))result[prop][name]=Array.isArray(patch)?patch:[];break;case"atrules":result[prop]={...dest[prop]};for(const[name,atrule]of Object.entries(value)){const exists=result[prop][name]||{},current=result[prop][name]={prelude:exists.prelude||null,descriptors:{...exists.descriptors}};if(atrule){current.prelude=atrule.prelude?appendOrSet(current.prelude,atrule.prelude):current.prelude||null;for(const[descriptorName,descriptorValue]of Object.entries(atrule.descriptors||{}))current.descriptors[descriptorName]=descriptorValue?appendOrSet(current.descriptors[descriptorName],descriptorValue):null;Object.keys(current.descriptors).length||(current.descriptors=null)}}break;case"types":case"properties":result[prop]={...dest[prop]};for(const[name,syntax]of Object.entries(value))result[prop][name]=appendOrSet(result[prop][name],syntax);break;case"scope":case"features":result[prop]={...dest[prop]};for(const[name,props]of Object.entries(value))result[prop][name]={...result[prop][name],...props};break;case"parseContext":result[prop]={...dest[prop],...value};break;case"atrule":case"pseudo":result[prop]={...dest[prop],...sliceProps(value,["parse"])};break;case"node":result[prop]={...dest[prop],...sliceProps(value,["name","structure","parse","generate","walkContext"])}}return result}function createSyntax(config){const parse=createParser(config),walk=createWalker(config),generate=createGenerator(config),{fromPlainObject,toPlainObject}=function createConvertor(walk){return{fromPlainObject:ast=>(walk(ast,{enter(node){node.children&&node.children instanceof List_List==0&&(node.children=(new List_List).fromArray(node.children))}}),ast),toPlainObject:ast=>(walk(ast,{leave(node){node.children&&node.children instanceof List_List&&(node.children=node.children.toArray())}}),ast)}}(walk),syntax={lexer:null,createLexer:config=>new Lexer(config,syntax,syntax.lexer.structure),tokenize,parse,generate,walk,find:walk.find,findLast:walk.findLast,findAll:walk.findAll,fromPlainObject,toPlainObject,fork(extension){const base=mix({},config);return createSyntax("function"==typeof extension?extension(base):mix(base,extension))}};return syntax.lexer=new Lexer({generic:config.generic,cssWideKeywords:config.cssWideKeywords,units:config.units,types:config.types,atrules:config.atrules,properties:config.properties,node:config.node},syntax),syntax}const AnPlusB_PLUSSIGN=43,AnPlusB_HYPHENMINUS=45,AnPlusB_N=110,AnPlusB_DISALLOW_SIGN=!0,AnPlusB_ALLOW_SIGN=!1;function AnPlusB_checkInteger(offset,disallowSign){let pos=this.tokenStart+offset;const code=this.charCodeAt(pos);for(code!==AnPlusB_PLUSSIGN&&code!==AnPlusB_HYPHENMINUS||(disallowSign&&this.error("Number sign is not allowed"),pos++);pos<this.tokenEnd;pos++)isDigit(this.charCodeAt(pos))||this.error("Integer is expected",pos)}function checkTokenIsInteger(disallowSign){return AnPlusB_checkInteger.call(this,0,disallowSign)}function expectCharCode(offset,code){if(!this.cmpChar(this.tokenStart+offset,code)){let msg="";switch(code){case AnPlusB_N:msg="N is expected";break;case AnPlusB_HYPHENMINUS:msg="HyphenMinus is expected"}this.error(msg,this.tokenStart+offset)}}function AnPlusB_consumeB(){let offset=0,sign=0,type=this.tokenType;for(;type===WhiteSpace||type===Comment;)type=this.lookupType(++offset);if(type!==types_Number){if(!this.isDelim(AnPlusB_PLUSSIGN,offset)&&!this.isDelim(AnPlusB_HYPHENMINUS,offset))return null;sign=this.isDelim(AnPlusB_PLUSSIGN,offset)?AnPlusB_PLUSSIGN:AnPlusB_HYPHENMINUS;do{type=this.lookupType(++offset)}while(type===WhiteSpace||type===Comment);type!==types_Number&&(this.skip(offset),checkTokenIsInteger.call(this,AnPlusB_DISALLOW_SIGN))}return offset>0&&this.skip(offset),0===sign&&(type=this.charCodeAt(this.tokenStart),type!==AnPlusB_PLUSSIGN&&type!==AnPlusB_HYPHENMINUS&&this.error("Number sign is expected")),checkTokenIsInteger.call(this,0!==sign),sign===AnPlusB_HYPHENMINUS?"-"+this.consume(types_Number):this.consume(types_Number)}const AnPlusB_name="AnPlusB",structure={a:[String,null],b:[String,null]};function AnPlusB_parse(){const start=this.tokenStart;let a=null,b=null;if(this.tokenType===types_Number)checkTokenIsInteger.call(this,AnPlusB_ALLOW_SIGN),b=this.consume(types_Number);else if(this.tokenType===Ident&&this.cmpChar(this.tokenStart,AnPlusB_HYPHENMINUS))switch(a="-1",expectCharCode.call(this,1,AnPlusB_N),this.tokenEnd-this.tokenStart){case 2:this.next(),b=AnPlusB_consumeB.call(this);break;case 3:expectCharCode.call(this,2,AnPlusB_HYPHENMINUS),this.next(),this.skipSC(),checkTokenIsInteger.call(this,AnPlusB_DISALLOW_SIGN),b="-"+this.consume(types_Number);break;default:expectCharCode.call(this,2,AnPlusB_HYPHENMINUS),AnPlusB_checkInteger.call(this,3,AnPlusB_DISALLOW_SIGN),this.next(),b=this.substrToCursor(start+2)}else if(this.tokenType===Ident||this.isDelim(AnPlusB_PLUSSIGN)&&this.lookupType(1)===Ident){let sign=0;switch(a="1",this.isDelim(AnPlusB_PLUSSIGN)&&(sign=1,this.next()),expectCharCode.call(this,0,AnPlusB_N),this.tokenEnd-this.tokenStart){case 1:this.next(),b=AnPlusB_consumeB.call(this);break;case 2:expectCharCode.call(this,1,AnPlusB_HYPHENMINUS),this.next(),this.skipSC(),checkTokenIsInteger.call(this,AnPlusB_DISALLOW_SIGN),b="-"+this.consume(types_Number);break;default:expectCharCode.call(this,1,AnPlusB_HYPHENMINUS),AnPlusB_checkInteger.call(this,2,AnPlusB_DISALLOW_SIGN),this.next(),b=this.substrToCursor(start+sign+1)}}else if(this.tokenType===Dimension){const code=this.charCodeAt(this.tokenStart),sign=code===AnPlusB_PLUSSIGN||code===AnPlusB_HYPHENMINUS;let i=this.tokenStart+sign;for(;i<this.tokenEnd&&isDigit(this.charCodeAt(i));i++);i===this.tokenStart+sign&&this.error("Integer is expected",this.tokenStart+sign),expectCharCode.call(this,i-this.tokenStart,AnPlusB_N),a=this.substring(start,i),i+1===this.tokenEnd?(this.next(),b=AnPlusB_consumeB.call(this)):(expectCharCode.call(this,i-this.tokenStart+1,AnPlusB_HYPHENMINUS),i+2===this.tokenEnd?(this.next(),this.skipSC(),checkTokenIsInteger.call(this,AnPlusB_DISALLOW_SIGN),b="-"+this.consume(types_Number)):(AnPlusB_checkInteger.call(this,i-this.tokenStart+2,AnPlusB_DISALLOW_SIGN),this.next(),b=this.substrToCursor(i+1)))}else this.error();return null!==a&&a.charCodeAt(0)===AnPlusB_PLUSSIGN&&(a=a.substr(1)),null!==b&&b.charCodeAt(0)===AnPlusB_PLUSSIGN&&(b=b.substr(1)),{type:"AnPlusB",loc:this.getLocation(start,this.tokenStart),a,b}}function AnPlusB_generate(node){if(node.a){const a=("+1"===node.a||"1"===node.a?"n":"-1"===node.a&&"-n")||node.a+"n";if(node.b){const b="-"===node.b[0]||"+"===node.b[0]?node.b:"+"+node.b;this.tokenize(a+b)}else this.tokenize(a)}else this.tokenize(node.b)}function consumeRaw(){return this.Raw(this.consumeUntilLeftCurlyBracketOrSemicolon,!0)}function isDeclarationBlockAtrule(){for(let type,offset=1;type=this.lookupType(offset);offset++){if(type===RightCurlyBracket)return!0;if(type===LeftCurlyBracket||type===AtKeyword)return!1}return!1}const Atrule_name="Atrule",walkContext="atrule",Atrule_structure={name:String,prelude:["AtrulePrelude","Raw",null],block:["Block",null]};function Atrule_parse(isDeclaration=!1){const start=this.tokenStart;let name,nameLowerCase,prelude=null,block=null;switch(this.eat(AtKeyword),name=this.substrToCursor(start+1),nameLowerCase=name.toLowerCase(),this.skipSC(),!1===this.eof&&this.tokenType!==LeftCurlyBracket&&this.tokenType!==Semicolon&&(prelude=this.parseAtrulePrelude?this.parseWithFallback(this.AtrulePrelude.bind(this,name,isDeclaration),consumeRaw):consumeRaw.call(this,this.tokenIndex),this.skipSC()),this.tokenType){case Semicolon:this.next();break;case LeftCurlyBracket:block=hasOwnProperty.call(this.atrule,nameLowerCase)&&"function"==typeof this.atrule[nameLowerCase].block?this.atrule[nameLowerCase].block.call(this,isDeclaration):this.Block(isDeclarationBlockAtrule.call(this))}return{type:"Atrule",loc:this.getLocation(start,this.tokenStart),name,prelude,block}}function Atrule_generate(node){this.token(AtKeyword,"@"+node.name),null!==node.prelude&&this.node(node.prelude),node.block?this.node(node.block):this.token(Semicolon,";")}const AtrulePrelude_name="AtrulePrelude",AtrulePrelude_walkContext="atrulePrelude",AtrulePrelude_structure={children:[[]]};function AtrulePrelude_parse(name){let children=null;return null!==name&&(name=name.toLowerCase()),this.skipSC(),children=hasOwnProperty.call(this.atrule,name)&&"function"==typeof this.atrule[name].prelude?this.atrule[name].prelude.call(this):this.readSequence(this.scope.AtrulePrelude),this.skipSC(),!0!==this.eof&&this.tokenType!==LeftCurlyBracket&&this.tokenType!==Semicolon&&this.error("Semicolon or block is expected"),{type:"AtrulePrelude",loc:this.getLocationFromList(children),children}}function AtrulePrelude_generate(node){this.children(node)}const DOLLARSIGN=36,AttributeSelector_ASTERISK=42,EQUALSSIGN=61,CIRCUMFLEXACCENT=94,AttributeSelector_VERTICALLINE=124,TILDE=126;function getAttributeName(){this.eof&&this.error("Unexpected end of input");const start=this.tokenStart;let expectIdent=!1;return this.isDelim(AttributeSelector_ASTERISK)?(expectIdent=!0,this.next()):this.isDelim(AttributeSelector_VERTICALLINE)||this.eat(Ident),this.isDelim(AttributeSelector_VERTICALLINE)?this.charCodeAt(this.tokenStart+1)!==EQUALSSIGN?(this.next(),this.eat(Ident)):expectIdent&&this.error("Identifier is expected",this.tokenEnd):expectIdent&&this.error("Vertical line is expected"),{type:"Identifier",loc:this.getLocation(start,this.tokenStart),name:this.substrToCursor(start)}}function getOperator(){const start=this.tokenStart,code=this.charCodeAt(start);return code!==EQUALSSIGN&&code!==TILDE&&code!==CIRCUMFLEXACCENT&&code!==DOLLARSIGN&&code!==AttributeSelector_ASTERISK&&code!==AttributeSelector_VERTICALLINE&&this.error("Attribute selector (=, ~=, ^=, $=, *=, |=) is expected"),this.next(),code!==EQUALSSIGN&&(this.isDelim(EQUALSSIGN)||this.error("Equal sign is expected"),this.next()),this.substrToCursor(start)}const AttributeSelector_name="AttributeSelector",AttributeSelector_structure={name:"Identifier",matcher:[String,null],value:["String","Identifier",null],flags:[String,null]};function AttributeSelector_parse(){const start=this.tokenStart;let name,matcher=null,value=null,flags=null;return this.eat(LeftSquareBracket),this.skipSC(),name=getAttributeName.call(this),this.skipSC(),this.tokenType!==RightSquareBracket&&(this.tokenType!==Ident&&(matcher=getOperator.call(this),this.skipSC(),value=this.tokenType===types_String?this.String():this.Identifier(),this.skipSC()),this.tokenType===Ident&&(flags=this.consume(Ident),this.skipSC())),this.eat(RightSquareBracket),{type:"AttributeSelector",loc:this.getLocation(start,this.tokenStart),name,matcher,value,flags}}function AttributeSelector_generate(node){this.token(Delim,"["),this.node(node.name),null!==node.matcher&&(this.tokenize(node.matcher),this.node(node.value)),null!==node.flags&&this.token(Ident,node.flags),this.token(Delim,"]")}const Block_AMPERSAND=38;function Block_consumeRaw(){return this.Raw(null,!0)}function consumeRule(){return this.parseWithFallback(this.Rule,Block_consumeRaw)}function consumeRawDeclaration(){return this.Raw(this.consumeUntilSemicolonIncluded,!0)}function consumeDeclaration(){if(this.tokenType===Semicolon)return consumeRawDeclaration.call(this,this.tokenIndex);const node=this.parseWithFallback(this.Declaration,consumeRawDeclaration);return this.tokenType===Semicolon&&this.next(),node}const Block_name="Block",Block_walkContext="block",Block_structure={children:[["Atrule","Rule","Declaration"]]};function Block_parse(isStyleBlock){const consumer=isStyleBlock?consumeDeclaration:consumeRule,start=this.tokenStart;let children=this.createList();this.eat(LeftCurlyBracket);scan:for(;!this.eof;)switch(this.tokenType){case RightCurlyBracket:break scan;case WhiteSpace:case Comment:this.next();break;case AtKeyword:children.push(this.parseWithFallback(this.Atrule.bind(this,isStyleBlock),Block_consumeRaw));break;default:isStyleBlock&&this.isDelim(Block_AMPERSAND)?children.push(consumeRule.call(this)):children.push(consumer.call(this))}return this.eof||this.eat(RightCurlyBracket),{type:"Block",loc:this.getLocation(start,this.tokenStart),children}}function Block_generate(node){this.token(LeftCurlyBracket,"{"),this.children(node,(prev=>{"Declaration"===prev.type&&this.token(Semicolon,";")})),this.token(RightCurlyBracket,"}")}const Brackets_name="Brackets",Brackets_structure={children:[[]]};function Brackets_parse(readSequence,recognizer){const start=this.tokenStart;let children=null;return this.eat(LeftSquareBracket),children=readSequence.call(this,recognizer),this.eof||this.eat(RightSquareBracket),{type:"Brackets",loc:this.getLocation(start,this.tokenStart),children}}function Brackets_generate(node){this.token(Delim,"["),this.children(node),this.token(Delim,"]")}const CDC_name="CDC",CDC_structure=[];function CDC_parse(){const start=this.tokenStart;return this.eat(CDC),{type:"CDC",loc:this.getLocation(start,this.tokenStart)}}function CDC_generate(){this.token(CDC,"--\x3e")}const CDO_name="CDO",CDO_structure=[];function CDO_parse(){const start=this.tokenStart;return this.eat(CDO),{type:"CDO",loc:this.getLocation(start,this.tokenStart)}}function CDO_generate(){this.token(CDO,"\x3c!--")}const FULLSTOP=46,ClassSelector_name="ClassSelector",ClassSelector_structure={name:String};function ClassSelector_parse(){return this.eatDelim(FULLSTOP),{type:"ClassSelector",loc:this.getLocation(this.tokenStart-1,this.tokenEnd),name:this.consume(Ident)}}function ClassSelector_generate(node){this.token(Delim,"."),this.token(Ident,node.name)}const Combinator_PLUSSIGN=43,SOLIDUS=47,Combinator_GREATERTHANSIGN=62,Combinator_TILDE=126,Combinator_name="Combinator",Combinator_structure={name:String};function Combinator_parse(){const start=this.tokenStart;let name;switch(this.tokenType){case WhiteSpace:name=" ";break;case Delim:switch(this.charCodeAt(this.tokenStart)){case Combinator_GREATERTHANSIGN:case Combinator_PLUSSIGN:case Combinator_TILDE:this.next();break;case SOLIDUS:this.next(),this.eatIdent("deep"),this.eatDelim(SOLIDUS);break;default:this.error("Combinator is expected")}name=this.substrToCursor(start)}return{type:"Combinator",loc:this.getLocation(start,this.tokenStart),name}}function Combinator_generate(node){this.tokenize(node.name)}const Comment_ASTERISK=42,Comment_SOLIDUS=47,Comment_name="Comment",Comment_structure={value:String};function Comment_parse(){const start=this.tokenStart;let end=this.tokenEnd;return this.eat(Comment),end-start+2>=2&&this.charCodeAt(end-2)===Comment_ASTERISK&&this.charCodeAt(end-1)===Comment_SOLIDUS&&(end-=2),{type:"Comment",loc:this.getLocation(start,this.tokenStart),value:this.substring(start+2,end)}}function Comment_generate(node){this.token(Comment,"/*"+node.value+"*/")}const likelyFeatureToken=new Set([Colon,RightParenthesis,EOF]),Condition_name="Condition",Condition_structure={kind:String,children:[["Identifier","Feature","FeatureFunction","FeatureRange","SupportsDeclaration"]]};function featureOrRange(kind){return this.lookupTypeNonSC(1)===Ident&&likelyFeatureToken.has(this.lookupTypeNonSC(2))?this.Feature(kind):this.FeatureRange(kind)}const parentheses={media:featureOrRange,container:featureOrRange,supports(){return this.SupportsDeclaration()}};function Condition_parse(kind="media"){const children=this.createList();scan:for(;!this.eof;)switch(this.tokenType){case Comment:case WhiteSpace:this.next();continue;case Ident:children.push(this.Identifier());break;case LeftParenthesis:{let term=this.parseWithFallback((()=>parentheses[kind].call(this,kind)),(()=>null));term||(term=this.parseWithFallback((()=>{this.eat(LeftParenthesis);const res=this.Condition(kind);return this.eat(RightParenthesis),res}),(()=>this.GeneralEnclosed(kind)))),children.push(term);break}case Function:{let term=this.parseWithFallback((()=>this.FeatureFunction(kind)),(()=>null));term||(term=this.GeneralEnclosed(kind)),children.push(term);break}default:break scan}return children.isEmpty&&this.error("Condition is expected"),{type:"Condition",loc:this.getLocationFromList(children),kind,children}}function Condition_generate(node){node.children.forEach((child=>{"Condition"===child.type?(this.token(LeftParenthesis,"("),this.node(child),this.token(RightParenthesis,")")):this.node(child)}))}const Declaration_EXCLAMATIONMARK=33,Declaration_NUMBERSIGN=35,Declaration_DOLLARSIGN=36,Declaration_AMPERSAND=38,Declaration_ASTERISK=42,Declaration_PLUSSIGN=43,Declaration_SOLIDUS=47;function consumeValueRaw(){return this.Raw(this.consumeUntilExclamationMarkOrSemicolon,!0)}function consumeCustomPropertyRaw(){return this.Raw(this.consumeUntilExclamationMarkOrSemicolon,!1)}function consumeValue(){const startValueToken=this.tokenIndex,value=this.Value();return"Raw"!==value.type&&!1===this.eof&&this.tokenType!==Semicolon&&!1===this.isDelim(Declaration_EXCLAMATIONMARK)&&!1===this.isBalanceEdge(startValueToken)&&this.error(),value}const Declaration_name="Declaration",Declaration_walkContext="declaration",Declaration_structure={important:[Boolean,String],property:String,value:["Value","Raw"]};function Declaration_parse(){const start=this.tokenStart,startToken=this.tokenIndex,property=Declaration_readProperty.call(this),customProperty=isCustomProperty(property),parseValue=customProperty?this.parseCustomProperty:this.parseValue,consumeRaw=customProperty?consumeCustomPropertyRaw:consumeValueRaw;let value,important=!1;this.skipSC(),this.eat(Colon);const valueStart=this.tokenIndex;if(customProperty||this.skipSC(),value=parseValue?this.parseWithFallback(consumeValue,consumeRaw):consumeRaw.call(this,this.tokenIndex),customProperty&&"Value"===value.type&&value.children.isEmpty)for(let offset=valueStart-this.tokenIndex;offset<=0;offset++)if(this.lookupType(offset)===WhiteSpace){value.children.appendData({type:"WhiteSpace",loc:null,value:" "});break}return this.isDelim(Declaration_EXCLAMATIONMARK)&&(important=getImportant.call(this),this.skipSC()),!1===this.eof&&this.tokenType!==Semicolon&&!1===this.isBalanceEdge(startToken)&&this.error(),{type:"Declaration",loc:this.getLocation(start,this.tokenStart),important,property,value}}function Declaration_generate(node){this.token(Ident,node.property),this.token(Colon,":"),this.node(node.value),node.important&&(this.token(Delim,"!"),this.token(Ident,!0===node.important?"important":node.important))}function Declaration_readProperty(){const start=this.tokenStart;if(this.tokenType===Delim)switch(this.charCodeAt(this.tokenStart)){case Declaration_ASTERISK:case Declaration_DOLLARSIGN:case Declaration_PLUSSIGN:case Declaration_NUMBERSIGN:case Declaration_AMPERSAND:this.next();break;case Declaration_SOLIDUS:this.next(),this.isDelim(Declaration_SOLIDUS)&&this.next()}return this.tokenType===Hash?this.eat(Hash):this.eat(Ident),this.substrToCursor(start)}function getImportant(){this.eat(Delim),this.skipSC();const important=this.consume(Ident);return"important"===important||important}const DeclarationList_AMPERSAND=38;function DeclarationList_consumeRaw(){return this.Raw(this.consumeUntilSemicolonIncluded,!0)}const DeclarationList_name="DeclarationList",DeclarationList_structure={children:[["Declaration","Atrule","Rule"]]};function DeclarationList_parse(){const children=this.createList();for(;!this.eof;)switch(this.tokenType){case WhiteSpace:case Comment:case Semicolon:this.next();break;case AtKeyword:children.push(this.parseWithFallback(this.Atrule.bind(this,!0),DeclarationList_consumeRaw));break;default:this.isDelim(DeclarationList_AMPERSAND)?children.push(this.parseWithFallback(this.Rule,DeclarationList_consumeRaw)):children.push(this.parseWithFallback(this.Declaration,DeclarationList_consumeRaw))}return{type:"DeclarationList",loc:this.getLocationFromList(children),children}}function DeclarationList_generate(node){this.children(node,(prev=>{"Declaration"===prev.type&&this.token(Semicolon,";")}))}const Dimension_name="Dimension",Dimension_structure={value:String,unit:String};function Dimension_parse(){const start=this.tokenStart,value=this.consumeNumber(Dimension);return{type:"Dimension",loc:this.getLocation(start,this.tokenStart),value,unit:this.substring(start+value.length,this.tokenStart)}}function Dimension_generate(node){this.token(Dimension,node.value+node.unit)}const Feature_SOLIDUS=47,Feature_name="Feature",Feature_structure={kind:String,name:String,value:["Identifier","Number","Dimension","Ratio","Function",null]};function Feature_parse(kind){const start=this.tokenStart;let name,value=null;if(this.eat(LeftParenthesis),this.skipSC(),name=this.consume(Ident),this.skipSC(),this.tokenType!==RightParenthesis){switch(this.eat(Colon),this.skipSC(),this.tokenType){case types_Number:value=this.lookupNonWSType(1)===Delim?this.Ratio():this.Number();break;case Dimension:value=this.Dimension();break;case Ident:value=this.Identifier();break;case Function:value=this.parseWithFallback((()=>{const res=this.Function(this.readSequence,this.scope.Value);return this.skipSC(),this.isDelim(Feature_SOLIDUS)&&this.error(),res}),(()=>this.Ratio()));break;default:this.error("Number, dimension, ratio or identifier is expected")}this.skipSC()}return this.eof||this.eat(RightParenthesis),{type:"Feature",loc:this.getLocation(start,this.tokenStart),kind,name,value}}function Feature_generate(node){this.token(LeftParenthesis,"("),this.token(Ident,node.name),null!==node.value&&(this.token(Colon,":"),this.node(node.value)),this.token(RightParenthesis,")")}const FeatureFunction_name="FeatureFunction",FeatureFunction_structure={kind:String,feature:String,value:["Declaration","Selector"]};function getFeatureParser(kind,name){const parser=(this.features[kind]||{})[name];return"function"!=typeof parser&&this.error(`Unknown feature ${name}()`),parser}function FeatureFunction_parse(kind="unknown"){const start=this.tokenStart,functionName=this.consumeFunctionName(),valueParser=getFeatureParser.call(this,kind,functionName.toLowerCase());this.skipSC();const value=this.parseWithFallback((()=>{const startValueToken=this.tokenIndex,value=valueParser.call(this);return!1===this.eof&&!1===this.isBalanceEdge(startValueToken)&&this.error(),value}),(()=>this.Raw(null,!1)));return this.eof||this.eat(RightParenthesis),{type:"FeatureFunction",loc:this.getLocation(start,this.tokenStart),kind,feature:functionName,value}}function FeatureFunction_generate(node){this.token(Function,node.feature+"("),this.node(node.value),this.token(RightParenthesis,")")}const FeatureRange_SOLIDUS=47,FeatureRange_LESSTHANSIGN=60,FeatureRange_EQUALSSIGN=61,FeatureRange_GREATERTHANSIGN=62,FeatureRange_name="FeatureRange",FeatureRange_structure={kind:String,left:["Identifier","Number","Dimension","Ratio","Function"],leftComparison:String,middle:["Identifier","Number","Dimension","Ratio","Function"],rightComparison:[String,null],right:["Identifier","Number","Dimension","Ratio","Function",null]};function readTerm(){switch(this.skipSC(),this.tokenType){case types_Number:return this.isDelim(FeatureRange_SOLIDUS,this.lookupOffsetNonSC(1))?this.Ratio():this.Number();case Dimension:return this.Dimension();case Ident:return this.Identifier();case Function:return this.parseWithFallback((()=>{const res=this.Function(this.readSequence,this.scope.Value);return this.skipSC(),this.isDelim(FeatureRange_SOLIDUS)&&this.error(),res}),(()=>this.Ratio()));default:this.error("Number, dimension, ratio or identifier is expected")}}function readComparison(expectColon){if(this.skipSC(),this.isDelim(FeatureRange_LESSTHANSIGN)||this.isDelim(FeatureRange_GREATERTHANSIGN)){const value=this.source[this.tokenStart];return this.next(),this.isDelim(FeatureRange_EQUALSSIGN)?(this.next(),value+"="):value}if(this.isDelim(FeatureRange_EQUALSSIGN))return"=";this.error(`Expected ${expectColon?'":", ':""}"<", ">", "=" or ")"`)}function FeatureRange_parse(kind="unknown"){const start=this.tokenStart;this.skipSC(),this.eat(LeftParenthesis);const left=readTerm.call(this),leftComparison=readComparison.call(this,"Identifier"===left.type),middle=readTerm.call(this);let rightComparison=null,right=null;return this.lookupNonWSType(0)!==RightParenthesis&&(rightComparison=readComparison.call(this),right=readTerm.call(this)),this.skipSC(),this.eat(RightParenthesis),{type:"FeatureRange",loc:this.getLocation(start,this.tokenStart),kind,left,leftComparison,middle,rightComparison,right}}function FeatureRange_generate(node){this.token(LeftParenthesis,"("),this.node(node.left),this.tokenize(node.leftComparison),this.node(node.middle),node.right&&(this.tokenize(node.rightComparison),this.node(node.right)),this.token(RightParenthesis,")")}const Function_name="Function",Function_walkContext="function",Function_structure={name:String,children:[[]]};function Function_parse(readSequence,recognizer){const start=this.tokenStart,name=this.consumeFunctionName(),nameLowerCase=name.toLowerCase();let children;return children=recognizer.hasOwnProperty(nameLowerCase)?recognizer[nameLowerCase].call(this,recognizer):readSequence.call(this,recognizer),this.eof||this.eat(RightParenthesis),{type:"Function",loc:this.getLocation(start,this.tokenStart),name,children}}function Function_generate(node){this.token(Function,node.name+"("),this.children(node),this.token(RightParenthesis,")")}const GeneralEnclosed_name="GeneralEnclosed",GeneralEnclosed_structure={kind:String,function:[String,null],children:[[]]};function GeneralEnclosed_parse(kind){const start=this.tokenStart;let functionName=null;this.tokenType===Function?functionName=this.consumeFunctionName():this.eat(LeftParenthesis);const children=this.parseWithFallback((()=>{const startValueToken=this.tokenIndex,children=this.readSequence(this.scope.Value);return!1===this.eof&&!1===this.isBalanceEdge(startValueToken)&&this.error(),children}),(()=>this.createSingleNodeList(this.Raw(null,!1))));return this.eof||this.eat(RightParenthesis),{type:"GeneralEnclosed",loc:this.getLocation(start,this.tokenStart),kind,function:functionName,children}}function GeneralEnclosed_generate(node){node.function?this.token(Function,node.function+"("):this.token(LeftParenthesis,"("),this.children(node),this.token(RightParenthesis,")")}const xxx="XXX",Hash_name="Hash",Hash_structure={value:String};function Hash_parse(){const start=this.tokenStart;return this.eat(Hash),{type:"Hash",loc:this.getLocation(start,this.tokenStart),value:this.substrToCursor(start+1)}}function Hash_generate(node){this.token(Hash,"#"+node.value)}const Identifier_name="Identifier",Identifier_structure={name:String};function Identifier_parse(){return{type:"Identifier",loc:this.getLocation(this.tokenStart,this.tokenEnd),name:this.consume(Ident)}}function Identifier_generate(node){this.token(Ident,node.name)}const IdSelector_name="IdSelector",IdSelector_structure={name:String};function IdSelector_parse(){const start=this.tokenStart;return this.eat(Hash),{type:"IdSelector",loc:this.getLocation(start,this.tokenStart),name:this.substrToCursor(start+1)}}function IdSelector_generate(node){this.token(Delim,"#"+node.name)}const Layer_FULLSTOP=46,Layer_name="Layer",Layer_structure={name:String};function Layer_parse(){let tokenStart=this.tokenStart,name=this.consume(Ident);for(;this.isDelim(Layer_FULLSTOP);)this.eat(Delim),name+="."+this.consume(Ident);return{type:"Layer",loc:this.getLocation(tokenStart,this.tokenStart),name}}function Layer_generate(node){this.tokenize(node.name)}const LayerList_name="LayerList",LayerList_structure={children:[["Layer"]]};function LayerList_parse(){const children=this.createList();for(this.skipSC();!this.eof&&(children.push(this.Layer()),this.lookupTypeNonSC(0)===Comma);)this.skipSC(),this.next(),this.skipSC();return{type:"LayerList",loc:this.getLocationFromList(children),children}}function LayerList_generate(node){this.children(node,(()=>this.token(Comma,",")))}const MediaQuery_name="MediaQuery",MediaQuery_structure={modifier:[String,null],mediaType:[String,null],condition:["Condition",null]};function MediaQuery_parse(){const start=this.tokenStart;let modifier=null,mediaType=null,condition=null;if(this.skipSC(),this.tokenType===Ident&&this.lookupTypeNonSC(1)!==LeftParenthesis){const ident=this.consume(Ident),identLowerCase=ident.toLowerCase();switch("not"===identLowerCase||"only"===identLowerCase?(this.skipSC(),modifier=identLowerCase,mediaType=this.consume(Ident)):mediaType=ident,this.lookupTypeNonSC(0)){case Ident:this.skipSC(),this.eatIdent("and"),condition=this.Condition("media");break;case LeftCurlyBracket:case Semicolon:case Comma:case EOF:break;default:this.error("Identifier or parenthesis is expected")}}else switch(this.tokenType){case Ident:case LeftParenthesis:case Function:condition=this.Condition("media");break;case LeftCurlyBracket:case Semicolon:case EOF:break;default:this.error("Identifier or parenthesis is expected")}return{type:"MediaQuery",loc:this.getLocation(start,this.tokenStart),modifier,mediaType,condition}}function MediaQuery_generate(node){node.mediaType?(node.modifier&&this.token(Ident,node.modifier),this.token(Ident,node.mediaType),node.condition&&(this.token(Ident,"and"),this.node(node.condition))):node.condition&&this.node(node.condition)}const MediaQueryList_name="MediaQueryList",MediaQueryList_structure={children:[["MediaQuery"]]};function MediaQueryList_parse(){const children=this.createList();for(this.skipSC();!this.eof&&(children.push(this.MediaQuery()),this.tokenType===Comma);)this.next();return{type:"MediaQueryList",loc:this.getLocationFromList(children),children}}function MediaQueryList_generate(node){this.children(node,(()=>this.token(Comma,",")))}const NestingSelector_AMPERSAND=38,NestingSelector_name="NestingSelector",NestingSelector_structure={};function NestingSelector_parse(){const start=this.tokenStart;return this.eatDelim(NestingSelector_AMPERSAND),{type:"NestingSelector",loc:this.getLocation(start,this.tokenStart)}}function NestingSelector_generate(){this.token(Delim,"&")}const Nth_name="Nth",Nth_structure={nth:["AnPlusB","Identifier"],selector:["SelectorList",null]};function Nth_parse(){this.skipSC();const start=this.tokenStart;let nth,end=start,selector=null;return nth=this.lookupValue(0,"odd")||this.lookupValue(0,"even")?this.Identifier():this.AnPlusB(),end=this.tokenStart,this.skipSC(),this.lookupValue(0,"of")&&(this.next(),selector=this.SelectorList(),end=this.tokenStart),{type:"Nth",loc:this.getLocation(start,end),nth,selector}}function Nth_generate(node){this.node(node.nth),null!==node.selector&&(this.token(Ident,"of"),this.node(node.selector))}const Number_name="Number",Number_structure={value:String};function Number_parse(){return{type:"Number",loc:this.getLocation(this.tokenStart,this.tokenEnd),value:this.consume(types_Number)}}function Number_generate(node){this.token(types_Number,node.value)}const Operator_name="Operator",Operator_structure={value:String};function Operator_parse(){const start=this.tokenStart;return this.next(),{type:"Operator",loc:this.getLocation(start,this.tokenStart),value:this.substrToCursor(start)}}function Operator_generate(node){this.tokenize(node.value)}const Parentheses_name="Parentheses",Parentheses_structure={children:[[]]};function Parentheses_parse(readSequence,recognizer){const start=this.tokenStart;let children=null;return this.eat(LeftParenthesis),children=readSequence.call(this,recognizer),this.eof||this.eat(RightParenthesis),{type:"Parentheses",loc:this.getLocation(start,this.tokenStart),children}}function Parentheses_generate(node){this.token(LeftParenthesis,"("),this.children(node),this.token(RightParenthesis,")")}const Percentage_name="Percentage",Percentage_structure={value:String};function Percentage_parse(){return{type:"Percentage",loc:this.getLocation(this.tokenStart,this.tokenEnd),value:this.consumeNumber(Percentage)}}function Percentage_generate(node){this.token(Percentage,node.value+"%")}const PseudoClassSelector_name="PseudoClassSelector",PseudoClassSelector_walkContext="function",PseudoClassSelector_structure={name:String,children:[["Raw"],null]};function PseudoClassSelector_parse(){const start=this.tokenStart;let name,nameLowerCase,children=null;return this.eat(Colon),this.tokenType===Function?(name=this.consumeFunctionName(),nameLowerCase=name.toLowerCase(),this.lookupNonWSType(0)==RightParenthesis?children=this.createList():hasOwnProperty.call(this.pseudo,nameLowerCase)?(this.skipSC(),children=this.pseudo[nameLowerCase].call(this),this.skipSC()):(children=this.createList(),children.push(this.Raw(null,!1))),this.eat(RightParenthesis)):name=this.consume(Ident),{type:"PseudoClassSelector",loc:this.getLocation(start,this.tokenStart),name,children}}function PseudoClassSelector_generate(node){this.token(Colon,":"),null===node.children?this.token(Ident,node.name):(this.token(Function,node.name+"("),this.children(node),this.token(RightParenthesis,")"))}const PseudoElementSelector_name="PseudoElementSelector",PseudoElementSelector_walkContext="function",PseudoElementSelector_structure={name:String,children:[["Raw"],null]};function PseudoElementSelector_parse(){const start=this.tokenStart;let name,nameLowerCase,children=null;return this.eat(Colon),this.eat(Colon),this.tokenType===Function?(name=this.consumeFunctionName(),nameLowerCase=name.toLowerCase(),this.lookupNonWSType(0)==RightParenthesis?children=this.createList():hasOwnProperty.call(this.pseudo,nameLowerCase)?(this.skipSC(),children=this.pseudo[nameLowerCase].call(this),this.skipSC()):(children=this.createList(),children.push(this.Raw(null,!1))),this.eat(RightParenthesis)):name=this.consume(Ident),{type:"PseudoElementSelector",loc:this.getLocation(start,this.tokenStart),name,children}}function PseudoElementSelector_generate(node){this.token(Colon,":"),this.token(Colon,":"),null===node.children?this.token(Ident,node.name):(this.token(Function,node.name+"("),this.children(node),this.token(RightParenthesis,")"))}const Ratio_SOLIDUS=47;function consumeTerm(){switch(this.skipSC(),this.tokenType){case types_Number:return this.Number();case Function:return this.Function(this.readSequence,this.scope.Value);default:this.error("Number of function is expected")}}const Ratio_name="Ratio",Ratio_structure={left:["Number","Function"],right:["Number","Function",null]};function Ratio_parse(){const start=this.tokenStart,left=consumeTerm.call(this);let right=null;return this.skipSC(),this.isDelim(Ratio_SOLIDUS)&&(this.eatDelim(Ratio_SOLIDUS),right=consumeTerm.call(this)),{type:"Ratio",loc:this.getLocation(start,this.tokenStart),left,right}}function Ratio_generate(node){this.node(node.left),this.token(Delim,"/"),node.right?this.node(node.right):this.node(types_Number,1)}function getOffsetExcludeWS(){return this.tokenIndex>0&&this.lookupType(-1)===WhiteSpace?this.tokenIndex>1?this.getTokenStart(this.tokenIndex-1):this.firstCharOffset:this.tokenStart}const Raw_name="Raw",Raw_structure={value:String};function Raw_parse(consumeUntil,excludeWhiteSpace){const startOffset=this.getTokenStart(this.tokenIndex);let endOffset;return this.skipUntilBalanced(this.tokenIndex,consumeUntil||this.consumeUntilBalanceEnd),endOffset=excludeWhiteSpace&&this.tokenStart>startOffset?getOffsetExcludeWS.call(this):this.tokenStart,{type:"Raw",loc:this.getLocation(startOffset,endOffset),value:this.substring(startOffset,endOffset)}}function Raw_generate(node){this.tokenize(node.value)}function Rule_consumeRaw(){return this.Raw(this.consumeUntilLeftCurlyBracket,!0)}function consumePrelude(){const prelude=this.SelectorList();return"Raw"!==prelude.type&&!1===this.eof&&this.tokenType!==LeftCurlyBracket&&this.error(),prelude}const Rule_name="Rule",Rule_walkContext="rule",Rule_structure={prelude:["SelectorList","Raw"],block:["Block"]};function Rule_parse(){const startToken=this.tokenIndex,startOffset=this.tokenStart;let prelude,block;return prelude=this.parseRulePrelude?this.parseWithFallback(consumePrelude,Rule_consumeRaw):Rule_consumeRaw.call(this,startToken),block=this.Block(!0),{type:"Rule",loc:this.getLocation(startOffset,this.tokenStart),prelude,block}}function Rule_generate(node){this.node(node.prelude),this.node(node.block)}const Scope_name="Scope",Scope_structure={root:["SelectorList","Raw",null],limit:["SelectorList","Raw",null]};function Scope_parse(){let root=null,limit=null;this.skipSC();const startOffset=this.tokenStart;return this.tokenType===LeftParenthesis&&(this.next(),this.skipSC(),root=this.parseWithFallback(this.SelectorList,(()=>this.Raw(!1,!0))),this.skipSC(),this.eat(RightParenthesis)),this.lookupNonWSType(0)===Ident&&(this.skipSC(),this.eatIdent("to"),this.skipSC(),this.eat(LeftParenthesis),this.skipSC(),limit=this.parseWithFallback(this.SelectorList,(()=>this.Raw(!1,!0))),this.skipSC(),this.eat(RightParenthesis)),{type:"Scope",loc:this.getLocation(startOffset,this.tokenStart),root,limit}}function Scope_generate(node){node.root&&(this.token(LeftParenthesis,"("),this.node(node.root),this.token(RightParenthesis,")")),node.limit&&(this.token(Ident,"to"),this.token(LeftParenthesis,"("),this.node(node.limit),this.token(RightParenthesis,")"))}const Selector_name="Selector",Selector_structure={children:[["TypeSelector","IdSelector","ClassSelector","AttributeSelector","PseudoClassSelector","PseudoElementSelector","Combinator"]]};function Selector_parse(){const children=this.readSequence(this.scope.Selector);return null===this.getFirstListNode(children)&&this.error("Selector is expected"),{type:"Selector",loc:this.getLocationFromList(children),children}}function Selector_generate(node){this.children(node)}const SelectorList_name="SelectorList",SelectorList_walkContext="selector",SelectorList_structure={children:[["Selector","Raw"]]};function SelectorList_parse(){const children=this.createList();for(;!this.eof&&(children.push(this.Selector()),this.tokenType===Comma);)this.next();return{type:"SelectorList",loc:this.getLocationFromList(children),children}}function SelectorList_generate(node){this.children(node,(()=>this.token(Comma,",")))}const REVERSE_SOLIDUS=92,QUOTATION_MARK=34,string_APOSTROPHE=39;function decode(str){const len=str.length,firstChar=str.charCodeAt(0),start=firstChar===QUOTATION_MARK||firstChar===string_APOSTROPHE?1:0,end=1===start&&len>1&&str.charCodeAt(len-1)===firstChar?len-2:len-1;let decoded="";for(let i=start;i<=end;i++){let code=str.charCodeAt(i);if(code===REVERSE_SOLIDUS){if(i===end){i!==len-1&&(decoded=str.substr(i+1));break}if(code=str.charCodeAt(++i),char_code_definitions_isValidEscape(REVERSE_SOLIDUS,code)){const escapeStart=i-1,escapeEnd=utils_consumeEscaped(str,escapeStart);i=escapeEnd-1,decoded+=utils_decodeEscaped(str.substring(escapeStart+1,escapeEnd))}else 13===code&&10===str.charCodeAt(i+1)&&i++}else decoded+=str[i]}return decoded}const String_name="String",String_structure={value:String};function String_parse(){return{type:"String",loc:this.getLocation(this.tokenStart,this.tokenEnd),value:decode(this.consume(types_String))}}function String_generate(node){this.token(types_String,function encode(str,apostrophe){const quote=apostrophe?"'":'"',quoteCode=apostrophe?string_APOSTROPHE:QUOTATION_MARK;let encoded="",wsBeforeHexIsNeeded=!1;for(let i=0;i<str.length;i++){const code=str.charCodeAt(i);0!==code?code<=31||127===code?(encoded+="\\"+code.toString(16),wsBeforeHexIsNeeded=!0):code===quoteCode||code===REVERSE_SOLIDUS?(encoded+="\\"+str.charAt(i),wsBeforeHexIsNeeded=!1):(wsBeforeHexIsNeeded&&(isHexDigit(code)||isWhiteSpace(code))&&(encoded+=" "),encoded+=str.charAt(i),wsBeforeHexIsNeeded=!1):encoded+="�"}return quote+encoded+quote}(node.value))}const StyleSheet_EXCLAMATIONMARK=33;function StyleSheet_consumeRaw(){return this.Raw(null,!1)}const StyleSheet_name="StyleSheet",StyleSheet_walkContext="stylesheet",StyleSheet_structure={children:[["Comment","CDO","CDC","Atrule","Rule","Raw"]]};function StyleSheet_parse(){const start=this.tokenStart,children=this.createList();let child;for(;!this.eof;){switch(this.tokenType){case WhiteSpace:this.next();continue;case Comment:if(this.charCodeAt(this.tokenStart+2)!==StyleSheet_EXCLAMATIONMARK){this.next();continue}child=this.Comment();break;case CDO:child=this.CDO();break;case CDC:child=this.CDC();break;case AtKeyword:child=this.parseWithFallback(this.Atrule,StyleSheet_consumeRaw);break;default:child=this.parseWithFallback(this.Rule,StyleSheet_consumeRaw)}children.push(child)}return{type:"StyleSheet",loc:this.getLocation(start,this.tokenStart),children}}function StyleSheet_generate(node){this.children(node)}const SupportsDeclaration_name="SupportsDeclaration",SupportsDeclaration_structure={declaration:"Declaration"};function SupportsDeclaration_parse(){const start=this.tokenStart;this.eat(LeftParenthesis),this.skipSC();const declaration=this.Declaration();return this.eof||this.eat(RightParenthesis),{type:"SupportsDeclaration",loc:this.getLocation(start,this.tokenStart),declaration}}function SupportsDeclaration_generate(node){this.token(LeftParenthesis,"("),this.node(node.declaration),this.token(RightParenthesis,")")}const TypeSelector_ASTERISK=42,TypeSelector_VERTICALLINE=124;function eatIdentifierOrAsterisk(){this.tokenType!==Ident&&!1===this.isDelim(TypeSelector_ASTERISK)&&this.error("Identifier or asterisk is expected"),this.next()}const TypeSelector_name="TypeSelector",TypeSelector_structure={name:String};function TypeSelector_parse(){const start=this.tokenStart;return this.isDelim(TypeSelector_VERTICALLINE)?(this.next(),eatIdentifierOrAsterisk.call(this)):(eatIdentifierOrAsterisk.call(this),this.isDelim(TypeSelector_VERTICALLINE)&&(this.next(),eatIdentifierOrAsterisk.call(this))),{type:"TypeSelector",loc:this.getLocation(start,this.tokenStart),name:this.substrToCursor(start)}}function TypeSelector_generate(node){this.tokenize(node.name)}const UnicodeRange_PLUSSIGN=43,UnicodeRange_HYPHENMINUS=45,UnicodeRange_QUESTIONMARK=63;function eatHexSequence(offset,allowDash){let len=0;for(let pos=this.tokenStart+offset;pos<this.tokenEnd;pos++){const code=this.charCodeAt(pos);if(code===UnicodeRange_HYPHENMINUS&&allowDash&&0!==len)return eatHexSequence.call(this,offset+len+1,!1),-1;isHexDigit(code)||this.error(allowDash&&0!==len?"Hyphen minus"+(len<6?" or hex digit":"")+" is expected":len<6?"Hex digit is expected":"Unexpected input",pos),++len>6&&this.error("Too many hex digits",pos)}return this.next(),len}function eatQuestionMarkSequence(max){let count=0;for(;this.isDelim(UnicodeRange_QUESTIONMARK);)++count>max&&this.error("Too many question marks"),this.next()}function UnicodeRange_startsWith(code){this.charCodeAt(this.tokenStart)!==code&&this.error((code===UnicodeRange_PLUSSIGN?"Plus sign":"Hyphen minus")+" is expected")}function scanUnicodeRange(){let hexLength=0;switch(this.tokenType){case types_Number:if(hexLength=eatHexSequence.call(this,1,!0),this.isDelim(UnicodeRange_QUESTIONMARK)){eatQuestionMarkSequence.call(this,6-hexLength);break}if(this.tokenType===Dimension||this.tokenType===types_Number){UnicodeRange_startsWith.call(this,UnicodeRange_HYPHENMINUS),eatHexSequence.call(this,1,!1);break}break;case Dimension:hexLength=eatHexSequence.call(this,1,!0),hexLength>0&&eatQuestionMarkSequence.call(this,6-hexLength);break;default:if(this.eatDelim(UnicodeRange_PLUSSIGN),this.tokenType===Ident){hexLength=eatHexSequence.call(this,0,!0),hexLength>0&&eatQuestionMarkSequence.call(this,6-hexLength);break}if(this.isDelim(UnicodeRange_QUESTIONMARK)){this.next(),eatQuestionMarkSequence.call(this,5);break}this.error("Hex digit or question mark is expected")}}const UnicodeRange_name="UnicodeRange",UnicodeRange_structure={value:String};function UnicodeRange_parse(){const start=this.tokenStart;return this.eatIdent("u"),scanUnicodeRange.call(this),{type:"UnicodeRange",loc:this.getLocation(start,this.tokenStart),value:this.substrToCursor(start)}}function UnicodeRange_generate(node){this.tokenize(node.value)}const url_SPACE=32,url_REVERSE_SOLIDUS=92,url_QUOTATION_MARK=34,url_APOSTROPHE=39,url_LEFTPARENTHESIS=40,url_RIGHTPARENTHESIS=41;const Url_name="Url",Url_structure={value:String};function Url_parse(){const start=this.tokenStart;let value;switch(this.tokenType){case Url:value=function url_decode(str){const len=str.length;let start=4,end=str.charCodeAt(len-1)===url_RIGHTPARENTHESIS?len-2:len-1,decoded="";for(;start<end&&isWhiteSpace(str.charCodeAt(start));)start++;for(;start<end&&isWhiteSpace(str.charCodeAt(end));)end--;for(let i=start;i<=end;i++){let code=str.charCodeAt(i);if(code===url_REVERSE_SOLIDUS){if(i===end){i!==len-1&&(decoded=str.substr(i+1));break}if(code=str.charCodeAt(++i),char_code_definitions_isValidEscape(url_REVERSE_SOLIDUS,code)){const escapeStart=i-1,escapeEnd=utils_consumeEscaped(str,escapeStart);i=escapeEnd-1,decoded+=utils_decodeEscaped(str.substring(escapeStart+1,escapeEnd))}else 13===code&&10===str.charCodeAt(i+1)&&i++}else decoded+=str[i]}return decoded}(this.consume(Url));break;case Function:this.cmpStr(this.tokenStart,this.tokenEnd,"url(")||this.error("Function name must be `url`"),this.eat(Function),this.skipSC(),value=decode(this.consume(types_String)),this.skipSC(),this.eof||this.eat(RightParenthesis);break;default:this.error("Url or Function is expected")}return{type:"Url",loc:this.getLocation(start,this.tokenStart),value}}function Url_generate(node){this.token(Url,function url_encode(str){let encoded="",wsBeforeHexIsNeeded=!1;for(let i=0;i<str.length;i++){const code=str.charCodeAt(i);0!==code?code<=31||127===code?(encoded+="\\"+code.toString(16),wsBeforeHexIsNeeded=!0):code===url_SPACE||code===url_REVERSE_SOLIDUS||code===url_QUOTATION_MARK||code===url_APOSTROPHE||code===url_LEFTPARENTHESIS||code===url_RIGHTPARENTHESIS?(encoded+="\\"+str.charAt(i),wsBeforeHexIsNeeded=!1):(wsBeforeHexIsNeeded&&isHexDigit(code)&&(encoded+=" "),encoded+=str.charAt(i),wsBeforeHexIsNeeded=!1):encoded+="�"}return"url("+encoded+")"}(node.value))}const Value_name="Value",Value_structure={children:[[]]};function Value_parse(){const start=this.tokenStart,children=this.readSequence(this.scope.Value);return{type:"Value",loc:this.getLocation(start,this.tokenStart),children}}function Value_generate(node){this.children(node)}const WhiteSpace_SPACE=Object.freeze({type:"WhiteSpace",loc:null,value:" "}),WhiteSpace_name="WhiteSpace",WhiteSpace_structure={value:String};function WhiteSpace_parse(){return this.eat(WhiteSpace),WhiteSpace_SPACE}function WhiteSpace_generate(node){this.token(WhiteSpace,node.value)}const lexer={generic:!0,cssWideKeywords,generic:!0,cssWideKeywords:["initial","inherit","unset","revert","revert-layer"],units:{angle:["deg","grad","rad","turn"],decibel:["db"],flex:["fr"],frequency:["hz","khz"],length:["cm","mm","q","in","pt","pc","px","em","rem","ex","rex","cap","rcap","ch","rch","ic","ric","lh","rlh","vw","svw","lvw","dvw","vh","svh","lvh","dvh","vi","svi","lvi","dvi","vb","svb","lvb","dvb","vmin","svmin","lvmin","dvmin","vmax","svmax","lvmax","dvmax","cqw","cqh","cqi","cqb","cqmin","cqmax"],resolution:["dpi","dpcm","dppx","x"],semitones:["st"],time:["s","ms"]},types:{"abs()":"abs( <calc-sum> )","absolute-size":"xx-small|x-small|small|medium|large|x-large|xx-large|xxx-large","acos()":"acos( <calc-sum> )","alpha-value":"<number>|<percentage>","angle-percentage":"<angle>|<percentage>","angular-color-hint":"<angle-percentage>","angular-color-stop":"<color>&&<color-stop-angle>?","angular-color-stop-list":"[<angular-color-stop> [, <angular-color-hint>]?]# , <angular-color-stop>","animateable-feature":"scroll-position|contents|<custom-ident>","asin()":"asin( <calc-sum> )","atan()":"atan( <calc-sum> )","atan2()":"atan2( <calc-sum> , <calc-sum> )",attachment:"scroll|fixed|local","attr()":"attr( <attr-name> <type-or-unit>? [, <attr-fallback>]? )","attr-matcher":"['~'|'|'|'^'|'$'|'*']? '='","attr-modifier":"i|s","attribute-selector":"'[' <wq-name> ']'|'[' <wq-name> <attr-matcher> [<string-token>|<ident-token>] <attr-modifier>? ']'","auto-repeat":"repeat( [auto-fill|auto-fit] , [<line-names>? <fixed-size>]+ <line-names>? )","auto-track-list":"[<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>? <auto-repeat> [<line-names>? [<fixed-size>|<fixed-repeat>]]* <line-names>?",axis:"block|inline|x|y","baseline-position":"[first|last]? baseline","basic-shape":"<inset()>|<xywh()>|<rect()>|<circle()>|<ellipse()>|<polygon()>|<path()>","bg-image":"none|<image>","bg-layer":"<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>","bg-position":"[[left|center|right|top|bottom|<length-percentage>]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]|[center|[left|right] <length-percentage>?]&&[center|[top|bottom] <length-percentage>?]]","bg-size":"[<length-percentage>|auto]{1,2}|cover|contain","blur()":"blur( <length> )","blend-mode":"normal|multiply|screen|overlay|darken|lighten|color-dodge|color-burn|hard-light|soft-light|difference|exclusion|hue|saturation|color|luminosity",box:"border-box|padding-box|content-box","brightness()":"brightness( <number-percentage> )","calc()":"calc( <calc-sum> )","calc-sum":"<calc-product> [['+'|'-'] <calc-product>]*","calc-product":"<calc-value> ['*' <calc-value>|'/' <number>]*","calc-value":"<number>|<dimension>|<percentage>|<calc-constant>|( <calc-sum> )","calc-constant":"e|pi|infinity|-infinity|NaN","cf-final-image":"<image>|<color>","cf-mixing-image":"<percentage>?&&<image>","circle()":"circle( [<shape-radius>]? [at <position>]? )","clamp()":"clamp( <calc-sum>#{3} )","class-selector":"'.' <ident-token>","clip-source":"<url>",color:"<color-base>|currentColor|<system-color>|<device-cmyk()>|<light-dark()>|<-non-standard-color>","color-stop":"<color-stop-length>|<color-stop-angle>","color-stop-angle":"<angle-percentage>{1,2}","color-stop-length":"<length-percentage>{1,2}","color-stop-list":"[<linear-color-stop> [, <linear-color-hint>]?]# , <linear-color-stop>","color-interpolation-method":"in [<rectangular-color-space>|<polar-color-space> <hue-interpolation-method>?|<custom-color-space>]",combinator:"'>'|'+'|'~'|['|' '|']","common-lig-values":"[common-ligatures|no-common-ligatures]","compat-auto":"searchfield|textarea|push-button|slider-horizontal|checkbox|radio|square-button|menulist|listbox|meter|progress-bar|button","composite-style":"clear|copy|source-over|source-in|source-out|source-atop|destination-over|destination-in|destination-out|destination-atop|xor","compositing-operator":"add|subtract|intersect|exclude","compound-selector":"[<type-selector>? <subclass-selector>*]!","compound-selector-list":"<compound-selector>#","complex-selector":"<complex-selector-unit> [<combinator>? <complex-selector-unit>]*","complex-selector-list":"<complex-selector>#","conic-gradient()":"conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )","contextual-alt-values":"[contextual|no-contextual]","content-distribution":"space-between|space-around|space-evenly|stretch","content-list":"[<string>|contents|<image>|<counter>|<quote>|<target>|<leader()>|<attr()>]+","content-position":"center|start|end|flex-start|flex-end","content-replacement":"<image>","contrast()":"contrast( [<number-percentage>] )","cos()":"cos( <calc-sum> )",counter:"<counter()>|<counters()>","counter()":"counter( <counter-name> , <counter-style>? )","counter-name":"<custom-ident>","counter-style":"<counter-style-name>|symbols( )","counter-style-name":"<custom-ident>","counters()":"counters( <counter-name> , <string> , <counter-style>? )","cross-fade()":"cross-fade( <cf-mixing-image> , <cf-final-image>? )","cubic-bezier-timing-function":"ease|ease-in|ease-out|ease-in-out|cubic-bezier( <number [0,1]> , <number> , <number [0,1]> , <number> )","deprecated-system-color":"ActiveBorder|ActiveCaption|AppWorkspace|Background|ButtonFace|ButtonHighlight|ButtonShadow|ButtonText|CaptionText|GrayText|Highlight|HighlightText|InactiveBorder|InactiveCaption|InactiveCaptionText|InfoBackground|InfoText|Menu|MenuText|Scrollbar|ThreeDDarkShadow|ThreeDFace|ThreeDHighlight|ThreeDLightShadow|ThreeDShadow|Window|WindowFrame|WindowText","discretionary-lig-values":"[discretionary-ligatures|no-discretionary-ligatures]","display-box":"contents|none","display-inside":"flow|flow-root|table|flex|grid|ruby","display-internal":"table-row-group|table-header-group|table-footer-group|table-row|table-cell|table-column-group|table-column|table-caption|ruby-base|ruby-text|ruby-base-container|ruby-text-container","display-legacy":"inline-block|inline-list-item|inline-table|inline-flex|inline-grid","display-listitem":"<display-outside>?&&[flow|flow-root]?&&list-item","display-outside":"block|inline|run-in","drop-shadow()":"drop-shadow( <length>{2,3} <color>? )","east-asian-variant-values":"[jis78|jis83|jis90|jis04|simplified|traditional]","east-asian-width-values":"[full-width|proportional-width]","element()":"element( <custom-ident> , [first|start|last|first-except]? )|element( <id-selector> )","ellipse()":"ellipse( [<shape-radius>{2}]? [at <position>]? )","ending-shape":"circle|ellipse","env()":"env( <custom-ident> , <declaration-value>? )","exp()":"exp( <calc-sum> )","explicit-track-list":"[<line-names>? <track-size>]+ <line-names>?","family-name":"<string>|<custom-ident>+","feature-tag-value":"<string> [<integer>|on|off]?","feature-type":"@stylistic|@historical-forms|@styleset|@character-variant|@swash|@ornaments|@annotation","feature-value-block":"<feature-type> '{' <feature-value-declaration-list> '}'","feature-value-block-list":"<feature-value-block>+","feature-value-declaration":"<custom-ident> : <integer>+ ;","feature-value-declaration-list":"<feature-value-declaration>","feature-value-name":"<custom-ident>","fill-rule":"nonzero|evenodd","filter-function":"<blur()>|<brightness()>|<contrast()>|<drop-shadow()>|<grayscale()>|<hue-rotate()>|<invert()>|<opacity()>|<saturate()>|<sepia()>","filter-function-list":"[<filter-function>|<url>]+","final-bg-layer":"<'background-color'>||<bg-image>||<bg-position> [/ <bg-size>]?||<repeat-style>||<attachment>||<box>||<box>","fixed-breadth":"<length-percentage>","fixed-repeat":"repeat( [<integer [1,∞]>] , [<line-names>? <fixed-size>]+ <line-names>? )","fixed-size":"<fixed-breadth>|minmax( <fixed-breadth> , <track-breadth> )|minmax( <inflexible-breadth> , <fixed-breadth> )","font-stretch-absolute":"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded|<percentage>","font-variant-css21":"[normal|small-caps]","font-weight-absolute":"normal|bold|<number [1,1000]>","frequency-percentage":"<frequency>|<percentage>","general-enclosed":"[<function-token> <any-value>? )]|[( <any-value>? )]","generic-family":"<generic-script-specific>|<generic-complete>|<generic-incomplete>|<-non-standard-generic-family>","generic-name":"serif|sans-serif|cursive|fantasy|monospace","geometry-box":"<shape-box>|fill-box|stroke-box|view-box",gradient:"<linear-gradient()>|<repeating-linear-gradient()>|<radial-gradient()>|<repeating-radial-gradient()>|<conic-gradient()>|<repeating-conic-gradient()>|<-legacy-gradient>","grayscale()":"grayscale( <number-percentage> )","grid-line":"auto|<custom-ident>|[<integer>&&<custom-ident>?]|[span&&[<integer>||<custom-ident>]]","historical-lig-values":"[historical-ligatures|no-historical-ligatures]","hsl()":"hsl( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsl( <hue> , <percentage> , <percentage> , <alpha-value>? )","hsla()":"hsla( <hue> <percentage> <percentage> [/ <alpha-value>]? )|hsla( <hue> , <percentage> , <percentage> , <alpha-value>? )",hue:"<number>|<angle>","hue-rotate()":"hue-rotate( <angle> )","hue-interpolation-method":"[shorter|longer|increasing|decreasing] hue","hwb()":"hwb( [<hue>|none] [<percentage>|none] [<percentage>|none] [/ [<alpha-value>|none]]? )","hypot()":"hypot( <calc-sum># )",image:"<url>|<image()>|<image-set()>|<element()>|<paint()>|<cross-fade()>|<gradient>","image()":"image( <image-tags>? [<image-src>? , <color>?]! )","image-set()":"image-set( <image-set-option># )","image-set-option":"[<image>|<string>] [<resolution>||type( <string> )]","image-src":"<url>|<string>","image-tags":"ltr|rtl","inflexible-breadth":"<length-percentage>|min-content|max-content|auto","inset()":"inset( <length-percentage>{1,4} [round <'border-radius'>]? )","invert()":"invert( <number-percentage> )","keyframes-name":"<custom-ident>|<string>","keyframe-block":"<keyframe-selector># { <declaration-list> }","keyframe-block-list":"<keyframe-block>+","keyframe-selector":"from|to|<percentage>|<timeline-range-name> <percentage>","lab()":"lab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )","layer()":"layer( <layer-name> )","layer-name":"<ident> ['.' <ident>]*","lch()":"lch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )","leader()":"leader( <leader-type> )","leader-type":"dotted|solid|space|<string>","length-percentage":"<length>|<percentage>","light-dark()":"light-dark( <color> , <color> )","line-names":"'[' <custom-ident>* ']'","line-name-list":"[<line-names>|<name-repeat>]+","line-style":"none|hidden|dotted|dashed|solid|double|groove|ridge|inset|outset","line-width":"<length>|thin|medium|thick","linear-color-hint":"<length-percentage>","linear-color-stop":"<color> <color-stop-length>?","linear-gradient()":"linear-gradient( [[<angle>|to <side-or-corner>]||<color-interpolation-method>]? , <color-stop-list> )","log()":"log( <calc-sum> , <calc-sum>? )","mask-layer":"<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||<geometry-box>||[<geometry-box>|no-clip]||<compositing-operator>||<masking-mode>","mask-position":"[<length-percentage>|left|center|right] [<length-percentage>|top|center|bottom]?","mask-reference":"none|<image>|<mask-source>","mask-source":"<url>","masking-mode":"alpha|luminance|match-source","matrix()":"matrix( <number>#{6} )","matrix3d()":"matrix3d( <number>#{16} )","max()":"max( <calc-sum># )","media-and":"<media-in-parens> [and <media-in-parens>]+","media-condition":"<media-not>|<media-and>|<media-or>|<media-in-parens>","media-condition-without-or":"<media-not>|<media-and>|<media-in-parens>","media-feature":"( [<mf-plain>|<mf-boolean>|<mf-range>] )","media-in-parens":"( <media-condition> )|<media-feature>|<general-enclosed>","media-not":"not <media-in-parens>","media-or":"<media-in-parens> [or <media-in-parens>]+","media-query":"<media-condition>|[not|only]? <media-type> [and <media-condition-without-or>]?","media-query-list":"<media-query>#","media-type":"<ident>","mf-boolean":"<mf-name>","mf-name":"<ident>","mf-plain":"<mf-name> : <mf-value>","mf-range":"<mf-name> ['<'|'>']? '='? <mf-value>|<mf-value> ['<'|'>']? '='? <mf-name>|<mf-value> '<' '='? <mf-name> '<' '='? <mf-value>|<mf-value> '>' '='? <mf-name> '>' '='? <mf-value>","mf-value":"<number>|<dimension>|<ident>|<ratio>","min()":"min( <calc-sum># )","minmax()":"minmax( [<length-percentage>|min-content|max-content|auto] , [<length-percentage>|<flex>|min-content|max-content|auto] )","mod()":"mod( <calc-sum> , <calc-sum> )","name-repeat":"repeat( [<integer [1,∞]>|auto-fill] , <line-names>+ )","named-color":"transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen","namespace-prefix":"<ident>","ns-prefix":"[<ident-token>|'*']? '|'","number-percentage":"<number>|<percentage>","numeric-figure-values":"[lining-nums|oldstyle-nums]","numeric-fraction-values":"[diagonal-fractions|stacked-fractions]","numeric-spacing-values":"[proportional-nums|tabular-nums]",nth:"<an-plus-b>|even|odd","opacity()":"opacity( [<number-percentage>] )","overflow-position":"unsafe|safe","outline-radius":"<length>|<percentage>","page-body":"<declaration>? [; <page-body>]?|<page-margin-box> <page-body>","page-margin-box":"<page-margin-box-type> '{' <declaration-list> '}'","page-margin-box-type":"@top-left-corner|@top-left|@top-center|@top-right|@top-right-corner|@bottom-left-corner|@bottom-left|@bottom-center|@bottom-right|@bottom-right-corner|@left-top|@left-middle|@left-bottom|@right-top|@right-middle|@right-bottom","page-selector-list":"[<page-selector>#]?","page-selector":"<pseudo-page>+|<ident> <pseudo-page>*","page-size":"A5|A4|A3|B5|B4|JIS-B5|JIS-B4|letter|legal|ledger","path()":"path( [<fill-rule> ,]? <string> )","paint()":"paint( <ident> , <declaration-value>? )","perspective()":"perspective( [<length [0,∞]>|none] )","polygon()":"polygon( <fill-rule>? , [<length-percentage> <length-percentage>]# )","polar-color-space":"hsl|hwb|lch|oklch",position:"[[left|center|right]||[top|center|bottom]|[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]?|[[left|right] <length-percentage>]&&[[top|bottom] <length-percentage>]]","pow()":"pow( <calc-sum> , <calc-sum> )","pseudo-class-selector":"':' <ident-token>|':' <function-token> <any-value> ')'","pseudo-element-selector":"':' <pseudo-class-selector>|<legacy-pseudo-element-selector>","pseudo-page":": [left|right|first|blank]",quote:"open-quote|close-quote|no-open-quote|no-close-quote","radial-gradient()":"radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )",ratio:"<number [0,∞]> [/ <number [0,∞]>]?","ray()":"ray( <angle>&&<ray-size>?&&contain?&&[at <position>]? )","ray-size":"closest-side|closest-corner|farthest-side|farthest-corner|sides","rectangular-color-space":"srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020|lab|oklab|xyz|xyz-d50|xyz-d65","relative-selector":"<combinator>? <complex-selector>","relative-selector-list":"<relative-selector>#","relative-size":"larger|smaller","rem()":"rem( <calc-sum> , <calc-sum> )","repeat-style":"repeat-x|repeat-y|[repeat|space|round|no-repeat]{1,2}","repeating-conic-gradient()":"repeating-conic-gradient( [from <angle>]? [at <position>]? , <angular-color-stop-list> )","repeating-linear-gradient()":"repeating-linear-gradient( [<angle>|to <side-or-corner>]? , <color-stop-list> )","repeating-radial-gradient()":"repeating-radial-gradient( [<ending-shape>||<size>]? [at <position>]? , <color-stop-list> )","reversed-counter-name":"reversed( <counter-name> )","rgb()":"rgb( <percentage>{3} [/ <alpha-value>]? )|rgb( <number>{3} [/ <alpha-value>]? )|rgb( <percentage>#{3} , <alpha-value>? )|rgb( <number>#{3} , <alpha-value>? )","rgba()":"rgba( <percentage>{3} [/ <alpha-value>]? )|rgba( <number>{3} [/ <alpha-value>]? )|rgba( <percentage>#{3} , <alpha-value>? )|rgba( <number>#{3} , <alpha-value>? )","rotate()":"rotate( [<angle>|<zero>] )","rotate3d()":"rotate3d( <number> , <number> , <number> , [<angle>|<zero>] )","rotateX()":"rotateX( [<angle>|<zero>] )","rotateY()":"rotateY( [<angle>|<zero>] )","rotateZ()":"rotateZ( [<angle>|<zero>] )","round()":"round( <rounding-strategy>? , <calc-sum> , <calc-sum> )","rounding-strategy":"nearest|up|down|to-zero","saturate()":"saturate( <number-percentage> )","scale()":"scale( [<number>|<percentage>]#{1,2} )","scale3d()":"scale3d( [<number>|<percentage>]#{3} )","scaleX()":"scaleX( [<number>|<percentage>] )","scaleY()":"scaleY( [<number>|<percentage>] )","scaleZ()":"scaleZ( [<number>|<percentage>] )","scroll()":"scroll( [<axis>||<scroller>]? )",scroller:"root|nearest|self","self-position":"center|start|end|self-start|self-end|flex-start|flex-end","shape-radius":"<length-percentage>|closest-side|farthest-side","sign()":"sign( <calc-sum> )","skew()":"skew( [<angle>|<zero>] , [<angle>|<zero>]? )","skewX()":"skewX( [<angle>|<zero>] )","skewY()":"skewY( [<angle>|<zero>] )","sepia()":"sepia( <number-percentage> )",shadow:"inset?&&<length>{2,4}&&<color>?","shadow-t":"[<length>{2,3}&&<color>?]",shape:"rect( <top> , <right> , <bottom> , <left> )|rect( <top> <right> <bottom> <left> )","shape-box":"<box>|margin-box","side-or-corner":"[left|right]||[top|bottom]","sin()":"sin( <calc-sum> )","single-animation":"<'animation-duration'>||<easing-function>||<'animation-delay'>||<single-animation-iteration-count>||<single-animation-direction>||<single-animation-fill-mode>||<single-animation-play-state>||[none|<keyframes-name>]||<single-animation-timeline>","single-animation-direction":"normal|reverse|alternate|alternate-reverse","single-animation-fill-mode":"none|forwards|backwards|both","single-animation-iteration-count":"infinite|<number>","single-animation-play-state":"running|paused","single-animation-timeline":"auto|none|<dashed-ident>|<scroll()>|<view()>","single-transition":"[none|<single-transition-property>]||<time>||<easing-function>||<time>||<transition-behavior-value>","single-transition-property":"all|<custom-ident>",size:"closest-side|farthest-side|closest-corner|farthest-corner|<length>|<length-percentage>{2}","sqrt()":"sqrt( <calc-sum> )","step-position":"jump-start|jump-end|jump-none|jump-both|start|end","step-timing-function":"step-start|step-end|steps( <integer> [, <step-position>]? )","subclass-selector":"<id-selector>|<class-selector>|<attribute-selector>|<pseudo-class-selector>","supports-condition":"not <supports-in-parens>|<supports-in-parens> [and <supports-in-parens>]*|<supports-in-parens> [or <supports-in-parens>]*","supports-in-parens":"( <supports-condition> )|<supports-feature>|<general-enclosed>","supports-feature":"<supports-decl>|<supports-selector-fn>","supports-decl":"( <declaration> )","supports-selector-fn":"selector( <complex-selector> )",symbol:"<string>|<image>|<custom-ident>","system-color":"AccentColor|AccentColorText|ActiveText|ButtonBorder|ButtonFace|ButtonText|Canvas|CanvasText|Field|FieldText|GrayText|Highlight|HighlightText|LinkText|Mark|MarkText|SelectedItem|SelectedItemText|VisitedText","tan()":"tan( <calc-sum> )",target:"<target-counter()>|<target-counters()>|<target-text()>","target-counter()":"target-counter( [<string>|<url>] , <custom-ident> , <counter-style>? )","target-counters()":"target-counters( [<string>|<url>] , <custom-ident> , <string> , <counter-style>? )","target-text()":"target-text( [<string>|<url>] , [content|before|after|first-letter]? )","time-percentage":"<time>|<percentage>","timeline-range-name":"cover|contain|entry|exit|entry-crossing|exit-crossing","easing-function":"linear|<cubic-bezier-timing-function>|<step-timing-function>","track-breadth":"<length-percentage>|<flex>|min-content|max-content|auto","track-list":"[<line-names>? [<track-size>|<track-repeat>]]+ <line-names>?","track-repeat":"repeat( [<integer [1,∞]>] , [<line-names>? <track-size>]+ <line-names>? )","track-size":"<track-breadth>|minmax( <inflexible-breadth> , <track-breadth> )|fit-content( <length-percentage> )","transform-function":"<matrix()>|<translate()>|<translateX()>|<translateY()>|<scale()>|<scaleX()>|<scaleY()>|<rotate()>|<skew()>|<skewX()>|<skewY()>|<matrix3d()>|<translate3d()>|<translateZ()>|<scale3d()>|<scaleZ()>|<rotate3d()>|<rotateX()>|<rotateY()>|<rotateZ()>|<perspective()>","transform-list":"<transform-function>+","transition-behavior-value":"normal|allow-discrete","translate()":"translate( <length-percentage> , <length-percentage>? )","translate3d()":"translate3d( <length-percentage> , <length-percentage> , <length> )","translateX()":"translateX( <length-percentage> )","translateY()":"translateY( <length-percentage> )","translateZ()":"translateZ( <length> )","type-or-unit":"string|color|url|integer|number|length|angle|time|frequency|cap|ch|em|ex|ic|lh|rlh|rem|vb|vi|vw|vh|vmin|vmax|mm|Q|cm|in|pt|pc|px|deg|grad|rad|turn|ms|s|Hz|kHz|%","type-selector":"<wq-name>|<ns-prefix>? '*'","var()":"var( <custom-property-name> , <declaration-value>? )","view()":"view( [<axis>||<'view-timeline-inset'>]? )","viewport-length":"auto|<length-percentage>","visual-box":"content-box|padding-box|border-box","wq-name":"<ns-prefix>? <ident-token>","-legacy-gradient":"<-webkit-gradient()>|<-legacy-linear-gradient>|<-legacy-repeating-linear-gradient>|<-legacy-radial-gradient>|<-legacy-repeating-radial-gradient>","-legacy-linear-gradient":"-moz-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-linear-gradient( <-legacy-linear-gradient-arguments> )","-legacy-repeating-linear-gradient":"-moz-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-webkit-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )|-o-repeating-linear-gradient( <-legacy-linear-gradient-arguments> )","-legacy-linear-gradient-arguments":"[<angle>|<side-or-corner>]? , <color-stop-list>","-legacy-radial-gradient":"-moz-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-radial-gradient( <-legacy-radial-gradient-arguments> )","-legacy-repeating-radial-gradient":"-moz-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-webkit-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )|-o-repeating-radial-gradient( <-legacy-radial-gradient-arguments> )","-legacy-radial-gradient-arguments":"[<position> ,]? [[[<-legacy-radial-gradient-shape>||<-legacy-radial-gradient-size>]|[<length>|<percentage>]{2}] ,]? <color-stop-list>","-legacy-radial-gradient-size":"closest-side|closest-corner|farthest-side|farthest-corner|contain|cover","-legacy-radial-gradient-shape":"circle|ellipse","-non-standard-font":"-apple-system-body|-apple-system-headline|-apple-system-subheadline|-apple-system-caption1|-apple-system-caption2|-apple-system-footnote|-apple-system-short-body|-apple-system-short-headline|-apple-system-short-subheadline|-apple-system-short-caption1|-apple-system-short-footnote|-apple-system-tall-body","-non-standard-color":"-moz-ButtonDefault|-moz-ButtonHoverFace|-moz-ButtonHoverText|-moz-CellHighlight|-moz-CellHighlightText|-moz-Combobox|-moz-ComboboxText|-moz-Dialog|-moz-DialogText|-moz-dragtargetzone|-moz-EvenTreeRow|-moz-Field|-moz-FieldText|-moz-html-CellHighlight|-moz-html-CellHighlightText|-moz-mac-accentdarkestshadow|-moz-mac-accentdarkshadow|-moz-mac-accentface|-moz-mac-accentlightesthighlight|-moz-mac-accentlightshadow|-moz-mac-accentregularhighlight|-moz-mac-accentregularshadow|-moz-mac-chrome-active|-moz-mac-chrome-inactive|-moz-mac-focusring|-moz-mac-menuselect|-moz-mac-menushadow|-moz-mac-menutextselect|-moz-MenuHover|-moz-MenuHoverText|-moz-MenuBarText|-moz-MenuBarHoverText|-moz-nativehyperlinktext|-moz-OddTreeRow|-moz-win-communicationstext|-moz-win-mediatext|-moz-activehyperlinktext|-moz-default-background-color|-moz-default-color|-moz-hyperlinktext|-moz-visitedhyperlinktext|-webkit-activelink|-webkit-focus-ring-color|-webkit-link|-webkit-text","-non-standard-image-rendering":"optimize-contrast|-moz-crisp-edges|-o-crisp-edges|-webkit-optimize-contrast","-non-standard-overflow":"overlay|-moz-scrollbars-none|-moz-scrollbars-horizontal|-moz-scrollbars-vertical|-moz-hidden-unscrollable","-non-standard-size":"intrinsic|min-intrinsic|-webkit-fill-available|-webkit-fit-content|-webkit-min-content|-webkit-max-content|-moz-available|-moz-fit-content|-moz-min-content|-moz-max-content","-webkit-gradient()":"-webkit-gradient( <-webkit-gradient-type> , <-webkit-gradient-point> [, <-webkit-gradient-point>|, <-webkit-gradient-radius> , <-webkit-gradient-point>] [, <-webkit-gradient-radius>]? [, <-webkit-gradient-color-stop>]* )","-webkit-gradient-color-stop":"from( <color> )|color-stop( [<number-zero-one>|<percentage>] , <color> )|to( <color> )","-webkit-gradient-point":"[left|center|right|<length-percentage>] [top|center|bottom|<length-percentage>]","-webkit-gradient-radius":"<length>|<percentage>","-webkit-gradient-type":"linear|radial","-webkit-mask-box-repeat":"repeat|stretch|round","-ms-filter-function-list":"<-ms-filter-function>+","-ms-filter-function":"<-ms-filter-function-progid>|<-ms-filter-function-legacy>","-ms-filter-function-progid":"'progid:' [<ident-token> '.']* [<ident-token>|<function-token> <any-value>? )]","-ms-filter-function-legacy":"<ident-token>|<function-token> <any-value>? )","absolute-color-base":"<hex-color>|<absolute-color-function>|<named-color>|transparent","absolute-color-function":"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<oklab()>|<oklch()>|<color()>",age:"child|young|old","anchor-name":"<dashed-ident>","attr-name":"<wq-name>","attr-fallback":"<any-value>","bg-clip":"<box>|border|text",bottom:"<length>|auto","container-name":"<custom-ident>","container-condition":"not <query-in-parens>|<query-in-parens> [[and <query-in-parens>]*|[or <query-in-parens>]*]","coord-box":"content-box|padding-box|border-box|fill-box|stroke-box|view-box","generic-voice":"[<age>? <gender> <integer>?]",gender:"male|female|neutral","generic-script-specific":"generic( kai )|generic( fangsong )|generic( nastaliq )","generic-complete":"serif|sans-serif|system-ui|cursive|fantasy|math|monospace","generic-incomplete":"ui-serif|ui-sans-serif|ui-monospace|ui-rounded","-non-standard-generic-family":"-apple-system|BlinkMacSystemFont",left:"<length>|auto","color-base":"<hex-color>|<color-function>|<named-color>|<color-mix()>|transparent","color-function":"<rgb()>|<rgba()>|<hsl()>|<hsla()>|<hwb()>|<lab()>|<lch()>|<oklab()>|<oklch()>|<color()>","device-cmyk()":"<legacy-device-cmyk-syntax>|<modern-device-cmyk-syntax>","legacy-device-cmyk-syntax":"device-cmyk( <number>#{4} )","modern-device-cmyk-syntax":"device-cmyk( <cmyk-component>{4} [/ [<alpha-value>|none]]? )","cmyk-component":"<number>|<percentage>|none","color-mix()":"color-mix( <color-interpolation-method> , [<color>&&<percentage [0,100]>?]#{2} )","color-space":"<rectangular-color-space>|<polar-color-space>|<custom-color-space>","custom-color-space":"<dashed-ident>",paint:"none|<color>|<url> [none|<color>]?|context-fill|context-stroke","palette-identifier":"<dashed-ident>",right:"<length>|auto","scope-start":"<forgiving-selector-list>","scope-end":"<forgiving-selector-list>","forgiving-selector-list":"<complex-real-selector-list>","forgiving-relative-selector-list":"<relative-real-selector-list>","selector-list":"<complex-selector-list>","complex-real-selector-list":"<complex-real-selector>#","simple-selector-list":"<simple-selector>#","relative-real-selector-list":"<relative-real-selector>#","complex-selector-unit":"[<compound-selector>? <pseudo-compound-selector>*]!","complex-real-selector":"<compound-selector> [<combinator>? <compound-selector>]*","relative-real-selector":"<combinator>? <complex-real-selector>","pseudo-compound-selector":"<pseudo-element-selector> <pseudo-class-selector>*","simple-selector":"<type-selector>|<subclass-selector>","legacy-pseudo-element-selector":"':' [before|after|first-line|first-letter]","single-animation-composition":"replace|add|accumulate","svg-length":"<percentage>|<length>|<number>","svg-writing-mode":"lr-tb|rl-tb|tb-rl|lr|rl|tb",top:"<length>|auto",x:"<number>",y:"<number>",declaration:"<ident-token> : <declaration-value>? ['!' important]?","declaration-list":"[<declaration>? ';']* <declaration>?",url:"url( <string> <url-modifier>* )|<url-token>","url-modifier":"<ident>|<function-token> <any-value> )","number-zero-one":"<number [0,1]>","number-one-or-greater":"<number [1,∞]>","color()":"color( <colorspace-params> [/ [<alpha-value>|none]]? )","colorspace-params":"[<predefined-rgb-params>|<xyz-params>]","predefined-rgb-params":"<predefined-rgb> [<number>|<percentage>|none]{3}","predefined-rgb":"srgb|srgb-linear|display-p3|a98-rgb|prophoto-rgb|rec2020","xyz-params":"<xyz-space> [<number>|<percentage>|none]{3}","xyz-space":"xyz|xyz-d50|xyz-d65","oklab()":"oklab( [<percentage>|<number>|none] [<percentage>|<number>|none] [<percentage>|<number>|none] [/ [<alpha-value>|none]]? )","oklch()":"oklch( [<percentage>|<number>|none] [<percentage>|<number>|none] [<hue>|none] [/ [<alpha-value>|none]]? )","offset-path":"<ray()>|<url>|<basic-shape>","rect()":"rect( [<length-percentage>|auto]{4} [round <'border-radius'>]? )","xywh()":"xywh( <length-percentage>{2} <length-percentage [0,∞]>{2} [round <'border-radius'>]? )","query-in-parens":"( <container-condition> )|( <size-feature> )|style( <style-query> )|<general-enclosed>","size-feature":"<mf-plain>|<mf-boolean>|<mf-range>","style-feature":"<declaration>","style-query":"<style-condition>|<style-feature>","style-condition":"not <style-in-parens>|<style-in-parens> [[and <style-in-parens>]*|[or <style-in-parens>]*]","style-in-parens":"( <style-condition> )|( <style-feature> )|<general-enclosed>","-non-standard-display":"-ms-inline-flexbox|-ms-grid|-ms-inline-grid|-webkit-flex|-webkit-inline-flex|-webkit-box|-webkit-inline-box|-moz-inline-stack|-moz-box|-moz-inline-box","inset-area":"[[left|center|right|span-left|span-right|x-start|x-end|span-x-start|span-x-end|x-self-start|x-self-end|span-x-self-start|span-x-self-end|span-all]||[top|center|bottom|span-top|span-bottom|y-start|y-end|span-y-start|span-y-end|y-self-start|y-self-end|span-y-self-start|span-y-self-end|span-all]|[block-start|center|block-end|span-block-start|span-block-end|span-all]||[inline-start|center|inline-end|span-inline-start|span-inline-end|span-all]|[self-block-start|self-block-end|span-self-block-start|span-self-block-end|span-all]||[self-inline-start|self-inline-end|span-self-inline-start|span-self-inline-end|span-all]|[start|center|end|span-start|span-end|span-all]{1,2}|[self-start|center|self-end|span-self-start|span-self-end|span-all]{1,2}]","position-area":"[[left|center|right|span-left|span-right|x-start|x-end|span-x-start|span-x-end|x-self-start|x-self-end|span-x-self-start|span-x-self-end|span-all]||[top|center|bottom|span-top|span-bottom|y-start|y-end|span-y-start|span-y-end|y-self-start|y-self-end|span-y-self-start|span-y-self-end|span-all]|[block-start|center|block-end|span-block-start|span-block-end|span-all]||[inline-start|center|inline-end|span-inline-start|span-inline-end|span-all]|[self-block-start|center|self-block-end|span-self-block-start|span-self-block-end|span-all]||[self-inline-start|center|self-inline-end|span-self-inline-start|span-self-inline-end|span-all]|[start|center|end|span-start|span-end|span-all]{1,2}|[self-start|center|self-end|span-self-start|span-self-end|span-all]{1,2}]","anchor()":"anchor( <anchor-element>?&&<anchor-side> , <length-percentage>? )","anchor-side":"inside|outside|top|left|right|bottom|start|end|self-start|self-end|<percentage>|center","anchor-size()":"anchor-size( [<anchor-element>||<anchor-size>]? , <length-percentage>? )","anchor-size":"width|height|block|inline|self-block|self-inline","anchor-element":"<dashed-ident>","try-size":"most-width|most-height|most-block-size|most-inline-size","try-tactic":"flip-block||flip-inline||flip-start","font-variant-css2":"normal|small-caps","font-width-css3":"normal|ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded","system-family-name":"caption|icon|menu|message-box|small-caption|status-bar"},properties:{"--*":"<declaration-value>","-ms-accelerator":"false|true","-ms-block-progression":"tb|rl|bt|lr","-ms-content-zoom-chaining":"none|chained","-ms-content-zooming":"none|zoom","-ms-content-zoom-limit":"<'-ms-content-zoom-limit-min'> <'-ms-content-zoom-limit-max'>","-ms-content-zoom-limit-max":"<percentage>","-ms-content-zoom-limit-min":"<percentage>","-ms-content-zoom-snap":"<'-ms-content-zoom-snap-type'>||<'-ms-content-zoom-snap-points'>","-ms-content-zoom-snap-points":"snapInterval( <percentage> , <percentage> )|snapList( <percentage># )","-ms-content-zoom-snap-type":"none|proximity|mandatory","-ms-filter":"<string>","-ms-flow-from":"[none|<custom-ident>]#","-ms-flow-into":"[none|<custom-ident>]#","-ms-grid-columns":"none|<track-list>|<auto-track-list>","-ms-grid-rows":"none|<track-list>|<auto-track-list>","-ms-high-contrast-adjust":"auto|none","-ms-hyphenate-limit-chars":"auto|<integer>{1,3}","-ms-hyphenate-limit-lines":"no-limit|<integer>","-ms-hyphenate-limit-zone":"<percentage>|<length>","-ms-ime-align":"auto|after","-ms-overflow-style":"auto|none|scrollbar|-ms-autohiding-scrollbar","-ms-scrollbar-3dlight-color":"<color>","-ms-scrollbar-arrow-color":"<color>","-ms-scrollbar-base-color":"<color>","-ms-scrollbar-darkshadow-color":"<color>","-ms-scrollbar-face-color":"<color>","-ms-scrollbar-highlight-color":"<color>","-ms-scrollbar-shadow-color":"<color>","-ms-scrollbar-track-color":"<color>","-ms-scroll-chaining":"chained|none","-ms-scroll-limit":"<'-ms-scroll-limit-x-min'> <'-ms-scroll-limit-y-min'> <'-ms-scroll-limit-x-max'> <'-ms-scroll-limit-y-max'>","-ms-scroll-limit-x-max":"auto|<length>","-ms-scroll-limit-x-min":"<length>","-ms-scroll-limit-y-max":"auto|<length>","-ms-scroll-limit-y-min":"<length>","-ms-scroll-rails":"none|railed","-ms-scroll-snap-points-x":"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )","-ms-scroll-snap-points-y":"snapInterval( <length-percentage> , <length-percentage> )|snapList( <length-percentage># )","-ms-scroll-snap-type":"none|proximity|mandatory","-ms-scroll-snap-x":"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-x'>","-ms-scroll-snap-y":"<'-ms-scroll-snap-type'> <'-ms-scroll-snap-points-y'>","-ms-scroll-translation":"none|vertical-to-horizontal","-ms-text-autospace":"none|ideograph-alpha|ideograph-numeric|ideograph-parenthesis|ideograph-space","-ms-touch-select":"grippers|none","-ms-user-select":"none|element|text","-ms-wrap-flow":"auto|both|start|end|maximum|clear","-ms-wrap-margin":"<length>","-ms-wrap-through":"wrap|none","-moz-appearance":"none|button|button-arrow-down|button-arrow-next|button-arrow-previous|button-arrow-up|button-bevel|button-focus|caret|checkbox|checkbox-container|checkbox-label|checkmenuitem|dualbutton|groupbox|listbox|listitem|menuarrow|menubar|menucheckbox|menuimage|menuitem|menuitemtext|menulist|menulist-button|menulist-text|menulist-textfield|menupopup|menuradio|menuseparator|meterbar|meterchunk|progressbar|progressbar-vertical|progresschunk|progresschunk-vertical|radio|radio-container|radio-label|radiomenuitem|range|range-thumb|resizer|resizerpanel|scale-horizontal|scalethumbend|scalethumb-horizontal|scalethumbstart|scalethumbtick|scalethumb-vertical|scale-vertical|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|separator|sheet|spinner|spinner-downbutton|spinner-textfield|spinner-upbutton|splitter|statusbar|statusbarpanel|tab|tabpanel|tabpanels|tab-scroll-arrow-back|tab-scroll-arrow-forward|textfield|textfield-multiline|toolbar|toolbarbutton|toolbarbutton-dropdown|toolbargripper|toolbox|tooltip|treeheader|treeheadercell|treeheadersortarrow|treeitem|treeline|treetwisty|treetwistyopen|treeview|-moz-mac-unified-toolbar|-moz-win-borderless-glass|-moz-win-browsertabbar-toolbox|-moz-win-communicationstext|-moz-win-communications-toolbox|-moz-win-exclude-glass|-moz-win-glass|-moz-win-mediatext|-moz-win-media-toolbox|-moz-window-button-box|-moz-window-button-box-maximized|-moz-window-button-close|-moz-window-button-maximize|-moz-window-button-minimize|-moz-window-button-restore|-moz-window-frame-bottom|-moz-window-frame-left|-moz-window-frame-right|-moz-window-titlebar|-moz-window-titlebar-maximized","-moz-binding":"<url>|none","-moz-border-bottom-colors":"<color>+|none","-moz-border-left-colors":"<color>+|none","-moz-border-right-colors":"<color>+|none","-moz-border-top-colors":"<color>+|none","-moz-context-properties":"none|[fill|fill-opacity|stroke|stroke-opacity]#","-moz-float-edge":"border-box|content-box|margin-box|padding-box","-moz-force-broken-image-icon":"0|1","-moz-image-region":"<shape>|auto","-moz-orient":"inline|block|horizontal|vertical","-moz-outline-radius":"<outline-radius>{1,4} [/ <outline-radius>{1,4}]?","-moz-outline-radius-bottomleft":"<outline-radius>","-moz-outline-radius-bottomright":"<outline-radius>","-moz-outline-radius-topleft":"<outline-radius>","-moz-outline-radius-topright":"<outline-radius>","-moz-stack-sizing":"ignore|stretch-to-fit","-moz-text-blink":"none|blink","-moz-user-focus":"ignore|normal|select-after|select-before|select-menu|select-same|select-all|none","-moz-user-input":"auto|none|enabled|disabled","-moz-user-modify":"read-only|read-write|write-only","-moz-window-dragging":"drag|no-drag","-moz-window-shadow":"default|menu|tooltip|sheet|none","-webkit-appearance":"none|button|button-bevel|caps-lock-indicator|caret|checkbox|default-button|inner-spin-button|listbox|listitem|media-controls-background|media-controls-fullscreen-background|media-current-time-display|media-enter-fullscreen-button|media-exit-fullscreen-button|media-fullscreen-button|media-mute-button|media-overlay-play-button|media-play-button|media-seek-back-button|media-seek-forward-button|media-slider|media-sliderthumb|media-time-remaining-display|media-toggle-closed-captions-button|media-volume-slider|media-volume-slider-container|media-volume-sliderthumb|menulist|menulist-button|menulist-text|menulist-textfield|meter|progress-bar|progress-bar-value|push-button|radio|scrollbarbutton-down|scrollbarbutton-left|scrollbarbutton-right|scrollbarbutton-up|scrollbargripper-horizontal|scrollbargripper-vertical|scrollbarthumb-horizontal|scrollbarthumb-vertical|scrollbartrack-horizontal|scrollbartrack-vertical|searchfield|searchfield-cancel-button|searchfield-decoration|searchfield-results-button|searchfield-results-decoration|slider-horizontal|slider-vertical|sliderthumb-horizontal|sliderthumb-vertical|square-button|textarea|textfield|-apple-pay-button","-webkit-border-before":"<'border-width'>||<'border-style'>||<color>","-webkit-border-before-color":"<color>","-webkit-border-before-style":"<'border-style'>","-webkit-border-before-width":"<'border-width'>","-webkit-box-reflect":"[above|below|right|left]? <length>? <image>?","-webkit-line-clamp":"none|<integer>","-webkit-mask":"[<mask-reference>||<position> [/ <bg-size>]?||<repeat-style>||[<box>|border|padding|content|text]||[<box>|border|padding|content]]#","-webkit-mask-attachment":"<attachment>#","-webkit-mask-clip":"[<box>|border|padding|content|text]#","-webkit-mask-composite":"<composite-style>#","-webkit-mask-image":"<mask-reference>#","-webkit-mask-origin":"[<box>|border|padding|content]#","-webkit-mask-position":"<position>#","-webkit-mask-position-x":"[<length-percentage>|left|center|right]#","-webkit-mask-position-y":"[<length-percentage>|top|center|bottom]#","-webkit-mask-repeat":"<repeat-style>#","-webkit-mask-repeat-x":"repeat|no-repeat|space|round","-webkit-mask-repeat-y":"repeat|no-repeat|space|round","-webkit-mask-size":"<bg-size>#","-webkit-overflow-scrolling":"auto|touch","-webkit-tap-highlight-color":"<color>","-webkit-text-fill-color":"<color>","-webkit-text-stroke":"<length>||<color>","-webkit-text-stroke-color":"<color>","-webkit-text-stroke-width":"<length>","-webkit-touch-callout":"default|none","-webkit-user-modify":"read-only|read-write|read-write-plaintext-only","accent-color":"auto|<color>","align-content":"normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>","align-items":"normal|stretch|<baseline-position>|[<overflow-position>? <self-position>]","align-self":"auto|normal|stretch|<baseline-position>|<overflow-position>? <self-position>","align-tracks":"[normal|<baseline-position>|<content-distribution>|<overflow-position>? <content-position>]#",all:"initial|inherit|unset|revert|revert-layer","anchor-name":"none|<dashed-ident>#","anchor-scope":"none|all|<dashed-ident>#",animation:"<single-animation>#","animation-composition":"<single-animation-composition>#","animation-delay":"<time>#","animation-direction":"<single-animation-direction>#","animation-duration":"<time>#","animation-fill-mode":"<single-animation-fill-mode>#","animation-iteration-count":"<single-animation-iteration-count>#","animation-name":"[none|<keyframes-name>]#","animation-play-state":"<single-animation-play-state>#","animation-range":"[<'animation-range-start'> <'animation-range-end'>?]#","animation-range-end":"[normal|<length-percentage>|<timeline-range-name> <length-percentage>?]#","animation-range-start":"[normal|<length-percentage>|<timeline-range-name> <length-percentage>?]#","animation-timing-function":"<easing-function>#","animation-timeline":"<single-animation-timeline>#",appearance:"none|auto|textfield|menulist-button|<compat-auto>","aspect-ratio":"auto||<ratio>",azimuth:"<angle>|[[left-side|far-left|left|center-left|center|center-right|right|far-right|right-side]||behind]|leftwards|rightwards","backdrop-filter":"none|<filter-function-list>","backface-visibility":"visible|hidden",background:"[<bg-layer> ,]* <final-bg-layer>","background-attachment":"<attachment>#","background-blend-mode":"<blend-mode>#","background-clip":"<bg-clip>#","background-color":"<color>","background-image":"<bg-image>#","background-origin":"<box>#","background-position":"<bg-position>#","background-position-x":"[center|[[left|right|x-start|x-end]? <length-percentage>?]!]#","background-position-y":"[center|[[top|bottom|y-start|y-end]? <length-percentage>?]!]#","background-repeat":"<repeat-style>#","background-size":"<bg-size>#","block-size":"<'width'>",border:"<line-width>||<line-style>||<color>","border-block":"<'border-top-width'>||<'border-top-style'>||<color>","border-block-color":"<'border-top-color'>{1,2}","border-block-style":"<'border-top-style'>","border-block-width":"<'border-top-width'>","border-block-end":"<'border-top-width'>||<'border-top-style'>||<color>","border-block-end-color":"<'border-top-color'>","border-block-end-style":"<'border-top-style'>","border-block-end-width":"<'border-top-width'>","border-block-start":"<'border-top-width'>||<'border-top-style'>||<color>","border-block-start-color":"<'border-top-color'>","border-block-start-style":"<'border-top-style'>","border-block-start-width":"<'border-top-width'>","border-bottom":"<line-width>||<line-style>||<color>","border-bottom-color":"<'border-top-color'>","border-bottom-left-radius":"<length-percentage>{1,2}","border-bottom-right-radius":"<length-percentage>{1,2}","border-bottom-style":"<line-style>","border-bottom-width":"<line-width>","border-collapse":"collapse|separate","border-color":"<color>{1,4}","border-end-end-radius":"<length-percentage>{1,2}","border-end-start-radius":"<length-percentage>{1,2}","border-image":"<'border-image-source'>||<'border-image-slice'> [/ <'border-image-width'>|/ <'border-image-width'>? / <'border-image-outset'>]?||<'border-image-repeat'>","border-image-outset":"[<length>|<number>]{1,4}","border-image-repeat":"[stretch|repeat|round|space]{1,2}","border-image-slice":"<number-percentage>{1,4}&&fill?","border-image-source":"none|<image>","border-image-width":"[<length-percentage>|<number>|auto]{1,4}","border-inline":"<'border-top-width'>||<'border-top-style'>||<color>","border-inline-end":"<'border-top-width'>||<'border-top-style'>||<color>","border-inline-color":"<'border-top-color'>{1,2}","border-inline-style":"<'border-top-style'>","border-inline-width":"<'border-top-width'>","border-inline-end-color":"<'border-top-color'>","border-inline-end-style":"<'border-top-style'>","border-inline-end-width":"<'border-top-width'>","border-inline-start":"<'border-top-width'>||<'border-top-style'>||<color>","border-inline-start-color":"<'border-top-color'>","border-inline-start-style":"<'border-top-style'>","border-inline-start-width":"<'border-top-width'>","border-left":"<line-width>||<line-style>||<color>","border-left-color":"<color>","border-left-style":"<line-style>","border-left-width":"<line-width>","border-radius":"<length-percentage>{1,4} [/ <length-percentage>{1,4}]?","border-right":"<line-width>||<line-style>||<color>","border-right-color":"<color>","border-right-style":"<line-style>","border-right-width":"<line-width>","border-spacing":"<length> <length>?","border-start-end-radius":"<length-percentage>{1,2}","border-start-start-radius":"<length-percentage>{1,2}","border-style":"<line-style>{1,4}","border-top":"<line-width>||<line-style>||<color>","border-top-color":"<color>","border-top-left-radius":"<length-percentage>{1,2}","border-top-right-radius":"<length-percentage>{1,2}","border-top-style":"<line-style>","border-top-width":"<line-width>","border-width":"<line-width>{1,4}",bottom:"<length>|<percentage>|auto","box-align":"start|center|end|baseline|stretch","box-decoration-break":"slice|clone","box-direction":"normal|reverse|inherit","box-flex":"<number>","box-flex-group":"<integer>","box-lines":"single|multiple","box-ordinal-group":"<integer>","box-orient":"horizontal|vertical|inline-axis|block-axis|inherit","box-pack":"start|center|end|justify","box-shadow":"none|<shadow>#","box-sizing":"content-box|border-box","break-after":"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region","break-before":"auto|avoid|always|all|avoid-page|page|left|right|recto|verso|avoid-column|column|avoid-region|region","break-inside":"auto|avoid|avoid-page|avoid-column|avoid-region","caption-side":"top|bottom|block-start|block-end|inline-start|inline-end",caret:"<'caret-color'>||<'caret-shape'>","caret-color":"auto|<color>","caret-shape":"auto|bar|block|underscore",clear:"none|left|right|both|inline-start|inline-end",clip:"<shape>|auto","clip-path":"<clip-source>|[<basic-shape>||<geometry-box>]|none","clip-rule":"nonzero|evenodd",color:"<color>","color-interpolation-filters":"auto|sRGB|linearRGB","color-scheme":"normal|[light|dark|<custom-ident>]+&&only?","column-count":"<integer>|auto","column-fill":"auto|balance","column-gap":"normal|<length-percentage>","column-rule":"<'column-rule-width'>||<'column-rule-style'>||<'column-rule-color'>","column-rule-color":"<color>","column-rule-style":"<'border-style'>","column-rule-width":"<'border-width'>","column-span":"none|all","column-width":"<length>|auto",columns:"<'column-width'>||<'column-count'>",contain:"none|strict|content|[[size||inline-size]||layout||style||paint]","contain-intrinsic-size":"[auto? [none|<length>]]{1,2}","contain-intrinsic-block-size":"auto? [none|<length>]","contain-intrinsic-height":"auto? [none|<length>]","contain-intrinsic-inline-size":"auto? [none|<length>]","contain-intrinsic-width":"auto? [none|<length>]",container:"<'container-name'> [/ <'container-type'>]?","container-name":"none|<custom-ident>+","container-type":"normal||[size|inline-size]",content:"normal|none|[<content-replacement>|<content-list>] [/ [<string>|<counter>]+]?","content-visibility":"visible|auto|hidden","counter-increment":"[<counter-name> <integer>?]+|none","counter-reset":"[<counter-name> <integer>?|<reversed-counter-name> <integer>?]+|none","counter-set":"[<counter-name> <integer>?]+|none",cursor:"[[<url> [<x> <y>]? ,]* [auto|default|none|context-menu|help|pointer|progress|wait|cell|crosshair|text|vertical-text|alias|copy|move|no-drop|not-allowed|e-resize|n-resize|ne-resize|nw-resize|s-resize|se-resize|sw-resize|w-resize|ew-resize|ns-resize|nesw-resize|nwse-resize|col-resize|row-resize|all-scroll|zoom-in|zoom-out|grab|grabbing|hand|-webkit-grab|-webkit-grabbing|-webkit-zoom-in|-webkit-zoom-out|-moz-grab|-moz-grabbing|-moz-zoom-in|-moz-zoom-out]]",d:"none|path( <string> )",cx:"<length>|<percentage>",cy:"<length>|<percentage>",direction:"ltr|rtl",display:"[<display-outside>||<display-inside>]|<display-listitem>|<display-internal>|<display-box>|<display-legacy>|<-non-standard-display>","dominant-baseline":"auto|use-script|no-change|reset-size|ideographic|alphabetic|hanging|mathematical|central|middle|text-after-edge|text-before-edge","empty-cells":"show|hide","field-sizing":"content|fixed",fill:"<paint>","fill-opacity":"<number-zero-one>","fill-rule":"nonzero|evenodd",filter:"none|<filter-function-list>|<-ms-filter-function-list>",flex:"none|[<'flex-grow'> <'flex-shrink'>?||<'flex-basis'>]","flex-basis":"content|<'width'>","flex-direction":"row|row-reverse|column|column-reverse","flex-flow":"<'flex-direction'>||<'flex-wrap'>","flex-grow":"<number>","flex-shrink":"<number>","flex-wrap":"nowrap|wrap|wrap-reverse",float:"left|right|none|inline-start|inline-end",font:"[[<'font-style'>||<font-variant-css2>||<'font-weight'>||<font-width-css3>]? <'font-size'> [/ <'line-height'>]? <'font-family'>#]|<system-family-name>|<-non-standard-font>","font-family":"[<family-name>|<generic-family>]#","font-feature-settings":"normal|<feature-tag-value>#","font-kerning":"auto|normal|none","font-language-override":"normal|<string>","font-optical-sizing":"auto|none","font-palette":"normal|light|dark|<palette-identifier>","font-variation-settings":"normal|[<string> <number>]#","font-size":"<absolute-size>|<relative-size>|<length-percentage>","font-size-adjust":"none|[ex-height|cap-height|ch-width|ic-width|ic-height]? [from-font|<number>]","font-smooth":"auto|never|always|<absolute-size>|<length>","font-stretch":"<font-stretch-absolute>","font-style":"normal|italic|oblique <angle>?","font-synthesis":"none|[weight||style||small-caps||position]","font-synthesis-position":"auto|none","font-synthesis-small-caps":"auto|none","font-synthesis-style":"auto|none","font-synthesis-weight":"auto|none","font-variant":"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>||stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )||[small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps]||<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero||<east-asian-variant-values>||<east-asian-width-values>||ruby]","font-variant-alternates":"normal|[stylistic( <feature-value-name> )||historical-forms||styleset( <feature-value-name># )||character-variant( <feature-value-name># )||swash( <feature-value-name> )||ornaments( <feature-value-name> )||annotation( <feature-value-name> )]","font-variant-caps":"normal|small-caps|all-small-caps|petite-caps|all-petite-caps|unicase|titling-caps","font-variant-east-asian":"normal|[<east-asian-variant-values>||<east-asian-width-values>||ruby]","font-variant-emoji":"normal|text|emoji|unicode","font-variant-ligatures":"normal|none|[<common-lig-values>||<discretionary-lig-values>||<historical-lig-values>||<contextual-alt-values>]","font-variant-numeric":"normal|[<numeric-figure-values>||<numeric-spacing-values>||<numeric-fraction-values>||ordinal||slashed-zero]","font-variant-position":"normal|sub|super","font-weight":"<font-weight-absolute>|bolder|lighter","forced-color-adjust":"auto|none|preserve-parent-color",gap:"<'row-gap'> <'column-gap'>?",grid:"<'grid-template'>|<'grid-template-rows'> / [auto-flow&&dense?] <'grid-auto-columns'>?|[auto-flow&&dense?] <'grid-auto-rows'>? / <'grid-template-columns'>","grid-area":"<grid-line> [/ <grid-line>]{0,3}","grid-auto-columns":"<track-size>+","grid-auto-flow":"[row|column]||dense","grid-auto-rows":"<track-size>+","grid-column":"<grid-line> [/ <grid-line>]?","grid-column-end":"<grid-line>","grid-column-gap":"<length-percentage>","grid-column-start":"<grid-line>","grid-gap":"<'grid-row-gap'> <'grid-column-gap'>?","grid-row":"<grid-line> [/ <grid-line>]?","grid-row-end":"<grid-line>","grid-row-gap":"<length-percentage>","grid-row-start":"<grid-line>","grid-template":"none|[<'grid-template-rows'> / <'grid-template-columns'>]|[<line-names>? <string> <track-size>? <line-names>?]+ [/ <explicit-track-list>]?","grid-template-areas":"none|<string>+","grid-template-columns":"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?","grid-template-rows":"none|<track-list>|<auto-track-list>|subgrid <line-name-list>?","hanging-punctuation":"none|[first||[force-end|allow-end]||last]",height:"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>","hyphenate-character":"auto|<string>","hyphenate-limit-chars":"[auto|<integer>]{1,3}",hyphens:"none|manual|auto","image-orientation":"from-image|<angle>|[<angle>? flip]","image-rendering":"auto|crisp-edges|pixelated|optimizeSpeed|optimizeQuality|<-non-standard-image-rendering>","image-resolution":"[from-image||<resolution>]&&snap?","ime-mode":"auto|normal|active|inactive|disabled","initial-letter":"normal|[<number> <integer>?]","initial-letter-align":"[auto|alphabetic|hanging|ideographic]","inline-size":"<'width'>","input-security":"auto|none",inset:"<'top'>{1,4}","inset-block":"<'top'>{1,2}","inset-block-end":"<'top'>","inset-block-start":"<'top'>","inset-inline":"<'top'>{1,2}","inset-inline-end":"<'top'>","inset-inline-start":"<'top'>","interpolate-size":"numeric-only|allow-keywords",isolation:"auto|isolate","justify-content":"normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]","justify-items":"normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]|legacy|legacy&&[left|right|center]","justify-self":"auto|normal|stretch|<baseline-position>|<overflow-position>? [<self-position>|left|right]","justify-tracks":"[normal|<content-distribution>|<overflow-position>? [<content-position>|left|right]]#",left:"<length>|<percentage>|auto","letter-spacing":"normal|<length-percentage>","line-break":"auto|loose|normal|strict|anywhere","line-clamp":"none|<integer>","line-height":"normal|<number>|<length>|<percentage>","line-height-step":"<length>","list-style":"<'list-style-type'>||<'list-style-position'>||<'list-style-image'>","list-style-image":"<image>|none","list-style-position":"inside|outside","list-style-type":"<counter-style>|<string>|none",margin:"[<length>|<percentage>|auto]{1,4}","margin-block":"<'margin-left'>{1,2}","margin-block-end":"<'margin-left'>","margin-block-start":"<'margin-left'>","margin-bottom":"<length>|<percentage>|auto","margin-inline":"<'margin-left'>{1,2}","margin-inline-end":"<'margin-left'>","margin-inline-start":"<'margin-left'>","margin-left":"<length>|<percentage>|auto","margin-right":"<length>|<percentage>|auto","margin-top":"<length>|<percentage>|auto","margin-trim":"none|in-flow|all",marker:"none|<url>","marker-end":"none|<url>","marker-mid":"none|<url>","marker-start":"none|<url>",mask:"<mask-layer>#","mask-border":"<'mask-border-source'>||<'mask-border-slice'> [/ <'mask-border-width'>? [/ <'mask-border-outset'>]?]?||<'mask-border-repeat'>||<'mask-border-mode'>","mask-border-mode":"luminance|alpha","mask-border-outset":"[<length>|<number>]{1,4}","mask-border-repeat":"[stretch|repeat|round|space]{1,2}","mask-border-slice":"<number-percentage>{1,4} fill?","mask-border-source":"none|<image>","mask-border-width":"[<length-percentage>|<number>|auto]{1,4}","mask-clip":"[<geometry-box>|no-clip]#","mask-composite":"<compositing-operator>#","mask-image":"<mask-reference>#","mask-mode":"<masking-mode>#","mask-origin":"<geometry-box>#","mask-position":"<position>#","mask-repeat":"<repeat-style>#","mask-size":"<bg-size>#","mask-type":"luminance|alpha","masonry-auto-flow":"[pack|next]||[definite-first|ordered]","math-depth":"auto-add|add( <integer> )|<integer>","math-shift":"normal|compact","math-style":"normal|compact","max-block-size":"<'max-width'>","max-height":"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>","max-inline-size":"<'max-width'>","max-lines":"none|<integer>","max-width":"none|<length-percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>","min-block-size":"<'min-width'>","min-height":"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>","min-inline-size":"<'min-width'>","min-width":"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>","mix-blend-mode":"<blend-mode>|plus-lighter","object-fit":"fill|contain|cover|none|scale-down","object-position":"<position>",offset:"[<'offset-position'>? [<'offset-path'> [<'offset-distance'>||<'offset-rotate'>]?]?]! [/ <'offset-anchor'>]?","offset-anchor":"auto|<position>","offset-distance":"<length-percentage>","offset-path":"none|<offset-path>||<coord-box>","offset-position":"normal|auto|<position>","offset-rotate":"[auto|reverse]||<angle>",opacity:"<alpha-value>",order:"<integer>",orphans:"<integer>",outline:"[<'outline-width'>||<'outline-style'>||<'outline-color'>]","outline-color":"auto|<color>","outline-offset":"<length>","outline-style":"auto|<'border-style'>","outline-width":"<line-width>",overflow:"[visible|hidden|clip|scroll|auto]{1,2}|<-non-standard-overflow>","overflow-anchor":"auto|none","overflow-block":"visible|hidden|clip|scroll|auto","overflow-clip-box":"padding-box|content-box","overflow-clip-margin":"<visual-box>||<length [0,∞]>","overflow-inline":"visible|hidden|clip|scroll|auto","overflow-wrap":"normal|break-word|anywhere","overflow-x":"visible|hidden|clip|scroll|auto","overflow-y":"visible|hidden|clip|scroll|auto",overlay:"none|auto","overscroll-behavior":"[contain|none|auto]{1,2}","overscroll-behavior-block":"contain|none|auto","overscroll-behavior-inline":"contain|none|auto","overscroll-behavior-x":"contain|none|auto","overscroll-behavior-y":"contain|none|auto",padding:"[<length>|<percentage>]{1,4}","padding-block":"<'padding-left'>{1,2}","padding-block-end":"<'padding-left'>","padding-block-start":"<'padding-left'>","padding-bottom":"<length>|<percentage>","padding-inline":"<'padding-left'>{1,2}","padding-inline-end":"<'padding-left'>","padding-inline-start":"<'padding-left'>","padding-left":"<length>|<percentage>","padding-right":"<length>|<percentage>","padding-top":"<length>|<percentage>",page:"auto|<custom-ident>","page-break-after":"auto|always|avoid|left|right|recto|verso","page-break-before":"auto|always|avoid|left|right|recto|verso","page-break-inside":"auto|avoid","paint-order":"normal|[fill||stroke||markers]",perspective:"none|<length>","perspective-origin":"<position>","place-content":"<'align-content'> <'justify-content'>?","place-items":"<'align-items'> <'justify-items'>?","place-self":"<'align-self'> <'justify-self'>?","pointer-events":"auto|none|visiblePainted|visibleFill|visibleStroke|visible|painted|fill|stroke|all|inherit",position:"static|relative|absolute|sticky|fixed|-webkit-sticky","position-anchor":"auto|<anchor-name>","position-area":"none|<position-area>","position-try":"<'position-try-order'>? <'position-try-fallbacks'>","position-try-fallbacks":"none|[[<dashed-ident>||<try-tactic>]|<'position-area'>]#","position-try-order":"normal|<try-size>","position-visibility":"always|[anchors-valid||anchors-visible||no-overflow]","print-color-adjust":"economy|exact",quotes:"none|auto|[<string> <string>]+",r:"<length>|<percentage>",resize:"none|both|horizontal|vertical|block|inline",right:"<length>|<percentage>|auto",rotate:"none|<angle>|[x|y|z|<number>{3}]&&<angle>","row-gap":"normal|<length-percentage>","ruby-align":"start|center|space-between|space-around","ruby-merge":"separate|collapse|auto","ruby-position":"[alternate||[over|under]]|inter-character",rx:"<length>|<percentage>",ry:"<length>|<percentage>",scale:"none|[<number>|<percentage>]{1,3}","scrollbar-color":"auto|<color>{2}","scrollbar-gutter":"auto|stable&&both-edges?","scrollbar-width":"auto|thin|none","scroll-behavior":"auto|smooth","scroll-margin":"<length>{1,4}","scroll-margin-block":"<length>{1,2}","scroll-margin-block-start":"<length>","scroll-margin-block-end":"<length>","scroll-margin-bottom":"<length>","scroll-margin-inline":"<length>{1,2}","scroll-margin-inline-start":"<length>","scroll-margin-inline-end":"<length>","scroll-margin-left":"<length>","scroll-margin-right":"<length>","scroll-margin-top":"<length>","scroll-padding":"[auto|<length-percentage>]{1,4}","scroll-padding-block":"[auto|<length-percentage>]{1,2}","scroll-padding-block-start":"auto|<length-percentage>","scroll-padding-block-end":"auto|<length-percentage>","scroll-padding-bottom":"auto|<length-percentage>","scroll-padding-inline":"[auto|<length-percentage>]{1,2}","scroll-padding-inline-start":"auto|<length-percentage>","scroll-padding-inline-end":"auto|<length-percentage>","scroll-padding-left":"auto|<length-percentage>","scroll-padding-right":"auto|<length-percentage>","scroll-padding-top":"auto|<length-percentage>","scroll-snap-align":"[none|start|end|center]{1,2}","scroll-snap-coordinate":"none|<position>#","scroll-snap-destination":"<position>","scroll-snap-points-x":"none|repeat( <length-percentage> )","scroll-snap-points-y":"none|repeat( <length-percentage> )","scroll-snap-stop":"normal|always","scroll-snap-type":"none|[x|y|block|inline|both] [mandatory|proximity]?","scroll-snap-type-x":"none|mandatory|proximity","scroll-snap-type-y":"none|mandatory|proximity","scroll-timeline":"[<'scroll-timeline-name'>||<'scroll-timeline-axis'>]#","scroll-timeline-axis":"[block|inline|x|y]#","scroll-timeline-name":"[none|<dashed-ident>]#","shape-image-threshold":"<alpha-value>","shape-margin":"<length-percentage>","shape-outside":"none|[<shape-box>||<basic-shape>]|<image>","shape-rendering":"auto|optimizeSpeed|crispEdges|geometricPrecision",stroke:"<paint>","stroke-dasharray":"none|[<svg-length>+]#","stroke-dashoffset":"<svg-length>","stroke-linecap":"butt|round|square","stroke-linejoin":"miter|round|bevel","stroke-miterlimit":"<number-one-or-greater>","stroke-opacity":"<'opacity'>","stroke-width":"<svg-length>","tab-size":"<integer>|<length>","table-layout":"auto|fixed","text-align":"start|end|left|right|center|justify|match-parent","text-align-last":"auto|start|end|left|right|center|justify","text-anchor":"start|middle|end","text-combine-upright":"none|all|[digits <integer>?]","text-decoration":"<'text-decoration-line'>||<'text-decoration-style'>||<'text-decoration-color'>||<'text-decoration-thickness'>","text-decoration-color":"<color>","text-decoration-line":"none|[underline||overline||line-through||blink]|spelling-error|grammar-error","text-decoration-skip":"none|[objects||[spaces|[leading-spaces||trailing-spaces]]||edges||box-decoration]","text-decoration-skip-ink":"auto|all|none","text-decoration-style":"solid|double|dotted|dashed|wavy","text-decoration-thickness":"auto|from-font|<length>|<percentage>","text-emphasis":"<'text-emphasis-style'>||<'text-emphasis-color'>","text-emphasis-color":"<color>","text-emphasis-position":"auto|[over|under]&&[right|left]?","text-emphasis-style":"none|[[filled|open]||[dot|circle|double-circle|triangle|sesame]]|<string>","text-indent":"<length-percentage>&&hanging?&&each-line?","text-justify":"auto|inter-character|inter-word|none","text-orientation":"mixed|upright|sideways","text-overflow":"[clip|ellipsis|<string>]{1,2}","text-rendering":"auto|optimizeSpeed|optimizeLegibility|geometricPrecision","text-shadow":"none|<shadow-t>#","text-size-adjust":"none|auto|<percentage>","text-spacing-trim":"space-all|normal|space-first|trim-start|trim-both|trim-all|auto","text-transform":"none|capitalize|uppercase|lowercase|full-width|full-size-kana","text-underline-offset":"auto|<length>|<percentage>","text-underline-position":"auto|from-font|[under||[left|right]]","text-wrap":"<'text-wrap-mode'>||<'text-wrap-style'>","text-wrap-mode":"auto|wrap|nowrap","text-wrap-style":"auto|balance|stable|pretty","timeline-scope":"none|<dashed-ident>#",top:"<length>|<percentage>|auto","touch-action":"auto|none|[[pan-x|pan-left|pan-right]||[pan-y|pan-up|pan-down]||pinch-zoom]|manipulation",transform:"none|<transform-list>","transform-box":"content-box|border-box|fill-box|stroke-box|view-box","transform-origin":"[<length-percentage>|left|center|right|top|bottom]|[[<length-percentage>|left|center|right]&&[<length-percentage>|top|center|bottom]] <length>?","transform-style":"flat|preserve-3d",transition:"<single-transition>#","transition-behavior":"<transition-behavior-value>#","transition-delay":"<time>#","transition-duration":"<time>#","transition-property":"none|<single-transition-property>#","transition-timing-function":"<easing-function>#",translate:"none|<length-percentage> [<length-percentage> <length>?]?","unicode-bidi":"normal|embed|isolate|bidi-override|isolate-override|plaintext|-moz-isolate|-moz-isolate-override|-moz-plaintext|-webkit-isolate|-webkit-isolate-override|-webkit-plaintext","user-select":"auto|text|none|contain|all","vector-effect":"none|non-scaling-stroke|non-scaling-size|non-rotation|fixed-position","vertical-align":"baseline|sub|super|text-top|text-bottom|middle|top|bottom|<percentage>|<length>","view-timeline":"[<'view-timeline-name'> <'view-timeline-axis'>?]#","view-timeline-axis":"[block|inline|x|y]#","view-timeline-inset":"[[auto|<length-percentage>]{1,2}]#","view-timeline-name":"none|<dashed-ident>#","view-transition-name":"none|<custom-ident>",visibility:"visible|hidden|collapse","white-space":"normal|pre|nowrap|pre-wrap|pre-line|break-spaces|[<'white-space-collapse'>||<'text-wrap'>||<'white-space-trim'>]","white-space-collapse":"collapse|discard|preserve|preserve-breaks|preserve-spaces|break-spaces",widows:"<integer>",width:"auto|<length>|<percentage>|min-content|max-content|fit-content|fit-content( <length-percentage> )|stretch|<-non-standard-size>","will-change":"auto|<animateable-feature>#","word-break":"normal|break-all|keep-all|break-word|auto-phrase","word-spacing":"normal|<length>","word-wrap":"normal|break-word","writing-mode":"horizontal-tb|vertical-rl|vertical-lr|sideways-rl|sideways-lr|<svg-writing-mode>",x:"<length>|<percentage>",y:"<length>|<percentage>","z-index":"auto|<integer>",zoom:"normal|reset|<number>|<percentage>","-moz-background-clip":"padding|border","-moz-border-radius-bottomleft":"<'border-bottom-left-radius'>","-moz-border-radius-bottomright":"<'border-bottom-right-radius'>","-moz-border-radius-topleft":"<'border-top-left-radius'>","-moz-border-radius-topright":"<'border-bottom-right-radius'>","-moz-control-character-visibility":"visible|hidden","-moz-osx-font-smoothing":"auto|grayscale","-moz-user-select":"none|text|all|-moz-none","-ms-flex-align":"start|end|center|baseline|stretch","-ms-flex-item-align":"auto|start|end|center|baseline|stretch","-ms-flex-line-pack":"start|end|center|justify|distribute|stretch","-ms-flex-negative":"<'flex-shrink'>","-ms-flex-pack":"start|end|center|justify|distribute","-ms-flex-order":"<integer>","-ms-flex-positive":"<'flex-grow'>","-ms-flex-preferred-size":"<'flex-basis'>","-ms-interpolation-mode":"nearest-neighbor|bicubic","-ms-grid-column-align":"start|end|center|stretch","-ms-grid-row-align":"start|end|center|stretch","-ms-hyphenate-limit-last":"none|always|column|page|spread","-webkit-background-clip":"[<box>|border|padding|content|text]#","-webkit-column-break-after":"always|auto|avoid","-webkit-column-break-before":"always|auto|avoid","-webkit-column-break-inside":"always|auto|avoid","-webkit-font-smoothing":"auto|none|antialiased|subpixel-antialiased","-webkit-mask-box-image":"[<url>|<gradient>|none] [<length-percentage>{4} <-webkit-mask-box-repeat>{2}]?","-webkit-print-color-adjust":"economy|exact","-webkit-text-security":"none|circle|disc|square","-webkit-user-drag":"none|element|auto","-webkit-user-select":"auto|none|text|all","alignment-baseline":"auto|baseline|before-edge|text-before-edge|middle|central|after-edge|text-after-edge|ideographic|alphabetic|hanging|mathematical","baseline-shift":"baseline|sub|super|<svg-length>",behavior:"<url>+",cue:"<'cue-before'> <'cue-after'>?","cue-after":"<url> <decibel>?|none","cue-before":"<url> <decibel>?|none","glyph-orientation-horizontal":"<angle>","glyph-orientation-vertical":"<angle>",kerning:"auto|<svg-length>",pause:"<'pause-before'> <'pause-after'>?","pause-after":"<time>|none|x-weak|weak|medium|strong|x-strong","pause-before":"<time>|none|x-weak|weak|medium|strong|x-strong",rest:"<'rest-before'> <'rest-after'>?","rest-after":"<time>|none|x-weak|weak|medium|strong|x-strong","rest-before":"<time>|none|x-weak|weak|medium|strong|x-strong",src:"[<url> [format( <string># )]?|local( <family-name> )]#",speak:"auto|never|always","speak-as":"normal|spell-out||digits||[literal-punctuation|no-punctuation]","unicode-range":"<urange>#","voice-balance":"<number>|left|center|right|leftwards|rightwards","voice-duration":"auto|<time>","voice-family":"[[<family-name>|<generic-voice>] ,]* [<family-name>|<generic-voice>]|preserve","voice-pitch":"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]","voice-range":"<frequency>&&absolute|[[x-low|low|medium|high|x-high]||[<frequency>|<semitones>|<percentage>]]","voice-rate":"[normal|x-slow|slow|medium|fast|x-fast]||<percentage>","voice-stress":"normal|strong|moderate|none|reduced","voice-volume":"silent|[[x-soft|soft|medium|loud|x-loud]||<decibel>]","white-space-trim":"none|discard-before||discard-after||discard-inner"},atrules:{charset:{prelude:"<string>",descriptors:null},"counter-style":{prelude:"<counter-style-name>",descriptors:{"additive-symbols":"[<integer>&&<symbol>]#",fallback:"<counter-style-name>",negative:"<symbol> <symbol>?",pad:"<integer>&&<symbol>",prefix:"<symbol>",range:"[[<integer>|infinite]{2}]#|auto","speak-as":"auto|bullets|numbers|words|spell-out|<counter-style-name>",suffix:"<symbol>",symbols:"<symbol>+",system:"cyclic|numeric|alphabetic|symbolic|additive|[fixed <integer>?]|[extends <counter-style-name>]"}},document:{prelude:"[<url>|url-prefix( <string> )|domain( <string> )|media-document( <string> )|regexp( <string> )]#",descriptors:null},"font-palette-values":{prelude:"<dashed-ident>",descriptors:{"base-palette":"light|dark|<integer [0,∞]>","font-family":"<family-name>#","override-colors":"[<integer [0,∞]> <absolute-color-base>]#"}},"font-face":{prelude:null,descriptors:{"ascent-override":"normal|<percentage>","descent-override":"normal|<percentage>","font-display":"[auto|block|swap|fallback|optional]","font-family":"<family-name>","font-feature-settings":"normal|<feature-tag-value>#","font-variation-settings":"normal|[<string> <number>]#","font-stretch":"<font-stretch-absolute>{1,2}","font-style":"normal|italic|oblique <angle>{0,2}","font-weight":"<font-weight-absolute>{1,2}","line-gap-override":"normal|<percentage>","size-adjust":"<percentage>",src:"[<url> [format( <string># )]?|local( <family-name> )]#","unicode-range":"<urange>#"}},"font-feature-values":{prelude:"<family-name>#",descriptors:null},import:{prelude:"[<string>|<url>] [layer|layer( <layer-name> )]? [supports( [<supports-condition>|<declaration>] )]? <media-query-list>?",descriptors:null},keyframes:{prelude:"<keyframes-name>",descriptors:null},layer:{prelude:"[<layer-name>#|<layer-name>?]",descriptors:null},media:{prelude:"<media-query-list>",descriptors:null},namespace:{prelude:"<namespace-prefix>? [<string>|<url>]",descriptors:null},page:{prelude:"<page-selector-list>",descriptors:{bleed:"auto|<length>",marks:"none|[crop||cross]","page-orientation":"upright|rotate-left|rotate-right",size:"<length>{1,2}|auto|[<page-size>||[portrait|landscape]]"}},"position-try":{prelude:"<dashed-ident>",descriptors:{top:"<'top'>",left:"<'left'>",bottom:"<'bottom'>",right:"<'right'>","inset-block-start":"<'inset-block-start'>","inset-block-end":"<'inset-block-end'>","inset-inline-start":"<'inset-inline-start'>","inset-inline-end":"<'inset-inline-end'>","inset-block":"<'inset-block'>","inset-inline":"<'inset-inline'>",inset:"<'inset'>","margin-top":"<'margin-top'>","margin-left":"<'margin-left'>","margin-bottom":"<'margin-bottom'>","margin-right":"<'margin-right'>","margin-block-start":"<'margin-block-start'>","margin-block-end":"<'margin-block-end'>","margin-inline-start":"<'margin-inline-start'>","margin-inline-end":"<'margin-inline-end'>",margin:"<'margin'>","margin-block":"<'margin-block'>","margin-inline":"<'margin-inline'>",width:"<'width'>",height:"<'height'>","min-width":"<'min-width'>","min-height":"<'min-height'>","max-width":"<'max-width'>","max-height":"<'max-height'>","block-size":"<'block-size'>","inline-size":"<'inline-size'>","min-block-size":"<'min-block-size'>","min-inline-size":"<'min-inline-size'>","max-block-size":"<'max-block-size'>","max-inline-size":"<'max-inline-size'>","align-self":"<'align-self'>|anchor-center","justify-self":"<'justify-self'>|anchor-center"}},property:{prelude:"<custom-property-name>",descriptors:{syntax:"<string>",inherits:"true|false","initial-value":"<declaration-value>?"}},scope:{prelude:"[( <scope-start> )]? [to ( <scope-end> )]?",descriptors:null},"starting-style":{prelude:null,descriptors:null},supports:{prelude:"<supports-condition>",descriptors:null},container:{prelude:"[<container-name>]? <container-condition>",descriptors:null},nest:{prelude:"<complex-selector-list>",descriptors:null}},node:node_namespaceObject};function defaultRecognizer(context){switch(this.tokenType){case Hash:return this.Hash();case Comma:return this.Operator();case LeftParenthesis:return this.Parentheses(this.readSequence,context.recognizer);case LeftSquareBracket:return this.Brackets(this.readSequence,context.recognizer);case types_String:return this.String();case Dimension:return this.Dimension();case Percentage:return this.Percentage();case types_Number:return this.Number();case Function:return this.cmpStr(this.tokenStart,this.tokenEnd,"url(")?this.Url():this.Function(this.readSequence,context.recognizer);case Url:return this.Url();case Ident:return this.cmpChar(this.tokenStart,117)&&this.cmpChar(this.tokenStart+1,43)?this.UnicodeRange():this.Identifier();case Delim:{const code=this.charCodeAt(this.tokenStart);if(47===code||42===code||43===code||45===code)return this.Operator();35===code&&this.error("Hex or identifier is expected",this.tokenStart+1);break}}}const atrulePrelude={getNode:defaultRecognizer};const selector={onWhiteSpace:function onWhiteSpace(next,children){null!==children.last&&"Combinator"!==children.last.type&&null!==next&&"Combinator"!==next.type&&children.push({type:"Combinator",loc:null,name:" "})},getNode:function getNode(){switch(this.tokenType){case LeftSquareBracket:return this.AttributeSelector();case Hash:return this.IdSelector();case Colon:return this.lookupType(1)===Colon?this.PseudoElementSelector():this.PseudoClassSelector();case Ident:return this.TypeSelector();case types_Number:case Percentage:return this.Percentage();case Dimension:46===this.charCodeAt(this.tokenStart)&&this.error("Identifier is expected",this.tokenStart+1);break;case Delim:switch(this.charCodeAt(this.tokenStart)){case 43:case 62:case 126:case 47:return this.Combinator();case 46:return this.ClassSelector();case 42:case 124:return this.TypeSelector();case 35:return this.IdSelector();case 38:return this.NestingSelector()}break}}};function isPlusMinusOperator(node){return null!==node&&"Operator"===node.type&&("-"===node.value[node.value.length-1]||"+"===node.value[node.value.length-1])}const value={getNode:defaultRecognizer,onWhiteSpace(next,children){isPlusMinusOperator(next)&&(next.value=" "+next.value),isPlusMinusOperator(children.last)&&(children.last.value+=" ")},expression:function expression(){return this.createSingleNodeList(this.Raw(null,!1))},var:function function_var(){const children=this.createList();if(this.skipSC(),children.push(this.Identifier()),this.skipSC(),this.tokenType===Comma){children.push(this.Operator());const startIndex=this.tokenIndex,value=this.parseCustomProperty?this.Value(null):this.Raw(this.consumeUntilExclamationMarkOrSemicolon,!1);if("Value"===value.type&&value.children.isEmpty)for(let offset=startIndex-this.tokenIndex;offset<=0;offset++)if(this.lookupType(offset)===WhiteSpace){value.children.appendData({type:"WhiteSpace",loc:null,value:" "});break}children.push(value)}return children}},nonContainerNameKeywords=new Set(["none","and","not","or"]),container={parse:{prelude(){const children=this.createList();if(this.tokenType===Ident){const name=this.substring(this.tokenStart,this.tokenEnd);nonContainerNameKeywords.has(name.toLowerCase())||children.push(this.Identifier())}return children.push(this.Condition("container")),children},block(nested=!1){return this.Block(nested)}}},font_face={parse:{prelude:null,block(){return this.Block(!0)}}};function parseWithFallback(parse,fallback){return this.parseWithFallback((()=>{try{return parse.call(this)}finally{this.skipSC(),this.lookupNonWSType(0)!==RightParenthesis&&this.error()}}),fallback||(()=>this.Raw(null,!0)))}const parseFunctions={layer(){this.skipSC();const children=this.createList(),node=parseWithFallback.call(this,this.Layer);return"Raw"===node.type&&""===node.value||children.push(node),children},supports(){this.skipSC();const children=this.createList(),node=parseWithFallback.call(this,this.Declaration,(()=>parseWithFallback.call(this,(()=>this.Condition("supports")))));return"Raw"===node.type&&""===node.value||children.push(node),children}},atrule={container,"font-face":font_face,import:{parse:{prelude(){const children=this.createList();switch(this.tokenType){case types_String:children.push(this.String());break;case Url:case Function:children.push(this.Url());break;default:this.error("String or url() is expected")}return this.skipSC(),this.tokenType===Ident&&this.cmpStr(this.tokenStart,this.tokenEnd,"layer")?children.push(this.Identifier()):this.tokenType===Function&&this.cmpStr(this.tokenStart,this.tokenEnd,"layer(")&&children.push(this.Function(null,parseFunctions)),this.skipSC(),this.tokenType===Function&&this.cmpStr(this.tokenStart,this.tokenEnd,"supports(")&&children.push(this.Function(null,parseFunctions)),this.lookupNonWSType(0)!==Ident&&this.lookupNonWSType(0)!==LeftParenthesis||children.push(this.MediaQueryList()),children},block:null}},layer:{parse:{prelude(){return this.createSingleNodeList(this.LayerList())},block(){return this.Block(!1)}}},media:{parse:{prelude(){return this.createSingleNodeList(this.MediaQueryList())},block(nested=!1){return this.Block(nested)}}},nest:{parse:{prelude(){return this.createSingleNodeList(this.SelectorList())},block(){return this.Block(!0)}}},page:{parse:{prelude(){return this.createSingleNodeList(this.SelectorList())},block(){return this.Block(!0)}}},scope:{parse:{prelude(){return this.createSingleNodeList(this.Scope())},block(nested=!1){return this.Block(nested)}}},"starting-style":{parse:{prelude:null,block(nested=!1){return this.Block(nested)}}},supports:{parse:{prelude(){return this.createSingleNodeList(this.Condition("supports"))},block(nested=!1){return this.Block(nested)}}}};const selectorList={parse(){return this.createSingleNodeList(this.SelectorList())}},pseudo_selector={parse(){return this.createSingleNodeList(this.Selector())}},identList={parse(){return this.createSingleNodeList(this.Identifier())}},langList={parse:function parseLanguageRangeList(){const children=this.createList();this.skipSC();loop:for(;!this.eof;){switch(this.tokenType){case Ident:children.push(this.Identifier());break;case types_String:children.push(this.String());break;case Comma:children.push(this.Operator());break;case RightParenthesis:break loop;default:this.error("Identifier, string or comma is expected")}this.skipSC()}return children}},nth={parse(){return this.createSingleNodeList(this.Nth())}},pseudo={dir:identList,has:selectorList,lang:langList,matches:selectorList,is:selectorList,"-moz-any":selectorList,"-webkit-any":selectorList,where:selectorList,not:selectorList,"nth-child":nth,"nth-last-child":nth,"nth-last-of-type":nth,"nth-of-type":nth,slotted:pseudo_selector,host:pseudo_selector,"host-context":pseudo_selector},syntax=createSyntax(mix({},{...lexer,...{parseContext:{default:"StyleSheet",stylesheet:"StyleSheet",atrule:"Atrule",atrulePrelude(options){return this.AtrulePrelude(options.atrule?String(options.atrule):null)},mediaQueryList:"MediaQueryList",mediaQuery:"MediaQuery",condition(options){return this.Condition(options.kind)},rule:"Rule",selectorList:"SelectorList",selector:"Selector",block(){return this.Block(!0)},declarationList:"DeclarationList",declaration:"Declaration",value:"Value"},features:{supports:{selector(){return this.Selector()}},container:{style(){return this.Declaration()}}},scope:scope_namespaceObject,atrule,pseudo,node:index_parse_namespaceObject},...{node:node_namespaceObject}}));const{tokenize:lib_tokenize,parse:lib_parse,generate:lib_generate,lexer:lib_lexer,createLexer,walk:lib_walk,find,findLast,findAll,toPlainObject,fromPlainObject,fork}=syntax},"./node_modules/source-map-js/lib/array-set.js":(__unused_webpack_module,exports,__webpack_require__)=>{var util=__webpack_require__("./node_modules/source-map-js/lib/util.js"),has=Object.prototype.hasOwnProperty,hasNativeMap="undefined"!=typeof Map;function ArraySet(){this._array=[],this._set=hasNativeMap?new Map:Object.create(null)}ArraySet.fromArray=function ArraySet_fromArray(aArray,aAllowDuplicates){for(var set=new ArraySet,i=0,len=aArray.length;i<len;i++)set.add(aArray[i],aAllowDuplicates);return set},ArraySet.prototype.size=function ArraySet_size(){return hasNativeMap?this._set.size:Object.getOwnPropertyNames(this._set).length},ArraySet.prototype.add=function ArraySet_add(aStr,aAllowDuplicates){var sStr=hasNativeMap?aStr:util.toSetString(aStr),isDuplicate=hasNativeMap?this.has(aStr):has.call(this._set,sStr),idx=this._array.length;isDuplicate&&!aAllowDuplicates||this._array.push(aStr),isDuplicate||(hasNativeMap?this._set.set(aStr,idx):this._set[sStr]=idx)},ArraySet.prototype.has=function ArraySet_has(aStr){if(hasNativeMap)return this._set.has(aStr);var sStr=util.toSetString(aStr);return has.call(this._set,sStr)},ArraySet.prototype.indexOf=function ArraySet_indexOf(aStr){if(hasNativeMap){var idx=this._set.get(aStr);if(idx>=0)return idx}else{var sStr=util.toSetString(aStr);if(has.call(this._set,sStr))return this._set[sStr]}throw new Error('"'+aStr+'" is not in the set.')},ArraySet.prototype.at=function ArraySet_at(aIdx){if(aIdx>=0&&aIdx<this._array.length)return this._array[aIdx];throw new Error("No element indexed by "+aIdx)},ArraySet.prototype.toArray=function ArraySet_toArray(){return this._array.slice()},exports.C=ArraySet},"./node_modules/source-map-js/lib/base64-vlq.js":(__unused_webpack_module,exports,__webpack_require__)=>{var base64=__webpack_require__("./node_modules/source-map-js/lib/base64.js");exports.encode=function base64VLQ_encode(aValue){var digit,encoded="",vlq=function toVLQSigned(aValue){return aValue<0?1+(-aValue<<1):0+(aValue<<1)}(aValue);do{digit=31&vlq,(vlq>>>=5)>0&&(digit|=32),encoded+=base64.encode(digit)}while(vlq>0);return encoded},exports.decode=function base64VLQ_decode(aStr,aIndex,aOutParam){var continuation,digit,strLen=aStr.length,result=0,shift=0;do{if(aIndex>=strLen)throw new Error("Expected more digits in base 64 VLQ value.");if(-1===(digit=base64.decode(aStr.charCodeAt(aIndex++))))throw new Error("Invalid base64 digit: "+aStr.charAt(aIndex-1));continuation=!!(32&digit),result+=(digit&=31)<<shift,shift+=5}while(continuation);aOutParam.value=function fromVLQSigned(aValue){var shifted=aValue>>1;return 1&~aValue?shifted:-shifted}(result),aOutParam.rest=aIndex}},"./node_modules/source-map-js/lib/base64.js":(__unused_webpack_module,exports)=>{var intToCharMap="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");exports.encode=function(number){if(0<=number&&number<intToCharMap.length)return intToCharMap[number];throw new TypeError("Must be between 0 and 63: "+number)},exports.decode=function(charCode){return 65<=charCode&&charCode<=90?charCode-65:97<=charCode&&charCode<=122?charCode-97+26:48<=charCode&&charCode<=57?charCode-48+52:43==charCode?62:47==charCode?63:-1}},"./node_modules/source-map-js/lib/mapping-list.js":(__unused_webpack_module,exports,__webpack_require__)=>{var util=__webpack_require__("./node_modules/source-map-js/lib/util.js");function MappingList(){this._array=[],this._sorted=!0,this._last={generatedLine:-1,generatedColumn:0}}MappingList.prototype.unsortedForEach=function MappingList_forEach(aCallback,aThisArg){this._array.forEach(aCallback,aThisArg)},MappingList.prototype.add=function MappingList_add(aMapping){!function generatedPositionAfter(mappingA,mappingB){var lineA=mappingA.generatedLine,lineB=mappingB.generatedLine,columnA=mappingA.generatedColumn,columnB=mappingB.generatedColumn;return lineB>lineA||lineB==lineA&&columnB>=columnA||util.compareByGeneratedPositionsInflated(mappingA,mappingB)<=0}(this._last,aMapping)?(this._sorted=!1,this._array.push(aMapping)):(this._last=aMapping,this._array.push(aMapping))},MappingList.prototype.toArray=function MappingList_toArray(){return this._sorted||(this._array.sort(util.compareByGeneratedPositionsInflated),this._sorted=!0),this._array},exports.P=MappingList},"./node_modules/source-map-js/lib/source-map-generator.js":(__unused_webpack_module,exports,__webpack_require__)=>{var base64VLQ=__webpack_require__("./node_modules/source-map-js/lib/base64-vlq.js"),util=__webpack_require__("./node_modules/source-map-js/lib/util.js"),ArraySet=__webpack_require__("./node_modules/source-map-js/lib/array-set.js").C,MappingList=__webpack_require__("./node_modules/source-map-js/lib/mapping-list.js").P;function SourceMapGenerator(aArgs){aArgs||(aArgs={}),this._file=util.getArg(aArgs,"file",null),this._sourceRoot=util.getArg(aArgs,"sourceRoot",null),this._skipValidation=util.getArg(aArgs,"skipValidation",!1),this._ignoreInvalidMapping=util.getArg(aArgs,"ignoreInvalidMapping",!1),this._sources=new ArraySet,this._names=new ArraySet,this._mappings=new MappingList,this._sourcesContents=null}SourceMapGenerator.prototype._version=3,SourceMapGenerator.fromSourceMap=function SourceMapGenerator_fromSourceMap(aSourceMapConsumer,generatorOps){var sourceRoot=aSourceMapConsumer.sourceRoot,generator=new SourceMapGenerator(Object.assign(generatorOps||{},{file:aSourceMapConsumer.file,sourceRoot}));return aSourceMapConsumer.eachMapping((function(mapping){var newMapping={generated:{line:mapping.generatedLine,column:mapping.generatedColumn}};null!=mapping.source&&(newMapping.source=mapping.source,null!=sourceRoot&&(newMapping.source=util.relative(sourceRoot,newMapping.source)),newMapping.original={line:mapping.originalLine,column:mapping.originalColumn},null!=mapping.name&&(newMapping.name=mapping.name)),generator.addMapping(newMapping)})),aSourceMapConsumer.sources.forEach((function(sourceFile){var sourceRelative=sourceFile;null!==sourceRoot&&(sourceRelative=util.relative(sourceRoot,sourceFile)),generator._sources.has(sourceRelative)||generator._sources.add(sourceRelative);var content=aSourceMapConsumer.sourceContentFor(sourceFile);null!=content&&generator.setSourceContent(sourceFile,content)})),generator},SourceMapGenerator.prototype.addMapping=function SourceMapGenerator_addMapping(aArgs){var generated=util.getArg(aArgs,"generated"),original=util.getArg(aArgs,"original",null),source=util.getArg(aArgs,"source",null),name=util.getArg(aArgs,"name",null);(this._skipValidation||!1!==this._validateMapping(generated,original,source,name))&&(null!=source&&(source=String(source),this._sources.has(source)||this._sources.add(source)),null!=name&&(name=String(name),this._names.has(name)||this._names.add(name)),this._mappings.add({generatedLine:generated.line,generatedColumn:generated.column,originalLine:null!=original&&original.line,originalColumn:null!=original&&original.column,source,name}))},SourceMapGenerator.prototype.setSourceContent=function SourceMapGenerator_setSourceContent(aSourceFile,aSourceContent){var source=aSourceFile;null!=this._sourceRoot&&(source=util.relative(this._sourceRoot,source)),null!=aSourceContent?(this._sourcesContents||(this._sourcesContents=Object.create(null)),this._sourcesContents[util.toSetString(source)]=aSourceContent):this._sourcesContents&&(delete this._sourcesContents[util.toSetString(source)],0===Object.keys(this._sourcesContents).length&&(this._sourcesContents=null))},SourceMapGenerator.prototype.applySourceMap=function SourceMapGenerator_applySourceMap(aSourceMapConsumer,aSourceFile,aSourceMapPath){var sourceFile=aSourceFile;if(null==aSourceFile){if(null==aSourceMapConsumer.file)throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');sourceFile=aSourceMapConsumer.file}var sourceRoot=this._sourceRoot;null!=sourceRoot&&(sourceFile=util.relative(sourceRoot,sourceFile));var newSources=new ArraySet,newNames=new ArraySet;this._mappings.unsortedForEach((function(mapping){if(mapping.source===sourceFile&&null!=mapping.originalLine){var original=aSourceMapConsumer.originalPositionFor({line:mapping.originalLine,column:mapping.originalColumn});null!=original.source&&(mapping.source=original.source,null!=aSourceMapPath&&(mapping.source=util.join(aSourceMapPath,mapping.source)),null!=sourceRoot&&(mapping.source=util.relative(sourceRoot,mapping.source)),mapping.originalLine=original.line,mapping.originalColumn=original.column,null!=original.name&&(mapping.name=original.name))}var source=mapping.source;null==source||newSources.has(source)||newSources.add(source);var name=mapping.name;null==name||newNames.has(name)||newNames.add(name)}),this),this._sources=newSources,this._names=newNames,aSourceMapConsumer.sources.forEach((function(sourceFile){var content=aSourceMapConsumer.sourceContentFor(sourceFile);null!=content&&(null!=aSourceMapPath&&(sourceFile=util.join(aSourceMapPath,sourceFile)),null!=sourceRoot&&(sourceFile=util.relative(sourceRoot,sourceFile)),this.setSourceContent(sourceFile,content))}),this)},SourceMapGenerator.prototype._validateMapping=function SourceMapGenerator_validateMapping(aGenerated,aOriginal,aSource,aName){if(aOriginal&&"number"!=typeof aOriginal.line&&"number"!=typeof aOriginal.column){var message="original.line and original.column are not numbers -- you probably meant to omit the original mapping entirely and only map the generated position. If so, pass null for the original mapping instead of an object with empty or null values.";if(this._ignoreInvalidMapping)return"undefined"!=typeof console&&console.warn&&console.warn(message),!1;throw new Error(message)}if((!(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aGenerated.line>0&&aGenerated.column>=0)||aOriginal||aSource||aName)&&!(aGenerated&&"line"in aGenerated&&"column"in aGenerated&&aOriginal&&"line"in aOriginal&&"column"in aOriginal&&aGenerated.line>0&&aGenerated.column>=0&&aOriginal.line>0&&aOriginal.column>=0&&aSource)){message="Invalid mapping: "+JSON.stringify({generated:aGenerated,source:aSource,original:aOriginal,name:aName});if(this._ignoreInvalidMapping)return"undefined"!=typeof console&&console.warn&&console.warn(message),!1;throw new Error(message)}},SourceMapGenerator.prototype._serializeMappings=function SourceMapGenerator_serializeMappings(){for(var next,mapping,nameIdx,sourceIdx,previousGeneratedColumn=0,previousGeneratedLine=1,previousOriginalColumn=0,previousOriginalLine=0,previousName=0,previousSource=0,result="",mappings=this._mappings.toArray(),i=0,len=mappings.length;i<len;i++){if(next="",(mapping=mappings[i]).generatedLine!==previousGeneratedLine)for(previousGeneratedColumn=0;mapping.generatedLine!==previousGeneratedLine;)next+=";",previousGeneratedLine++;else if(i>0){if(!util.compareByGeneratedPositionsInflated(mapping,mappings[i-1]))continue;next+=","}next+=base64VLQ.encode(mapping.generatedColumn-previousGeneratedColumn),previousGeneratedColumn=mapping.generatedColumn,null!=mapping.source&&(sourceIdx=this._sources.indexOf(mapping.source),next+=base64VLQ.encode(sourceIdx-previousSource),previousSource=sourceIdx,next+=base64VLQ.encode(mapping.originalLine-1-previousOriginalLine),previousOriginalLine=mapping.originalLine-1,next+=base64VLQ.encode(mapping.originalColumn-previousOriginalColumn),previousOriginalColumn=mapping.originalColumn,null!=mapping.name&&(nameIdx=this._names.indexOf(mapping.name),next+=base64VLQ.encode(nameIdx-previousName),previousName=nameIdx)),result+=next}return result},SourceMapGenerator.prototype._generateSourcesContent=function SourceMapGenerator_generateSourcesContent(aSources,aSourceRoot){return aSources.map((function(source){if(!this._sourcesContents)return null;null!=aSourceRoot&&(source=util.relative(aSourceRoot,source));var key=util.toSetString(source);return Object.prototype.hasOwnProperty.call(this._sourcesContents,key)?this._sourcesContents[key]:null}),this)},SourceMapGenerator.prototype.toJSON=function SourceMapGenerator_toJSON(){var map={version:this._version,sources:this._sources.toArray(),names:this._names.toArray(),mappings:this._serializeMappings()};return null!=this._file&&(map.file=this._file),null!=this._sourceRoot&&(map.sourceRoot=this._sourceRoot),this._sourcesContents&&(map.sourcesContent=this._generateSourcesContent(map.sources,map.sourceRoot)),map},SourceMapGenerator.prototype.toString=function SourceMapGenerator_toString(){return JSON.stringify(this.toJSON())},exports.x=SourceMapGenerator},"./node_modules/source-map-js/lib/util.js":(__unused_webpack_module,exports)=>{exports.getArg=function getArg(aArgs,aName,aDefaultValue){if(aName in aArgs)return aArgs[aName];if(3===arguments.length)return aDefaultValue;throw new Error('"'+aName+'" is a required argument.')};var urlRegexp=/^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.-]*)(?::(\d+))?(.*)$/,dataUrlRegexp=/^data:.+\,.+$/;function urlParse(aUrl){var match=aUrl.match(urlRegexp);return match?{scheme:match[1],auth:match[2],host:match[3],port:match[4],path:match[5]}:null}function urlGenerate(aParsedUrl){var url="";return aParsedUrl.scheme&&(url+=aParsedUrl.scheme+":"),url+="//",aParsedUrl.auth&&(url+=aParsedUrl.auth+"@"),aParsedUrl.host&&(url+=aParsedUrl.host),aParsedUrl.port&&(url+=":"+aParsedUrl.port),aParsedUrl.path&&(url+=aParsedUrl.path),url}exports.urlParse=urlParse,exports.urlGenerate=urlGenerate;var normalize=function lruMemoize(f){var cache=[];return function(input){for(var i=0;i<cache.length;i++)if(cache[i].input===input){var temp=cache[0];return cache[0]=cache[i],cache[i]=temp,cache[0].result}var result=f(input);return cache.unshift({input,result}),cache.length>32&&cache.pop(),result}}((function normalize(aPath){var path=aPath,url=urlParse(aPath);if(url){if(!url.path)return aPath;path=url.path}for(var isAbsolute=exports.isAbsolute(path),parts=[],start=0,i=0;;){if(start=i,-1===(i=path.indexOf("/",start))){parts.push(path.slice(start));break}for(parts.push(path.slice(start,i));i<path.length&&"/"===path[i];)i++}var part,up=0;for(i=parts.length-1;i>=0;i--)"."===(part=parts[i])?parts.splice(i,1):".."===part?up++:up>0&&(""===part?(parts.splice(i+1,up),up=0):(parts.splice(i,2),up--));return""===(path=parts.join("/"))&&(path=isAbsolute?"/":"."),url?(url.path=path,urlGenerate(url)):path}));function join(aRoot,aPath){""===aRoot&&(aRoot="."),""===aPath&&(aPath=".");var aPathUrl=urlParse(aPath),aRootUrl=urlParse(aRoot);if(aRootUrl&&(aRoot=aRootUrl.path||"/"),aPathUrl&&!aPathUrl.scheme)return aRootUrl&&(aPathUrl.scheme=aRootUrl.scheme),urlGenerate(aPathUrl);if(aPathUrl||aPath.match(dataUrlRegexp))return aPath;if(aRootUrl&&!aRootUrl.host&&!aRootUrl.path)return aRootUrl.host=aPath,urlGenerate(aRootUrl);var joined="/"===aPath.charAt(0)?aPath:normalize(aRoot.replace(/\/+$/,"")+"/"+aPath);return aRootUrl?(aRootUrl.path=joined,urlGenerate(aRootUrl)):joined}exports.normalize=normalize,exports.join=join,exports.isAbsolute=function(aPath){return"/"===aPath.charAt(0)||urlRegexp.test(aPath)},exports.relative=function relative(aRoot,aPath){""===aRoot&&(aRoot="."),aRoot=aRoot.replace(/\/$/,"");for(var level=0;0!==aPath.indexOf(aRoot+"/");){var index=aRoot.lastIndexOf("/");if(index<0)return aPath;if((aRoot=aRoot.slice(0,index)).match(/^([^\/]+:\/)?\/*$/))return aPath;++level}return Array(level+1).join("../")+aPath.substr(aRoot.length+1)};var supportsNullProto=!("__proto__"in Object.create(null));function identity(s){return s}function isProtoString(s){if(!s)return!1;var length=s.length;if(length<9)return!1;if(95!==s.charCodeAt(length-1)||95!==s.charCodeAt(length-2)||111!==s.charCodeAt(length-3)||116!==s.charCodeAt(length-4)||111!==s.charCodeAt(length-5)||114!==s.charCodeAt(length-6)||112!==s.charCodeAt(length-7)||95!==s.charCodeAt(length-8)||95!==s.charCodeAt(length-9))return!1;for(var i=length-10;i>=0;i--)if(36!==s.charCodeAt(i))return!1;return!0}function strcmp(aStr1,aStr2){return aStr1===aStr2?0:null===aStr1?1:null===aStr2?-1:aStr1>aStr2?1:-1}exports.toSetString=supportsNullProto?identity:function toSetString(aStr){return isProtoString(aStr)?"$"+aStr:aStr},exports.fromSetString=supportsNullProto?identity:function fromSetString(aStr){return isProtoString(aStr)?aStr.slice(1):aStr},exports.compareByOriginalPositions=function compareByOriginalPositions(mappingA,mappingB,onlyCompareOriginal){var cmp=strcmp(mappingA.source,mappingB.source);return 0!==cmp||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)||onlyCompareOriginal||0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||0!==(cmp=mappingA.generatedLine-mappingB.generatedLine)?cmp:strcmp(mappingA.name,mappingB.name)},exports.compareByOriginalPositionsNoSource=function compareByOriginalPositionsNoSource(mappingA,mappingB,onlyCompareOriginal){var cmp;return 0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)||onlyCompareOriginal||0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||0!==(cmp=mappingA.generatedLine-mappingB.generatedLine)?cmp:strcmp(mappingA.name,mappingB.name)},exports.compareByGeneratedPositionsDeflated=function compareByGeneratedPositionsDeflated(mappingA,mappingB,onlyCompareGenerated){var cmp=mappingA.generatedLine-mappingB.generatedLine;return 0!==cmp||0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||onlyCompareGenerated||0!==(cmp=strcmp(mappingA.source,mappingB.source))||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)?cmp:strcmp(mappingA.name,mappingB.name)},exports.compareByGeneratedPositionsDeflatedNoLine=function compareByGeneratedPositionsDeflatedNoLine(mappingA,mappingB,onlyCompareGenerated){var cmp=mappingA.generatedColumn-mappingB.generatedColumn;return 0!==cmp||onlyCompareGenerated||0!==(cmp=strcmp(mappingA.source,mappingB.source))||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)?cmp:strcmp(mappingA.name,mappingB.name)},exports.compareByGeneratedPositionsInflated=function compareByGeneratedPositionsInflated(mappingA,mappingB){var cmp=mappingA.generatedLine-mappingB.generatedLine;return 0!==cmp||0!==(cmp=mappingA.generatedColumn-mappingB.generatedColumn)||0!==(cmp=strcmp(mappingA.source,mappingB.source))||0!==(cmp=mappingA.originalLine-mappingB.originalLine)||0!==(cmp=mappingA.originalColumn-mappingB.originalColumn)?cmp:strcmp(mappingA.name,mappingB.name)},exports.parseSourceMapInput=function parseSourceMapInput(str){return JSON.parse(str.replace(/^\)]}'[^\n]*\n/,""))},exports.computeSourceURL=function computeSourceURL(sourceRoot,sourceURL,sourceMapURL){if(sourceURL=sourceURL||"",sourceRoot&&("/"!==sourceRoot[sourceRoot.length-1]&&"/"!==sourceURL[0]&&(sourceRoot+="/"),sourceURL=sourceRoot+sourceURL),sourceMapURL){var parsed=urlParse(sourceMapURL);if(!parsed)throw new Error("sourceMapURL could not be parsed");if(parsed.path){var index=parsed.path.lastIndexOf("/");index>=0&&(parsed.path=parsed.path.substring(0,index+1))}sourceURL=join(urlGenerate(parsed),sourceURL)}return normalize(sourceURL)}}}]);